### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  id: "JsonWebKey"
  parent: "com.azure.security.keyvault.certificates.models.webkey"
  children:
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.JsonWebKey()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.clearMemory()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.crv()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.crv(com.azure.security.keyvault.certificates.models.webkey.CertificateKeyCurveName)"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.d()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.d(byte[])"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dp()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dp(byte[])"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dq()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dq(byte[])"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.e()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.e(byte[])"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.equals(com.azure.security.keyvault.certificates.models.webkey.JsonWebKey)"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.equals(java.lang.Object)"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromAes(javax.crypto.SecretKey)"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromEC(java.security.KeyPair,java.security.Provider)"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromRSA(java.security.KeyPair)"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.hasPrivateKey()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.hashCode()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.isValid()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.k()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.k(byte[])"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.keyOps()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.keyOps(java.util.List<com.azure.security.keyvault.certificates.models.webkey.KeyOperation>)"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kid()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kid(java.lang.String)"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kty()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kty(com.azure.security.keyvault.certificates.models.webkey.CertificateKeyType)"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.n()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.n(byte[])"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.p()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.p(byte[])"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.q()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.q(byte[])"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.qi()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.qi(byte[])"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.t()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.t(byte[])"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toAes()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toEC()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toEC(boolean)"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toEC(boolean,java.security.Provider)"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toRSA()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toRSA(boolean)"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toRSA(boolean,java.security.Provider)"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toString()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.x()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.x(byte[])"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.y()"
  - "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.y(byte[])"
  langs:
  - "java"
  name: "JsonWebKey"
  nameWithType: "JsonWebKey"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  type: "Class"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "As of http://tools.ietf.org/html/draft-ietf-jose-json-web-key-18."
  syntax:
    content: "public class JsonWebKey"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.JsonWebKey()"
  id: "JsonWebKey()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "JsonWebKey()"
  nameWithType: "JsonWebKey.JsonWebKey()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.JsonWebKey()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.JsonWebKey*"
  type: "Constructor"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  syntax:
    content: "public JsonWebKey()"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.clearMemory()"
  id: "clearMemory()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "clearMemory()"
  nameWithType: "JsonWebKey.clearMemory()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.clearMemory()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.clearMemory*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Clear key materials."
  syntax:
    content: "public void clearMemory()"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.crv()"
  id: "crv()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "crv()"
  nameWithType: "JsonWebKey.crv()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.crv()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.crv*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Get the crv value."
  syntax:
    content: "public CertificateKeyCurveName crv()"
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.CertificateKeyCurveName"
      description: "the crv value"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.crv(com.azure.security.keyvault.certificates.models.webkey.CertificateKeyCurveName)"
  id: "crv(com.azure.security.keyvault.certificates.models.webkey.CertificateKeyCurveName)"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "crv(CertificateKeyCurveName crv)"
  nameWithType: "JsonWebKey.crv(CertificateKeyCurveName crv)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.crv(CertificateKeyCurveName crv)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.crv*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Set the crv value."
  syntax:
    content: "public JsonWebKey crv(CertificateKeyCurveName crv)"
    parameters:
    - id: "crv"
      type: "com.azure.security.keyvault.certificates.models.webkey.CertificateKeyCurveName"
      description: "The crv value to set"
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JsonWebKey object itself."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.d()"
  id: "d()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "d()"
  nameWithType: "JsonWebKey.d()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.d()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.d*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Get the d value."
  syntax:
    content: "public byte[] d()"
    return:
      type: "byte[]"
      description: "the d value"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.d(byte[])"
  id: "d(byte[])"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "d(byte[] d)"
  nameWithType: "JsonWebKey.d(byte[] d)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.d(byte[] d)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.d*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Set the d value."
  syntax:
    content: "public JsonWebKey d(byte[] d)"
    parameters:
    - id: "d"
      type: "byte[]"
      description: "The d value to set"
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JsonWebKey object itself."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dp()"
  id: "dp()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "dp()"
  nameWithType: "JsonWebKey.dp()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dp()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dp*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Get the RSA Private Key Parameter value."
  syntax:
    content: "public byte[] dp()"
    return:
      type: "byte[]"
      description: "the RSA Private Key Parameter value."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dp(byte[])"
  id: "dp(byte[])"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "dp(byte[] dp)"
  nameWithType: "JsonWebKey.dp(byte[] dp)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dp(byte[] dp)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dp*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Set RSA Private Key Parameter value."
  syntax:
    content: "public JsonWebKey dp(byte[] dp)"
    parameters:
    - id: "dp"
      type: "byte[]"
      description: "The RSA Private Key Parameter value to set."
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JsonWebKey object itself."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dq()"
  id: "dq()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "dq()"
  nameWithType: "JsonWebKey.dq()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dq()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dq*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Get the RSA Private Key Parameter value."
  syntax:
    content: "public byte[] dq()"
    return:
      type: "byte[]"
      description: "the RSA Private Key Parameter value."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dq(byte[])"
  id: "dq(byte[])"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "dq(byte[] dq)"
  nameWithType: "JsonWebKey.dq(byte[] dq)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dq(byte[] dq)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dq*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Set RSA Private Key Parameter value ."
  syntax:
    content: "public JsonWebKey dq(byte[] dq)"
    parameters:
    - id: "dq"
      type: "byte[]"
      description: "The RSA Private Key Parameter value to set."
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JsonWebKey object itself."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.e()"
  id: "e()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "e()"
  nameWithType: "JsonWebKey.e()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.e()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.e*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Get the e value."
  syntax:
    content: "public byte[] e()"
    return:
      type: "byte[]"
      description: "the e value"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.e(byte[])"
  id: "e(byte[])"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "e(byte[] e)"
  nameWithType: "JsonWebKey.e(byte[] e)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.e(byte[] e)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.e*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Set the e value."
  syntax:
    content: "public JsonWebKey e(byte[] e)"
    parameters:
    - id: "e"
      type: "byte[]"
      description: "The e value to set"
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JsonWebKey object itself."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.equals(com.azure.security.keyvault.certificates.models.webkey.JsonWebKey)"
  id: "equals(com.azure.security.keyvault.certificates.models.webkey.JsonWebKey)"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "equals(JsonWebKey jwk)"
  nameWithType: "JsonWebKey.equals(JsonWebKey jwk)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.equals(JsonWebKey jwk)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.equals*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Indicates whether some other <xref uid=\"com.azure.security.keyvault.certificates.models.webkey.JsonWebKey\" data-throw-if-not-resolved=\"false\">JsonWebKey</xref> is \"equal to\" this one."
  syntax:
    content: "public boolean equals(JsonWebKey jwk)"
    parameters:
    - id: "jwk"
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "The other <xref uid=\"com.azure.security.keyvault.certificates.models.webkey.JsonWebKey\" data-throw-if-not-resolved=\"false\">JsonWebKey</xref> to compare with."
    return:
      type: "boolean"
      description: "true if this <xref uid=\"com.azure.security.keyvault.certificates.models.webkey.JsonWebKey\" data-throw-if-not-resolved=\"false\">JsonWebKey</xref> is the same as the jwk argument;\n         false otherwise."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.equals(java.lang.Object)"
  id: "equals(java.lang.Object)"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "equals(Object obj)"
  nameWithType: "JsonWebKey.equals(Object obj)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.equals(Object obj)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.equals*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  syntax:
    content: "public boolean equals(Object obj)"
    parameters:
    - id: "obj"
      type: "java.lang.Object"
    return:
      type: "boolean"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromAes(javax.crypto.SecretKey)"
  id: "fromAes(javax.crypto.SecretKey)"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "fromAes(SecretKey secretKey)"
  nameWithType: "JsonWebKey.fromAes(SecretKey secretKey)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromAes(SecretKey secretKey)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromAes*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Converts AES key to JSON web key."
  syntax:
    content: "public static JsonWebKey fromAes(SecretKey secretKey)"
    parameters:
    - id: "secretKey"
      type: "javax.crypto.SecretKey"
      description: "The AES key"
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JSON web key, converted from AES key."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromEC(java.security.KeyPair,java.security.Provider)"
  id: "fromEC(java.security.KeyPair,java.security.Provider)"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "fromEC(KeyPair keyPair, Provider provider)"
  nameWithType: "JsonWebKey.fromEC(KeyPair keyPair, Provider provider)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromEC(KeyPair keyPair, Provider provider)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromEC*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Converts EC key pair to JSON web key."
  syntax:
    content: "public static JsonWebKey fromEC(KeyPair keyPair, Provider provider)"
    parameters:
    - id: "keyPair"
      type: "java.security.KeyPair"
      description: "The EC key pair"
    - id: "provider"
      type: "java.security.Provider"
      description: "The Java security provider"
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JSON web key, converted from EC key pair."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromRSA(java.security.KeyPair)"
  id: "fromRSA(java.security.KeyPair)"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "fromRSA(KeyPair keyPair)"
  nameWithType: "JsonWebKey.fromRSA(KeyPair keyPair)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromRSA(KeyPair keyPair)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromRSA*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Converts RSA key pair to JSON web key."
  syntax:
    content: "public static JsonWebKey fromRSA(KeyPair keyPair)"
    parameters:
    - id: "keyPair"
      type: "java.security.KeyPair"
      description: "Tbe RSA key pair"
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JSON web key, converted from RSA key pair."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.hasPrivateKey()"
  id: "hasPrivateKey()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "hasPrivateKey()"
  nameWithType: "JsonWebKey.hasPrivateKey()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.hasPrivateKey()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.hasPrivateKey*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Verifies whether the <xref uid=\"com.azure.security.keyvault.certificates.models.webkey.JsonWebKey\" data-throw-if-not-resolved=\"false\">JsonWebKey</xref> has private key."
  syntax:
    content: "public boolean hasPrivateKey()"
    return:
      type: "boolean"
      description: "true if the <xref uid=\"com.azure.security.keyvault.certificates.models.webkey.JsonWebKey\" data-throw-if-not-resolved=\"false\">JsonWebKey</xref> has private key; false otherwise."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.hashCode()"
  id: "hashCode()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "hashCode()"
  nameWithType: "JsonWebKey.hashCode()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.hashCode()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.hashCode*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  syntax:
    content: "public int hashCode()"
    return:
      type: "int"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.isValid()"
  id: "isValid()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "isValid()"
  nameWithType: "JsonWebKey.isValid()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.isValid()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.isValid*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Verifies whether the <xref uid=\"com.azure.security.keyvault.certificates.models.webkey.JsonWebKey\" data-throw-if-not-resolved=\"false\">JsonWebKey</xref> is valid."
  syntax:
    content: "public boolean isValid()"
    return:
      type: "boolean"
      description: "true if the <xref uid=\"com.azure.security.keyvault.certificates.models.webkey.JsonWebKey\" data-throw-if-not-resolved=\"false\">JsonWebKey</xref> is valid; false otherwise."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.k()"
  id: "k()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "k()"
  nameWithType: "JsonWebKey.k()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.k()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.k*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Get Symmetric key value."
  syntax:
    content: "public byte[] k()"
    return:
      type: "byte[]"
      description: "the symmetric key value."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.k(byte[])"
  id: "k(byte[])"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "k(byte[] k)"
  nameWithType: "JsonWebKey.k(byte[] k)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.k(byte[] k)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.k*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Set the Symmetric key value."
  syntax:
    content: "public JsonWebKey k(byte[] k)"
    parameters:
    - id: "k"
      type: "byte[]"
      description: "The symmetric key value to set."
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JsonWebKey object itself."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.keyOps()"
  id: "keyOps()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "keyOps()"
  nameWithType: "JsonWebKey.keyOps()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.keyOps()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.keyOps*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Get the keyOps value."
  syntax:
    content: "public List<KeyOperation> keyOps()"
    return:
      type: "java.util.List<com.azure.security.keyvault.certificates.models.webkey.KeyOperation>"
      description: "the keyOps value"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.keyOps(java.util.List<com.azure.security.keyvault.certificates.models.webkey.KeyOperation>)"
  id: "keyOps(java.util.List<com.azure.security.keyvault.certificates.models.webkey.KeyOperation>)"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "keyOps(List<KeyOperation> keyOps)"
  nameWithType: "JsonWebKey.keyOps(List<KeyOperation> keyOps)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.keyOps(List<KeyOperation> keyOps)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.keyOps*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Set the keyOps value."
  syntax:
    content: "public JsonWebKey keyOps(List<KeyOperation> keyOps)"
    parameters:
    - id: "keyOps"
      type: "java.util.List<com.azure.security.keyvault.certificates.models.webkey.KeyOperation>"
      description: "The keyOps value to set"
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JsonWebKey object itself."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kid()"
  id: "kid()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "kid()"
  nameWithType: "JsonWebKey.kid()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kid()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kid*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Get the kid value."
  syntax:
    content: "public String kid()"
    return:
      type: "java.lang.String"
      description: "the kid value"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kid(java.lang.String)"
  id: "kid(java.lang.String)"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "kid(String kid)"
  nameWithType: "JsonWebKey.kid(String kid)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kid(String kid)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kid*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Set the key identifier value."
  syntax:
    content: "public JsonWebKey kid(String kid)"
    parameters:
    - id: "kid"
      type: "java.lang.String"
      description: "The kid value to set"
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JsonWebKey object itself."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kty()"
  id: "kty()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "kty()"
  nameWithType: "JsonWebKey.kty()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kty()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kty*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Get the kty value."
  syntax:
    content: "public CertificateKeyType kty()"
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.CertificateKeyType"
      description: "the kty value"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kty(com.azure.security.keyvault.certificates.models.webkey.CertificateKeyType)"
  id: "kty(com.azure.security.keyvault.certificates.models.webkey.CertificateKeyType)"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "kty(CertificateKeyType kty)"
  nameWithType: "JsonWebKey.kty(CertificateKeyType kty)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kty(CertificateKeyType kty)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kty*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Set the key type value."
  syntax:
    content: "public JsonWebKey kty(CertificateKeyType kty)"
    parameters:
    - id: "kty"
      type: "com.azure.security.keyvault.certificates.models.webkey.CertificateKeyType"
      description: "The key type"
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JsonWebKey object itself."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.n()"
  id: "n()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "n()"
  nameWithType: "JsonWebKey.n()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.n()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.n*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Get the n value."
  syntax:
    content: "public byte[] n()"
    return:
      type: "byte[]"
      description: "the n value"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.n(byte[])"
  id: "n(byte[])"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "n(byte[] n)"
  nameWithType: "JsonWebKey.n(byte[] n)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.n(byte[] n)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.n*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Set the n value."
  syntax:
    content: "public JsonWebKey n(byte[] n)"
    parameters:
    - id: "n"
      type: "byte[]"
      description: "The n value to set"
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JsonWebKey object itself."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.p()"
  id: "p()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "p()"
  nameWithType: "JsonWebKey.p()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.p()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.p*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Get the RSA secret prime value."
  syntax:
    content: "public byte[] p()"
    return:
      type: "byte[]"
      description: "the RSA secret prime value."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.p(byte[])"
  id: "p(byte[])"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "p(byte[] p)"
  nameWithType: "JsonWebKey.p(byte[] p)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.p(byte[] p)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.p*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Set the RSA secret prime value."
  syntax:
    content: "public JsonWebKey p(byte[] p)"
    parameters:
    - id: "p"
      type: "byte[]"
      description: "The RSA secret prime value."
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JsonWebKey object itself."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.q()"
  id: "q()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "q()"
  nameWithType: "JsonWebKey.q()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.q()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.q*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Get RSA secret prime, with p < q value."
  syntax:
    content: "public byte[] q()"
    return:
      type: "byte[]"
      description: "the RSA secret prime, with p &lt; q value."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.q(byte[])"
  id: "q(byte[])"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "q(byte[] q)"
  nameWithType: "JsonWebKey.q(byte[] q)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.q(byte[] q)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.q*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Set the RSA secret prime, with p < q value."
  syntax:
    content: "public JsonWebKey q(byte[] q)"
    parameters:
    - id: "q"
      type: "byte[]"
      description: "The the RSA secret prime, with p &lt; q value to be set."
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JsonWebKey object itself."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.qi()"
  id: "qi()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "qi()"
  nameWithType: "JsonWebKey.qi()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.qi()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.qi*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Get the RSA Private Key Parameter value."
  syntax:
    content: "public byte[] qi()"
    return:
      type: "byte[]"
      description: "the RSA Private Key Parameter value."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.qi(byte[])"
  id: "qi(byte[])"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "qi(byte[] qi)"
  nameWithType: "JsonWebKey.qi(byte[] qi)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.qi(byte[] qi)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.qi*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Set RSA Private Key Parameter value."
  syntax:
    content: "public JsonWebKey qi(byte[] qi)"
    parameters:
    - id: "qi"
      type: "byte[]"
      description: "The RSA Private Key Parameter value to set."
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JsonWebKey object itself."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.t()"
  id: "t()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "t()"
  nameWithType: "JsonWebKey.t()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.t()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.t*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Get HSM Token value, used with Bring Your Own Key."
  syntax:
    content: "public byte[] t()"
    return:
      type: "byte[]"
      description: "HSM Token, used with Bring Your Own Key."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.t(byte[])"
  id: "t(byte[])"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "t(byte[] t)"
  nameWithType: "JsonWebKey.t(byte[] t)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.t(byte[] t)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.t*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Set HSM Token value, used with Bring Your Own Key."
  syntax:
    content: "public JsonWebKey t(byte[] t)"
    parameters:
    - id: "t"
      type: "byte[]"
      description: "The HSM Token value to set, used with Bring Your Own Key"
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JsonWebKey object itself."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toAes()"
  id: "toAes()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "toAes()"
  nameWithType: "JsonWebKey.toAes()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toAes()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toAes*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Converts JSON web key to AES key."
  syntax:
    content: "public SecretKey toAes()"
    return:
      type: "javax.crypto.SecretKey"
      description: "AES key"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toEC()"
  id: "toEC()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "toEC()"
  nameWithType: "JsonWebKey.toEC()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toEC()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toEC*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Converts JSON web key to EC key pair and include the private key if set to true."
  syntax:
    content: "public KeyPair toEC()"
    return:
      type: "java.security.KeyPair"
      description: "EC key pair"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toEC(boolean)"
  id: "toEC(boolean)"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "toEC(boolean includePrivateParameters)"
  nameWithType: "JsonWebKey.toEC(boolean includePrivateParameters)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toEC(boolean includePrivateParameters)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toEC*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Converts JSON web key to EC key pair and include the private key if set to true."
  syntax:
    content: "public KeyPair toEC(boolean includePrivateParameters)"
    parameters:
    - id: "includePrivateParameters"
      type: "boolean"
      description: "true if the EC key pair should include the private key. False otherwise."
    return:
      type: "java.security.KeyPair"
      description: "EC key pair"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toEC(boolean,java.security.Provider)"
  id: "toEC(boolean,java.security.Provider)"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "toEC(boolean includePrivateParameters, Provider provider)"
  nameWithType: "JsonWebKey.toEC(boolean includePrivateParameters, Provider provider)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toEC(boolean includePrivateParameters, Provider provider)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toEC*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Converts JSON web key to EC key pair and include the private key if set to true."
  syntax:
    content: "public KeyPair toEC(boolean includePrivateParameters, Provider provider)"
    parameters:
    - id: "includePrivateParameters"
      type: "boolean"
      description: "true if the EC key pair should include the private key. False otherwise."
    - id: "provider"
      type: "java.security.Provider"
      description: "The Java security provider"
    return:
      type: "java.security.KeyPair"
      description: "EC key pair"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toRSA()"
  id: "toRSA()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "toRSA()"
  nameWithType: "JsonWebKey.toRSA()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toRSA()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toRSA*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Converts JSON web key to RSA key pair."
  syntax:
    content: "public KeyPair toRSA()"
    return:
      type: "java.security.KeyPair"
      description: "RSA key pair"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toRSA(boolean)"
  id: "toRSA(boolean)"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "toRSA(boolean includePrivateParameters)"
  nameWithType: "JsonWebKey.toRSA(boolean includePrivateParameters)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toRSA(boolean includePrivateParameters)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toRSA*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Converts JSON web key to RSA key pair and include the private key if set to true."
  syntax:
    content: "public KeyPair toRSA(boolean includePrivateParameters)"
    parameters:
    - id: "includePrivateParameters"
      type: "boolean"
      description: "true if the RSA key pair should include the private key. False otherwise."
    return:
      type: "java.security.KeyPair"
      description: "RSA key pair"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toRSA(boolean,java.security.Provider)"
  id: "toRSA(boolean,java.security.Provider)"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "toRSA(boolean includePrivateParameters, Provider provider)"
  nameWithType: "JsonWebKey.toRSA(boolean includePrivateParameters, Provider provider)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toRSA(boolean includePrivateParameters, Provider provider)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toRSA*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Converts JSON web key to RSA key pair and include the private key if set to true."
  syntax:
    content: "public KeyPair toRSA(boolean includePrivateParameters, Provider provider)"
    parameters:
    - id: "includePrivateParameters"
      type: "boolean"
      description: "true if the RSA key pair should include the private key. False otherwise."
    - id: "provider"
      type: "java.security.Provider"
      description: "The Java security provider."
    return:
      type: "java.security.KeyPair"
      description: "RSA key pair"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toString()"
  id: "toString()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "JsonWebKey.toString()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toString()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toString*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.x()"
  id: "x()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "x()"
  nameWithType: "JsonWebKey.x()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.x()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.x*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Get the x value."
  syntax:
    content: "public byte[] x()"
    return:
      type: "byte[]"
      description: "the x value"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.x(byte[])"
  id: "x(byte[])"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "x(byte[] x)"
  nameWithType: "JsonWebKey.x(byte[] x)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.x(byte[] x)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.x*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Set the x value."
  syntax:
    content: "public JsonWebKey x(byte[] x)"
    parameters:
    - id: "x"
      type: "byte[]"
      description: "The x value to set"
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JsonWebKey object itself."
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.y()"
  id: "y()"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "y()"
  nameWithType: "JsonWebKey.y()"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.y()"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.y*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Get the y value."
  syntax:
    content: "public byte[] y()"
    return:
      type: "byte[]"
      description: "the y value"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.y(byte[])"
  id: "y(byte[])"
  parent: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
  langs:
  - "java"
  name: "y(byte[] y)"
  nameWithType: "JsonWebKey.y(byte[] y)"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.y(byte[] y)"
  overload: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.y*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models.webkey"
  summary: "Set the y value."
  syntax:
    content: "public JsonWebKey y(byte[] y)"
    parameters:
    - id: "y"
      type: "byte[]"
      description: "The y value to set"
    return:
      type: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey"
      description: "the JsonWebKey object itself."
references:
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.JsonWebKey*"
  name: "JsonWebKey"
  nameWithType: "JsonWebKey.JsonWebKey"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.JsonWebKey"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kid*"
  name: "kid"
  nameWithType: "JsonWebKey.kid"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kid"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.CertificateKeyType"
  name: "CertificateKeyType"
  nameWithType: "CertificateKeyType"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.CertificateKeyType"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kty*"
  name: "kty"
  nameWithType: "JsonWebKey.kty"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.kty"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "java.util.List<com.azure.security.keyvault.certificates.models.webkey.KeyOperation>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.security.keyvault.certificates.models.webkey.KeyOperation"
    name: "KeyOperation"
    fullName: "com.azure.security.keyvault.certificates.models.webkey.KeyOperation"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.keyOps*"
  name: "keyOps"
  nameWithType: "JsonWebKey.keyOps"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.keyOps"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.n*"
  name: "n"
  nameWithType: "JsonWebKey.n"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.n"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.e*"
  name: "e"
  nameWithType: "JsonWebKey.e"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.e"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.d*"
  name: "d"
  nameWithType: "JsonWebKey.d"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.d"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dp*"
  name: "dp"
  nameWithType: "JsonWebKey.dp"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dp"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dq*"
  name: "dq"
  nameWithType: "JsonWebKey.dq"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.dq"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.qi*"
  name: "qi"
  nameWithType: "JsonWebKey.qi"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.qi"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.p*"
  name: "p"
  nameWithType: "JsonWebKey.p"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.p"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.q*"
  name: "q"
  nameWithType: "JsonWebKey.q"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.q"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.k*"
  name: "k"
  nameWithType: "JsonWebKey.k"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.k"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.t*"
  name: "t"
  nameWithType: "JsonWebKey.t"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.t"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toString*"
  name: "toString"
  nameWithType: "JsonWebKey.toString"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toString"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.CertificateKeyCurveName"
  name: "CertificateKeyCurveName"
  nameWithType: "CertificateKeyCurveName"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.CertificateKeyCurveName"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.crv*"
  name: "crv"
  nameWithType: "JsonWebKey.crv"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.crv"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.x*"
  name: "x"
  nameWithType: "JsonWebKey.x"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.x"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.y*"
  name: "y"
  nameWithType: "JsonWebKey.y"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.y"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "java.security.KeyPair"
  spec.java:
  - uid: "java.security.KeyPair"
    name: "KeyPair"
    fullName: "java.security.KeyPair"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromRSA*"
  name: "fromRSA"
  nameWithType: "JsonWebKey.fromRSA"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromRSA"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toRSA*"
  name: "toRSA"
  nameWithType: "JsonWebKey.toRSA"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toRSA"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "java.security.Provider"
  spec.java:
  - uid: "java.security.Provider"
    name: "Provider"
    fullName: "java.security.Provider"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toEC*"
  name: "toEC"
  nameWithType: "JsonWebKey.toEC"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toEC"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromEC*"
  name: "fromEC"
  nameWithType: "JsonWebKey.fromEC"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromEC"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "javax.crypto.SecretKey"
  spec.java:
  - uid: "javax.crypto.SecretKey"
    name: "SecretKey"
    fullName: "javax.crypto.SecretKey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromAes*"
  name: "fromAes"
  nameWithType: "JsonWebKey.fromAes"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.fromAes"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toAes*"
  name: "toAes"
  nameWithType: "JsonWebKey.toAes"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.toAes"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.equals*"
  name: "equals"
  nameWithType: "JsonWebKey.equals"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.equals"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.hasPrivateKey*"
  name: "hasPrivateKey"
  nameWithType: "JsonWebKey.hasPrivateKey"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.hasPrivateKey"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.isValid*"
  name: "isValid"
  nameWithType: "JsonWebKey.isValid"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.isValid"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.clearMemory*"
  name: "clearMemory"
  nameWithType: "JsonWebKey.clearMemory"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.clearMemory"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.hashCode*"
  name: "hashCode"
  nameWithType: "JsonWebKey.hashCode"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.JsonWebKey.hashCode"
  package: "com.azure.security.keyvault.certificates.models.webkey"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "com.azure.security.keyvault.certificates.models.webkey.KeyOperation"
  name: "KeyOperation"
  nameWithType: "KeyOperation"
  fullName: "com.azure.security.keyvault.certificates.models.webkey.KeyOperation"
