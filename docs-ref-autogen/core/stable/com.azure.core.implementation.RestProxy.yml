### YamlMime:ManagedReference
items:
- uid: "com.azure.core.implementation.RestProxy"
  id: "RestProxy"
  parent: "com.azure.core.implementation"
  children:
  - "com.azure.core.implementation.RestProxy.<A>create(java.lang.Class<A>)"
  - "com.azure.core.implementation.RestProxy.<A>create(java.lang.Class<A>,com.azure.core.http.HttpPipeline)"
  - "com.azure.core.implementation.RestProxy.<A>create(java.lang.Class<A>,com.azure.core.http.HttpPipeline,com.azure.core.implementation.serializer.SerializerAdapter)"
  - "com.azure.core.implementation.RestProxy.RestProxy(com.azure.core.http.HttpPipeline,com.azure.core.implementation.serializer.SerializerAdapter,com.azure.core.implementation.SwaggerInterfaceParser)"
  - "com.azure.core.implementation.RestProxy.createDefaultPipeline()"
  - "com.azure.core.implementation.RestProxy.createDefaultPipeline(com.azure.core.credential.TokenCredential)"
  - "com.azure.core.implementation.RestProxy.createDefaultPipeline(com.azure.core.http.policy.HttpPipelinePolicy)"
  - "com.azure.core.implementation.RestProxy.ensureExpectedStatus(com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse,com.azure.core.implementation.SwaggerMethodParser,int[])"
  - "com.azure.core.implementation.RestProxy.getSerializer()"
  - "com.azure.core.implementation.RestProxy.handleBodyReturnType(com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse,com.azure.core.implementation.SwaggerMethodParser,java.lang.reflect.Type)"
  - "com.azure.core.implementation.RestProxy.handleHttpResponse(com.azure.core.http.HttpRequest,reactor.core.publisher.Mono<com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse>,com.azure.core.implementation.SwaggerMethodParser,java.lang.reflect.Type,com.azure.core.util.Context)"
  - "com.azure.core.implementation.RestProxy.handleRestReturnType(reactor.core.publisher.Mono<com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse>,com.azure.core.implementation.SwaggerMethodParser,java.lang.reflect.Type,com.azure.core.util.Context)"
  - "com.azure.core.implementation.RestProxy.handleResumeOperation(com.azure.core.http.HttpRequest,com.azure.core.implementation.OperationDescription,com.azure.core.implementation.SwaggerMethodParser,java.lang.reflect.Type,com.azure.core.util.Context)"
  - "com.azure.core.implementation.RestProxy.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
  - "com.azure.core.implementation.RestProxy.send(com.azure.core.http.HttpRequest,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "RestProxy"
  nameWithType: "RestProxy"
  fullName: "com.azure.core.implementation.RestProxy"
  type: "Class"
  package: "com.azure.core.implementation"
  summary: "Type to create a proxy implementation for an interface describing REST API methods. RestProxy can create proxy implementations for interfaces with methods that return deserialized Java objects as well as asynchronous Single objects that resolve to a deserialized Java object."
  syntax:
    content: "public class RestProxy implements InvocationHandler"
  inheritance:
  - "java.lang.Object"
  implements:
  - "java.lang.reflect.InvocationHandler"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.implementation.RestProxy.<A>create(java.lang.Class<A>)"
  id: "<A>create(java.lang.Class<A>)"
  parent: "com.azure.core.implementation.RestProxy"
  langs:
  - "java"
  name: "<A>create(Class<A> swaggerInterface)"
  nameWithType: "RestProxy.<A>create(Class<A> swaggerInterface)"
  fullName: "com.azure.core.implementation.RestProxy.<A>create(Class<A> swaggerInterface)"
  overload: "com.azure.core.implementation.RestProxy.create*"
  type: "Method"
  package: "com.azure.core.implementation"
  summary: "Create a proxy implementation of the provided Swagger interface."
  syntax:
    content: "public static A <A>create(Class<A> swaggerInterface)"
    parameters:
    - id: "swaggerInterface"
      type: "java.lang.Class<A>"
      description: "the Swagger interface to provide a proxy implementation for"
    return:
      type: "A"
      description: "a proxy implementation of the provided Swagger interface"
- uid: "com.azure.core.implementation.RestProxy.<A>create(java.lang.Class<A>,com.azure.core.http.HttpPipeline)"
  id: "<A>create(java.lang.Class<A>,com.azure.core.http.HttpPipeline)"
  parent: "com.azure.core.implementation.RestProxy"
  langs:
  - "java"
  name: "<A>create(Class<A> swaggerInterface, HttpPipeline httpPipeline)"
  nameWithType: "RestProxy.<A>create(Class<A> swaggerInterface, HttpPipeline httpPipeline)"
  fullName: "com.azure.core.implementation.RestProxy.<A>create(Class<A> swaggerInterface, HttpPipeline httpPipeline)"
  overload: "com.azure.core.implementation.RestProxy.create*"
  type: "Method"
  package: "com.azure.core.implementation"
  summary: "Create a proxy implementation of the provided Swagger interface."
  syntax:
    content: "public static A <A>create(Class<A> swaggerInterface, HttpPipeline httpPipeline)"
    parameters:
    - id: "swaggerInterface"
      type: "java.lang.Class<A>"
      description: "the Swagger interface to provide a proxy implementation for"
    - id: "httpPipeline"
      type: "com.azure.core.http.HttpPipeline"
      description: "the HttpPipelinePolicy and HttpClient pipeline that will be used to send Http requests"
    return:
      type: "A"
      description: "a proxy implementation of the provided Swagger interface"
- uid: "com.azure.core.implementation.RestProxy.<A>create(java.lang.Class<A>,com.azure.core.http.HttpPipeline,com.azure.core.implementation.serializer.SerializerAdapter)"
  id: "<A>create(java.lang.Class<A>,com.azure.core.http.HttpPipeline,com.azure.core.implementation.serializer.SerializerAdapter)"
  parent: "com.azure.core.implementation.RestProxy"
  langs:
  - "java"
  name: "<A>create(Class<A> swaggerInterface, HttpPipeline httpPipeline, SerializerAdapter serializer)"
  nameWithType: "RestProxy.<A>create(Class<A> swaggerInterface, HttpPipeline httpPipeline, SerializerAdapter serializer)"
  fullName: "com.azure.core.implementation.RestProxy.<A>create(Class<A> swaggerInterface, HttpPipeline httpPipeline, SerializerAdapter serializer)"
  overload: "com.azure.core.implementation.RestProxy.create*"
  type: "Method"
  package: "com.azure.core.implementation"
  summary: "Create a proxy implementation of the provided Swagger interface."
  syntax:
    content: "public static A <A>create(Class<A> swaggerInterface, HttpPipeline httpPipeline, SerializerAdapter serializer)"
    parameters:
    - id: "swaggerInterface"
      type: "java.lang.Class<A>"
      description: "the Swagger interface to provide a proxy implementation for"
    - id: "httpPipeline"
      type: "com.azure.core.http.HttpPipeline"
      description: "the HttpPipelinePolicy and HttpClient pipline that will be used to send Http\n     requests"
    - id: "serializer"
      type: "com.azure.core.implementation.serializer.SerializerAdapter"
      description: "the serializer that will be used to convert POJOs to and from request and\n     response bodies"
    return:
      type: "A"
      description: "a proxy implementation of the provided Swagger interface"
- uid: "com.azure.core.implementation.RestProxy.RestProxy(com.azure.core.http.HttpPipeline,com.azure.core.implementation.serializer.SerializerAdapter,com.azure.core.implementation.SwaggerInterfaceParser)"
  id: "RestProxy(com.azure.core.http.HttpPipeline,com.azure.core.implementation.serializer.SerializerAdapter,com.azure.core.implementation.SwaggerInterfaceParser)"
  parent: "com.azure.core.implementation.RestProxy"
  langs:
  - "java"
  name: "RestProxy(HttpPipeline httpPipeline, SerializerAdapter serializer, SwaggerInterfaceParser interfaceParser)"
  nameWithType: "RestProxy.RestProxy(HttpPipeline httpPipeline, SerializerAdapter serializer, SwaggerInterfaceParser interfaceParser)"
  fullName: "com.azure.core.implementation.RestProxy.RestProxy(HttpPipeline httpPipeline, SerializerAdapter serializer, SwaggerInterfaceParser interfaceParser)"
  overload: "com.azure.core.implementation.RestProxy.RestProxy*"
  type: "Constructor"
  package: "com.azure.core.implementation"
  summary: "Create a RestProxy."
  syntax:
    content: "public RestProxy(HttpPipeline httpPipeline, SerializerAdapter serializer, SwaggerInterfaceParser interfaceParser)"
    parameters:
    - id: "httpPipeline"
      type: "com.azure.core.http.HttpPipeline"
      description: "the HttpPipelinePolicy and HttpClient httpPipeline that will be used to send HTTP\n     requests."
    - id: "serializer"
      type: "com.azure.core.implementation.serializer.SerializerAdapter"
      description: "the serializer that will be used to convert response bodies to POJOs."
    - id: "interfaceParser"
      type: "com.azure.core.implementation.SwaggerInterfaceParser"
      description: "the parser that contains information about the interface describing REST API methods\n     that this RestProxy \"implements\"."
- uid: "com.azure.core.implementation.RestProxy.createDefaultPipeline()"
  id: "createDefaultPipeline()"
  parent: "com.azure.core.implementation.RestProxy"
  langs:
  - "java"
  name: "createDefaultPipeline()"
  nameWithType: "RestProxy.createDefaultPipeline()"
  fullName: "com.azure.core.implementation.RestProxy.createDefaultPipeline()"
  overload: "com.azure.core.implementation.RestProxy.createDefaultPipeline*"
  type: "Method"
  package: "com.azure.core.implementation"
  summary: "Create the default HttpPipeline."
  syntax:
    content: "public static HttpPipeline createDefaultPipeline()"
    return:
      type: "com.azure.core.http.HttpPipeline"
      description: "the default HttpPipeline"
- uid: "com.azure.core.implementation.RestProxy.createDefaultPipeline(com.azure.core.credential.TokenCredential)"
  id: "createDefaultPipeline(com.azure.core.credential.TokenCredential)"
  parent: "com.azure.core.implementation.RestProxy"
  langs:
  - "java"
  name: "createDefaultPipeline(TokenCredential credentials)"
  nameWithType: "RestProxy.createDefaultPipeline(TokenCredential credentials)"
  fullName: "com.azure.core.implementation.RestProxy.createDefaultPipeline(TokenCredential credentials)"
  overload: "com.azure.core.implementation.RestProxy.createDefaultPipeline*"
  type: "Method"
  package: "com.azure.core.implementation"
  summary: "Create the default HttpPipeline."
  syntax:
    content: "public static HttpPipeline createDefaultPipeline(TokenCredential credentials)"
    parameters:
    - id: "credentials"
      type: "com.azure.core.credential.TokenCredential"
      description: "the credentials to use to apply authentication to the pipeline"
    return:
      type: "com.azure.core.http.HttpPipeline"
      description: "the default HttpPipeline"
- uid: "com.azure.core.implementation.RestProxy.createDefaultPipeline(com.azure.core.http.policy.HttpPipelinePolicy)"
  id: "createDefaultPipeline(com.azure.core.http.policy.HttpPipelinePolicy)"
  parent: "com.azure.core.implementation.RestProxy"
  langs:
  - "java"
  name: "createDefaultPipeline(HttpPipelinePolicy credentialsPolicy)"
  nameWithType: "RestProxy.createDefaultPipeline(HttpPipelinePolicy credentialsPolicy)"
  fullName: "com.azure.core.implementation.RestProxy.createDefaultPipeline(HttpPipelinePolicy credentialsPolicy)"
  overload: "com.azure.core.implementation.RestProxy.createDefaultPipeline*"
  type: "Method"
  package: "com.azure.core.implementation"
  summary: "Create the default HttpPipeline."
  syntax:
    content: "public static HttpPipeline createDefaultPipeline(HttpPipelinePolicy credentialsPolicy)"
    parameters:
    - id: "credentialsPolicy"
      type: "com.azure.core.http.policy.HttpPipelinePolicy"
      description: "the credentials policy factory to use to apply authentication to the\n     pipeline"
    return:
      type: "com.azure.core.http.HttpPipeline"
      description: "the default HttpPipeline"
- uid: "com.azure.core.implementation.RestProxy.ensureExpectedStatus(com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse,com.azure.core.implementation.SwaggerMethodParser,int[])"
  id: "ensureExpectedStatus(com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse,com.azure.core.implementation.SwaggerMethodParser,int[])"
  parent: "com.azure.core.implementation.RestProxy"
  langs:
  - "java"
  name: "ensureExpectedStatus(HttpResponseDecoder.HttpDecodedResponse decodedResponse, SwaggerMethodParser methodParser, int[] additionalAllowedStatusCodes)"
  nameWithType: "RestProxy.ensureExpectedStatus(HttpResponseDecoder.HttpDecodedResponse decodedResponse, SwaggerMethodParser methodParser, int[] additionalAllowedStatusCodes)"
  fullName: "com.azure.core.implementation.RestProxy.ensureExpectedStatus(HttpResponseDecoder.HttpDecodedResponse decodedResponse, SwaggerMethodParser methodParser, int[] additionalAllowedStatusCodes)"
  overload: "com.azure.core.implementation.RestProxy.ensureExpectedStatus*"
  type: "Method"
  package: "com.azure.core.implementation"
  summary: "Create a publisher that (1) emits error if the provided response `decodedResponse` has 'disallowed status code' OR (2) emits provided response if it's status code ia allowed. 'disallowed status code' is one of the status code defined in the provided SwaggerMethodParser or is in the int\\[\\] of additional allowed status codes."
  syntax:
    content: "public Mono<HttpResponseDecoder.HttpDecodedResponse> ensureExpectedStatus(HttpResponseDecoder.HttpDecodedResponse decodedResponse, SwaggerMethodParser methodParser, int[] additionalAllowedStatusCodes)"
    parameters:
    - id: "decodedResponse"
      type: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse"
      description: "The HttpResponse to check."
    - id: "methodParser"
      type: "com.azure.core.implementation.SwaggerMethodParser"
      description: "The method parser that contains information about the service interface\n     method that initiated the HTTP request."
    - id: "additionalAllowedStatusCodes"
      type: "int[]"
      description: "Additional allowed status codes that are permitted based\n     on the context of the HTTP request."
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse>"
      description: "An async-version of the provided decodedResponse."
- uid: "com.azure.core.implementation.RestProxy.getSerializer()"
  id: "getSerializer()"
  parent: "com.azure.core.implementation.RestProxy"
  langs:
  - "java"
  name: "getSerializer()"
  nameWithType: "RestProxy.getSerializer()"
  fullName: "com.azure.core.implementation.RestProxy.getSerializer()"
  overload: "com.azure.core.implementation.RestProxy.getSerializer*"
  type: "Method"
  package: "com.azure.core.implementation"
  summary: "Get the SerializerAdapter used by this RestProxy."
  syntax:
    content: "public SerializerAdapter getSerializer()"
    return:
      type: "com.azure.core.implementation.serializer.SerializerAdapter"
      description: "The SerializerAdapter used by this RestProxy"
- uid: "com.azure.core.implementation.RestProxy.handleBodyReturnType(com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse,com.azure.core.implementation.SwaggerMethodParser,java.lang.reflect.Type)"
  id: "handleBodyReturnType(com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse,com.azure.core.implementation.SwaggerMethodParser,java.lang.reflect.Type)"
  parent: "com.azure.core.implementation.RestProxy"
  langs:
  - "java"
  name: "handleBodyReturnType(HttpResponseDecoder.HttpDecodedResponse response, SwaggerMethodParser methodParser, Type entityType)"
  nameWithType: "RestProxy.handleBodyReturnType(HttpResponseDecoder.HttpDecodedResponse response, SwaggerMethodParser methodParser, Type entityType)"
  fullName: "com.azure.core.implementation.RestProxy.handleBodyReturnType(HttpResponseDecoder.HttpDecodedResponse response, SwaggerMethodParser methodParser, Type entityType)"
  overload: "com.azure.core.implementation.RestProxy.handleBodyReturnType*"
  type: "Method"
  package: "com.azure.core.implementation"
  syntax:
    content: "protected final Mono<?> handleBodyReturnType(HttpResponseDecoder.HttpDecodedResponse response, SwaggerMethodParser methodParser, Type entityType)"
    parameters:
    - id: "response"
      type: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse"
    - id: "methodParser"
      type: "com.azure.core.implementation.SwaggerMethodParser"
    - id: "entityType"
      type: "java.lang.reflect.Type"
    return:
      type: "reactor.core.publisher.Mono<?>"
- uid: "com.azure.core.implementation.RestProxy.handleHttpResponse(com.azure.core.http.HttpRequest,reactor.core.publisher.Mono<com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse>,com.azure.core.implementation.SwaggerMethodParser,java.lang.reflect.Type,com.azure.core.util.Context)"
  id: "handleHttpResponse(com.azure.core.http.HttpRequest,reactor.core.publisher.Mono<com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse>,com.azure.core.implementation.SwaggerMethodParser,java.lang.reflect.Type,com.azure.core.util.Context)"
  parent: "com.azure.core.implementation.RestProxy"
  langs:
  - "java"
  name: "handleHttpResponse(HttpRequest httpRequest, Mono<HttpResponseDecoder.HttpDecodedResponse> asyncDecodedHttpResponse, SwaggerMethodParser methodParser, Type returnType, Context context)"
  nameWithType: "RestProxy.handleHttpResponse(HttpRequest httpRequest, Mono<HttpResponseDecoder.HttpDecodedResponse> asyncDecodedHttpResponse, SwaggerMethodParser methodParser, Type returnType, Context context)"
  fullName: "com.azure.core.implementation.RestProxy.handleHttpResponse(HttpRequest httpRequest, Mono<HttpResponseDecoder.HttpDecodedResponse> asyncDecodedHttpResponse, SwaggerMethodParser methodParser, Type returnType, Context context)"
  overload: "com.azure.core.implementation.RestProxy.handleHttpResponse*"
  type: "Method"
  package: "com.azure.core.implementation"
  syntax:
    content: "protected Object handleHttpResponse(HttpRequest httpRequest, Mono<HttpResponseDecoder.HttpDecodedResponse> asyncDecodedHttpResponse, SwaggerMethodParser methodParser, Type returnType, Context context)"
    parameters:
    - id: "httpRequest"
      type: "com.azure.core.http.HttpRequest"
    - id: "asyncDecodedHttpResponse"
      type: "reactor.core.publisher.Mono<com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse>"
    - id: "methodParser"
      type: "com.azure.core.implementation.SwaggerMethodParser"
    - id: "returnType"
      type: "java.lang.reflect.Type"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "java.lang.Object"
- uid: "com.azure.core.implementation.RestProxy.handleRestReturnType(reactor.core.publisher.Mono<com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse>,com.azure.core.implementation.SwaggerMethodParser,java.lang.reflect.Type,com.azure.core.util.Context)"
  id: "handleRestReturnType(reactor.core.publisher.Mono<com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse>,com.azure.core.implementation.SwaggerMethodParser,java.lang.reflect.Type,com.azure.core.util.Context)"
  parent: "com.azure.core.implementation.RestProxy"
  langs:
  - "java"
  name: "handleRestReturnType(Mono<HttpResponseDecoder.HttpDecodedResponse> asyncHttpDecodedResponse, SwaggerMethodParser methodParser, Type returnType, Context context)"
  nameWithType: "RestProxy.handleRestReturnType(Mono<HttpResponseDecoder.HttpDecodedResponse> asyncHttpDecodedResponse, SwaggerMethodParser methodParser, Type returnType, Context context)"
  fullName: "com.azure.core.implementation.RestProxy.handleRestReturnType(Mono<HttpResponseDecoder.HttpDecodedResponse> asyncHttpDecodedResponse, SwaggerMethodParser methodParser, Type returnType, Context context)"
  overload: "com.azure.core.implementation.RestProxy.handleRestReturnType*"
  type: "Method"
  package: "com.azure.core.implementation"
  summary: "Handle the provided asynchronous HTTP response and return the deserialized value."
  syntax:
    content: "public final Object handleRestReturnType(Mono<HttpResponseDecoder.HttpDecodedResponse> asyncHttpDecodedResponse, SwaggerMethodParser methodParser, Type returnType, Context context)"
    parameters:
    - id: "asyncHttpDecodedResponse"
      type: "reactor.core.publisher.Mono<com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse>"
      description: "the asynchronous HTTP response to the original HTTP request"
    - id: "methodParser"
      type: "com.azure.core.implementation.SwaggerMethodParser"
      description: "the SwaggerMethodParser that the request originates from"
    - id: "returnType"
      type: "java.lang.reflect.Type"
      description: "the type of value that will be returned"
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "java.lang.Object"
      description: "the deserialized result"
- uid: "com.azure.core.implementation.RestProxy.handleResumeOperation(com.azure.core.http.HttpRequest,com.azure.core.implementation.OperationDescription,com.azure.core.implementation.SwaggerMethodParser,java.lang.reflect.Type,com.azure.core.util.Context)"
  id: "handleResumeOperation(com.azure.core.http.HttpRequest,com.azure.core.implementation.OperationDescription,com.azure.core.implementation.SwaggerMethodParser,java.lang.reflect.Type,com.azure.core.util.Context)"
  parent: "com.azure.core.implementation.RestProxy"
  langs:
  - "java"
  name: "handleResumeOperation(HttpRequest httpRequest, OperationDescription operationDescription, SwaggerMethodParser methodParser, Type returnType, Context context)"
  nameWithType: "RestProxy.handleResumeOperation(HttpRequest httpRequest, OperationDescription operationDescription, SwaggerMethodParser methodParser, Type returnType, Context context)"
  fullName: "com.azure.core.implementation.RestProxy.handleResumeOperation(HttpRequest httpRequest, OperationDescription operationDescription, SwaggerMethodParser methodParser, Type returnType, Context context)"
  overload: "com.azure.core.implementation.RestProxy.handleResumeOperation*"
  type: "Method"
  package: "com.azure.core.implementation"
  syntax:
    content: "protected Object handleResumeOperation(HttpRequest httpRequest, OperationDescription operationDescription, SwaggerMethodParser methodParser, Type returnType, Context context)"
    parameters:
    - id: "httpRequest"
      type: "com.azure.core.http.HttpRequest"
    - id: "operationDescription"
      type: "com.azure.core.implementation.OperationDescription"
    - id: "methodParser"
      type: "com.azure.core.implementation.SwaggerMethodParser"
    - id: "returnType"
      type: "java.lang.reflect.Type"
    - id: "context"
      type: "com.azure.core.util.Context"
    return:
      type: "java.lang.Object"
- uid: "com.azure.core.implementation.RestProxy.invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
  id: "invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
  parent: "com.azure.core.implementation.RestProxy"
  langs:
  - "java"
  name: "invoke(Object proxy, Method method, Object[] args)"
  nameWithType: "RestProxy.invoke(Object proxy, Method method, Object[] args)"
  fullName: "com.azure.core.implementation.RestProxy.invoke(Object proxy, Method method, Object[] args)"
  overload: "com.azure.core.implementation.RestProxy.invoke*"
  type: "Method"
  package: "com.azure.core.implementation"
  syntax:
    content: "public Object invoke(Object proxy, Method method, Object[] args)"
    parameters:
    - id: "proxy"
      type: "java.lang.Object"
    - id: "method"
      type: "java.lang.reflect.Method"
    - id: "args"
      type: "java.lang.Object[]"
    return:
      type: "java.lang.Object"
- uid: "com.azure.core.implementation.RestProxy.send(com.azure.core.http.HttpRequest,com.azure.core.util.Context)"
  id: "send(com.azure.core.http.HttpRequest,com.azure.core.util.Context)"
  parent: "com.azure.core.implementation.RestProxy"
  langs:
  - "java"
  name: "send(HttpRequest request, Context contextData)"
  nameWithType: "RestProxy.send(HttpRequest request, Context contextData)"
  fullName: "com.azure.core.implementation.RestProxy.send(HttpRequest request, Context contextData)"
  overload: "com.azure.core.implementation.RestProxy.send*"
  type: "Method"
  package: "com.azure.core.implementation"
  summary: "Send the provided request asynchronously, applying any request policies provided to the HttpClient instance."
  syntax:
    content: "public Mono<HttpResponse> send(HttpRequest request, Context contextData)"
    parameters:
    - id: "request"
      type: "com.azure.core.http.HttpRequest"
      description: "the HTTP request to send"
    - id: "contextData"
      type: "com.azure.core.util.Context"
      description: "the context"
    return:
      type: "reactor.core.publisher.Mono<com.azure.core.http.HttpResponse>"
      description: "a <xref uid=\"reactor.core.publisher.Mono\" data-throw-if-not-resolved=\"false\">Mono</xref> that emits HttpResponse asynchronously"
references:
- uid: "com.azure.core.http.HttpPipeline"
  name: "HttpPipeline"
  nameWithType: "HttpPipeline"
  fullName: "com.azure.core.http.HttpPipeline"
- uid: "com.azure.core.implementation.serializer.SerializerAdapter"
  name: "SerializerAdapter"
  nameWithType: "SerializerAdapter"
  fullName: "com.azure.core.implementation.serializer.SerializerAdapter"
- uid: "com.azure.core.implementation.SwaggerInterfaceParser"
  name: "SwaggerInterfaceParser"
  nameWithType: "SwaggerInterfaceParser"
  fullName: "com.azure.core.implementation.SwaggerInterfaceParser"
- uid: "com.azure.core.implementation.RestProxy.RestProxy*"
  name: "RestProxy"
  nameWithType: "RestProxy.RestProxy"
  fullName: "com.azure.core.implementation.RestProxy.RestProxy"
  package: "com.azure.core.implementation"
- uid: "com.azure.core.implementation.RestProxy.getSerializer*"
  name: "getSerializer"
  nameWithType: "RestProxy.getSerializer"
  fullName: "com.azure.core.implementation.RestProxy.getSerializer"
  package: "com.azure.core.implementation"
- uid: "com.azure.core.http.HttpRequest"
  name: "HttpRequest"
  nameWithType: "HttpRequest"
  fullName: "com.azure.core.http.HttpRequest"
- uid: "com.azure.core.util.Context"
  name: "Context"
  nameWithType: "Context"
  fullName: "com.azure.core.util.Context"
- uid: "reactor.core.publisher.Mono<com.azure.core.http.HttpResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.HttpResponse"
    name: "HttpResponse"
    fullName: "com.azure.core.http.HttpResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.implementation.RestProxy.send*"
  name: "send"
  nameWithType: "RestProxy.send"
  fullName: "com.azure.core.implementation.RestProxy.send"
  package: "com.azure.core.implementation"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "java.lang.reflect.Method"
  spec.java:
  - uid: "java.lang.reflect.Method"
    name: "Method"
    fullName: "java.lang.reflect.Method"
- uid: "java.lang.Object[]"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.core.implementation.RestProxy.invoke*"
  name: "invoke"
  nameWithType: "RestProxy.invoke"
  fullName: "com.azure.core.implementation.RestProxy.invoke"
  package: "com.azure.core.implementation"
- uid: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse"
  name: "HttpResponseDecoder.HttpDecodedResponse"
  nameWithType: "HttpResponseDecoder.HttpDecodedResponse"
  fullName: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse"
- uid: "com.azure.core.implementation.SwaggerMethodParser"
  name: "SwaggerMethodParser"
  nameWithType: "SwaggerMethodParser"
  fullName: "com.azure.core.implementation.SwaggerMethodParser"
- uid: "int[]"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
  - name: "[]"
    fullName: "[]"
- uid: "reactor.core.publisher.Mono<com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse"
    name: "HttpDecodedResponse"
    fullName: "com.azure.core.implementation.serializer.HttpResponseDecoder.HttpDecodedResponse"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.implementation.RestProxy.ensureExpectedStatus*"
  name: "ensureExpectedStatus"
  nameWithType: "RestProxy.ensureExpectedStatus"
  fullName: "com.azure.core.implementation.RestProxy.ensureExpectedStatus"
  package: "com.azure.core.implementation"
- uid: "java.lang.reflect.Type"
  spec.java:
  - uid: "java.lang.reflect.Type"
    name: "Type"
    fullName: "java.lang.reflect.Type"
- uid: "reactor.core.publisher.Mono<?>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.implementation.RestProxy.handleBodyReturnType*"
  name: "handleBodyReturnType"
  nameWithType: "RestProxy.handleBodyReturnType"
  fullName: "com.azure.core.implementation.RestProxy.handleBodyReturnType"
  package: "com.azure.core.implementation"
- uid: "com.azure.core.implementation.RestProxy.handleHttpResponse*"
  name: "handleHttpResponse"
  nameWithType: "RestProxy.handleHttpResponse"
  fullName: "com.azure.core.implementation.RestProxy.handleHttpResponse"
  package: "com.azure.core.implementation"
- uid: "com.azure.core.implementation.OperationDescription"
  name: "OperationDescription"
  nameWithType: "OperationDescription"
  fullName: "com.azure.core.implementation.OperationDescription"
- uid: "com.azure.core.implementation.RestProxy.handleResumeOperation*"
  name: "handleResumeOperation"
  nameWithType: "RestProxy.handleResumeOperation"
  fullName: "com.azure.core.implementation.RestProxy.handleResumeOperation"
  package: "com.azure.core.implementation"
- uid: "com.azure.core.implementation.RestProxy.handleRestReturnType*"
  name: "handleRestReturnType"
  nameWithType: "RestProxy.handleRestReturnType"
  fullName: "com.azure.core.implementation.RestProxy.handleRestReturnType"
  package: "com.azure.core.implementation"
- uid: "com.azure.core.implementation.RestProxy.createDefaultPipeline*"
  name: "createDefaultPipeline"
  nameWithType: "RestProxy.createDefaultPipeline"
  fullName: "com.azure.core.implementation.RestProxy.createDefaultPipeline"
  package: "com.azure.core.implementation"
- uid: "com.azure.core.credential.TokenCredential"
  name: "TokenCredential"
  nameWithType: "TokenCredential"
  fullName: "com.azure.core.credential.TokenCredential"
- uid: "com.azure.core.http.policy.HttpPipelinePolicy"
  name: "HttpPipelinePolicy"
  nameWithType: "HttpPipelinePolicy"
  fullName: "com.azure.core.http.policy.HttpPipelinePolicy"
- uid: "java.lang.Class<A>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "A"
    name: "A"
    fullName: "A"
  - name: ">"
    fullName: ">"
- uid: "A"
  spec.java:
  - uid: "A"
    name: "A"
    fullName: "A"
- uid: "com.azure.core.implementation.RestProxy.create*"
  name: "<A>create"
  nameWithType: "RestProxy.<A>create"
  fullName: "com.azure.core.implementation.RestProxy.<A>create"
  package: "com.azure.core.implementation"
- uid: "java.lang.reflect.InvocationHandler"
  name: "InvocationHandler"
  nameWithType: "InvocationHandler"
  fullName: "java.lang.reflect.InvocationHandler"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.core.http.HttpResponse"
  name: "HttpResponse"
  nameWithType: "HttpResponse"
  fullName: "com.azure.core.http.HttpResponse"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
