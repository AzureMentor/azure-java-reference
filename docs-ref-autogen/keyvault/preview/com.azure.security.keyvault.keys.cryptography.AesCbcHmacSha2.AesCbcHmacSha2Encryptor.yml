### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor"
  id: "AesCbcHmacSha2Encryptor"
  parent: "com.azure.security.keyvault.keys.cryptography"
  children:
  - "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.AesCbcHmacSha2Encryptor(java.lang.String,byte[],byte[],byte[],java.security.Provider)"
  - "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.aadLength"
  - "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.doFinal(byte[])"
  - "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.getTag()"
  - "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.hmac"
  - "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.hmacKey"
  - "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.inner"
  - "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.tag"
  langs:
  - "java"
  name: "AesCbcHmacSha2.AesCbcHmacSha2Encryptor"
  nameWithType: "AesCbcHmacSha2.AesCbcHmacSha2Encryptor"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor"
  type: "Class"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "static class AesCbcHmacSha2.AesCbcHmacSha2Encryptor implements IAuthenticatedCryptoTransform"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.security.keyvault.keys.cryptography.IAuthenticatedCryptoTransform"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.AesCbcHmacSha2Encryptor(java.lang.String,byte[],byte[],byte[],java.security.Provider)"
  id: "AesCbcHmacSha2Encryptor(java.lang.String,byte[],byte[],byte[],java.security.Provider)"
  parent: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor"
  langs:
  - "java"
  name: "AesCbcHmacSha2Encryptor(String name, byte[] key, byte[] iv, byte[] authenticationData, Provider provider)"
  nameWithType: "AesCbcHmacSha2.AesCbcHmacSha2Encryptor.AesCbcHmacSha2Encryptor(String name, byte[] key, byte[] iv, byte[] authenticationData, Provider provider)"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.AesCbcHmacSha2Encryptor(String name, byte[] key, byte[] iv, byte[] authenticationData, Provider provider)"
  overload: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.AesCbcHmacSha2Encryptor*"
  type: "Constructor"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " AesCbcHmacSha2Encryptor(String name, byte[] key, byte[] iv, byte[] authenticationData, Provider provider)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    - id: "key"
      type: "byte[]"
    - id: "iv"
      type: "byte[]"
    - id: "authenticationData"
      type: "byte[]"
    - id: "provider"
      type: "java.security.Provider"
- uid: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.aadLength"
  id: "aadLength"
  parent: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor"
  langs:
  - "java"
  name: "aadLength"
  nameWithType: "AesCbcHmacSha2.AesCbcHmacSha2Encryptor.aadLength"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.aadLength"
  type: "Field"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "final byte[] aadLength"
    return:
      type: "byte[]"
- uid: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.doFinal(byte[])"
  id: "doFinal(byte[])"
  parent: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor"
  langs:
  - "java"
  name: "doFinal(byte[] input)"
  nameWithType: "AesCbcHmacSha2.AesCbcHmacSha2Encryptor.doFinal(byte[] input)"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.doFinal(byte[] input)"
  overload: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.doFinal*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public byte[] doFinal(byte[] input)"
    parameters:
    - id: "input"
      type: "byte[]"
    return:
      type: "byte[]"
  exceptions:
  - type: "javax.crypto.IllegalBlockSizeException"
  - type: "javax.crypto.BadPaddingException"
  - type: "java.security.InvalidKeyException"
  - type: "java.security.NoSuchAlgorithmException"
- uid: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.getTag()"
  id: "getTag()"
  parent: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor"
  langs:
  - "java"
  name: "getTag()"
  nameWithType: "AesCbcHmacSha2.AesCbcHmacSha2Encryptor.getTag()"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.getTag()"
  overload: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.getTag*"
  type: "Method"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "public byte[] getTag()"
    return:
      type: "byte[]"
- uid: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.hmac"
  id: "hmac"
  parent: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor"
  langs:
  - "java"
  name: "hmac"
  nameWithType: "AesCbcHmacSha2.AesCbcHmacSha2Encryptor.hmac"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.hmac"
  type: "Field"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "final Mac hmac"
    return:
      type: "javax.crypto.Mac"
- uid: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.hmacKey"
  id: "hmacKey"
  parent: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor"
  langs:
  - "java"
  name: "hmacKey"
  nameWithType: "AesCbcHmacSha2.AesCbcHmacSha2Encryptor.hmacKey"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.hmacKey"
  type: "Field"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "final byte[] hmacKey"
    return:
      type: "byte[]"
- uid: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.inner"
  id: "inner"
  parent: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor"
  langs:
  - "java"
  name: "inner"
  nameWithType: "AesCbcHmacSha2.AesCbcHmacSha2Encryptor.inner"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.inner"
  type: "Field"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: "final ICryptoTransform inner"
    return:
      type: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform"
- uid: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.tag"
  id: "tag"
  parent: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor"
  langs:
  - "java"
  name: "tag"
  nameWithType: "AesCbcHmacSha2.AesCbcHmacSha2Encryptor.tag"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.tag"
  type: "Field"
  package: "com.azure.security.keyvault.keys.cryptography"
  syntax:
    content: " byte[] tag"
    return:
      type: "byte[]"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "java.security.Provider"
  spec.java:
  - uid: "java.security.Provider"
    name: "Provider"
    fullName: "java.security.Provider"
- uid: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.AesCbcHmacSha2Encryptor*"
  name: "AesCbcHmacSha2Encryptor"
  nameWithType: "AesCbcHmacSha2.AesCbcHmacSha2Encryptor.AesCbcHmacSha2Encryptor"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.AesCbcHmacSha2Encryptor"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.getTag*"
  name: "getTag"
  nameWithType: "AesCbcHmacSha2.AesCbcHmacSha2Encryptor.getTag"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.getTag"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "javax.crypto.IllegalBlockSizeException"
  spec.java:
  - uid: "javax.crypto.IllegalBlockSizeException"
    name: "IllegalBlockSizeException"
    fullName: "javax.crypto.IllegalBlockSizeException"
- uid: "javax.crypto.BadPaddingException"
  spec.java:
  - uid: "javax.crypto.BadPaddingException"
    name: "BadPaddingException"
    fullName: "javax.crypto.BadPaddingException"
- uid: "java.security.InvalidKeyException"
  spec.java:
  - uid: "java.security.InvalidKeyException"
    name: "InvalidKeyException"
    fullName: "java.security.InvalidKeyException"
- uid: "java.security.NoSuchAlgorithmException"
  spec.java:
  - uid: "java.security.NoSuchAlgorithmException"
    name: "NoSuchAlgorithmException"
    fullName: "java.security.NoSuchAlgorithmException"
- uid: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.doFinal*"
  name: "doFinal"
  nameWithType: "AesCbcHmacSha2.AesCbcHmacSha2Encryptor.doFinal"
  fullName: "com.azure.security.keyvault.keys.cryptography.AesCbcHmacSha2.AesCbcHmacSha2Encryptor.doFinal"
  package: "com.azure.security.keyvault.keys.cryptography"
- uid: "javax.crypto.Mac"
  spec.java:
  - uid: "javax.crypto.Mac"
    name: "Mac"
    fullName: "javax.crypto.Mac"
- uid: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform"
  name: "ICryptoTransform"
  nameWithType: "ICryptoTransform"
  fullName: "com.azure.security.keyvault.keys.cryptography.ICryptoTransform"
- uid: "com.azure.security.keyvault.keys.cryptography.IAuthenticatedCryptoTransform"
  name: "IAuthenticatedCryptoTransform"
  nameWithType: "IAuthenticatedCryptoTransform"
  fullName: "com.azure.security.keyvault.keys.cryptography.IAuthenticatedCryptoTransform"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
