### YamlMime:ManagedReference
items:
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions"
  id: "CertificateImportOptions"
  parent: "com.azure.security.keyvault.certificates.models"
  children:
  - "com.azure.security.keyvault.certificates.models.CertificateImportOptions.CertificateImportOptions(java.lang.String,byte[])"
  - "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getCertificatePolicy()"
  - "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getName()"
  - "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getPassword()"
  - "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getTags()"
  - "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getValue()"
  - "com.azure.security.keyvault.certificates.models.CertificateImportOptions.isEnabled()"
  - "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setCertificatePolicy(com.azure.security.keyvault.certificates.models.CertificatePolicy)"
  - "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setEnabled(java.lang.Boolean)"
  - "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setPassword(java.lang.String)"
  - "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setTags(java.util.Map<java.lang.String,java.lang.String>)"
  langs:
  - "java"
  name: "CertificateImportOptions"
  nameWithType: "CertificateImportOptions"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions"
  type: "Class"
  package: "com.azure.security.keyvault.certificates.models"
  summary: "Represents the configuration used to import a certificate in the key vault."
  syntax:
    content: "public final class CertificateImportOptions"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.CertificateImportOptions(java.lang.String,byte[])"
  id: "CertificateImportOptions(java.lang.String,byte[])"
  parent: "com.azure.security.keyvault.certificates.models.CertificateImportOptions"
  langs:
  - "java"
  name: "CertificateImportOptions(String name, byte[] value)"
  nameWithType: "CertificateImportOptions.CertificateImportOptions(String name, byte[] value)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.CertificateImportOptions(String name, byte[] value)"
  overload: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.CertificateImportOptions*"
  type: "Constructor"
  package: "com.azure.security.keyvault.certificates.models"
  summary: "Creates instance of CertificateImportOptions."
  syntax:
    content: "public CertificateImportOptions(String name, byte[] value)"
    parameters:
    - id: "name"
      type: "java.lang.String"
      description: "The name of the key."
    - id: "value"
      type: "byte[]"
      description: "The PFX or PEM formatted value of the certificate containing both the x509 certificates and the private key."
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getCertificatePolicy()"
  id: "getCertificatePolicy()"
  parent: "com.azure.security.keyvault.certificates.models.CertificateImportOptions"
  langs:
  - "java"
  name: "getCertificatePolicy()"
  nameWithType: "CertificateImportOptions.getCertificatePolicy()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getCertificatePolicy()"
  overload: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getCertificatePolicy*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models"
  summary: "Get the management policy for the certificate."
  syntax:
    content: "public CertificatePolicy getCertificatePolicy()"
    return:
      type: "com.azure.security.keyvault.certificates.models.CertificatePolicy"
      description: "the management policy"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getName()"
  id: "getName()"
  parent: "com.azure.security.keyvault.certificates.models.CertificateImportOptions"
  langs:
  - "java"
  name: "getName()"
  nameWithType: "CertificateImportOptions.getName()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getName()"
  overload: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getName*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models"
  summary: "Get the name of the certificate."
  syntax:
    content: "public String getName()"
    return:
      type: "java.lang.String"
      description: "the name of the certificate."
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getPassword()"
  id: "getPassword()"
  parent: "com.azure.security.keyvault.certificates.models.CertificateImportOptions"
  langs:
  - "java"
  name: "getPassword()"
  nameWithType: "CertificateImportOptions.getPassword()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getPassword()"
  overload: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getPassword*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models"
  summary: "Get the password for encrypting the certificate, if its encrypted."
  syntax:
    content: "public String getPassword()"
    return:
      type: "java.lang.String"
      description: "the password"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getTags()"
  id: "getTags()"
  parent: "com.azure.security.keyvault.certificates.models.CertificateImportOptions"
  langs:
  - "java"
  name: "getTags()"
  nameWithType: "CertificateImportOptions.getTags()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getTags()"
  overload: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getTags*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models"
  summary: "Get the tags associated with the secret."
  syntax:
    content: "public Map<String,String> getTags()"
    return:
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "the value of the tags."
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getValue()"
  id: "getValue()"
  parent: "com.azure.security.keyvault.certificates.models.CertificateImportOptions"
  langs:
  - "java"
  name: "getValue()"
  nameWithType: "CertificateImportOptions.getValue()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getValue()"
  overload: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getValue*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models"
  summary: "Get the value of the certificate."
  syntax:
    content: "public byte[] getValue()"
    return:
      type: "byte[]"
      description: "the value of the certificate."
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.isEnabled()"
  id: "isEnabled()"
  parent: "com.azure.security.keyvault.certificates.models.CertificateImportOptions"
  langs:
  - "java"
  name: "isEnabled()"
  nameWithType: "CertificateImportOptions.isEnabled()"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.isEnabled()"
  overload: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.isEnabled*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models"
  summary: "Get the enabled status."
  syntax:
    content: "public Boolean isEnabled()"
    return:
      type: "java.lang.Boolean"
      description: "the enabled status"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setCertificatePolicy(com.azure.security.keyvault.certificates.models.CertificatePolicy)"
  id: "setCertificatePolicy(com.azure.security.keyvault.certificates.models.CertificatePolicy)"
  parent: "com.azure.security.keyvault.certificates.models.CertificateImportOptions"
  langs:
  - "java"
  name: "setCertificatePolicy(CertificatePolicy certificatePolicy)"
  nameWithType: "CertificateImportOptions.setCertificatePolicy(CertificatePolicy certificatePolicy)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setCertificatePolicy(CertificatePolicy certificatePolicy)"
  overload: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setCertificatePolicy*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models"
  summary: "Set the management policy for the certificate."
  syntax:
    content: "public CertificateImportOptions setCertificatePolicy(CertificatePolicy certificatePolicy)"
    parameters:
    - id: "certificatePolicy"
      type: "com.azure.security.keyvault.certificates.models.CertificatePolicy"
      description: "the management policy for the certificate"
    return:
      type: "com.azure.security.keyvault.certificates.models.CertificateImportOptions"
      description: "the updated CertificateImportOptions itself"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setEnabled(java.lang.Boolean)"
  id: "setEnabled(java.lang.Boolean)"
  parent: "com.azure.security.keyvault.certificates.models.CertificateImportOptions"
  langs:
  - "java"
  name: "setEnabled(Boolean enabled)"
  nameWithType: "CertificateImportOptions.setEnabled(Boolean enabled)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setEnabled(Boolean enabled)"
  overload: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setEnabled*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models"
  summary: "Set the enabled status."
  syntax:
    content: "public CertificateImportOptions setEnabled(Boolean enabled)"
    parameters:
    - id: "enabled"
      type: "java.lang.Boolean"
      description: "The enabled status to set."
    return:
      type: "com.azure.security.keyvault.certificates.models.CertificateImportOptions"
      description: "the CertificateImportOptions itself"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setPassword(java.lang.String)"
  id: "setPassword(java.lang.String)"
  parent: "com.azure.security.keyvault.certificates.models.CertificateImportOptions"
  langs:
  - "java"
  name: "setPassword(String password)"
  nameWithType: "CertificateImportOptions.setPassword(String password)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setPassword(String password)"
  overload: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setPassword*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models"
  summary: "Set the password for encrypting the certificate, if its encrypted."
  syntax:
    content: "public CertificateImportOptions setPassword(String password)"
    parameters:
    - id: "password"
      type: "java.lang.String"
      description: "The password used to encrypt the certificate."
    return:
      type: "com.azure.security.keyvault.certificates.models.CertificateImportOptions"
      description: "the updated CertificateImportOptions itself"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setTags(java.util.Map<java.lang.String,java.lang.String>)"
  id: "setTags(java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.security.keyvault.certificates.models.CertificateImportOptions"
  langs:
  - "java"
  name: "setTags(Map<String,String> tags)"
  nameWithType: "CertificateImportOptions.setTags(Map<String,String> tags)"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setTags(Map<String,String> tags)"
  overload: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setTags*"
  type: "Method"
  package: "com.azure.security.keyvault.certificates.models"
  summary: "Set the application specific maetadata."
  syntax:
    content: "public CertificateImportOptions setTags(Map<String,String> tags)"
    parameters:
    - id: "tags"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "The metadata to set."
    return:
      type: "com.azure.security.keyvault.certificates.models.CertificateImportOptions"
      description: "the updated CertificateImportOptions itself"
references:
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "byte[]"
  spec.java:
  - uid: "byte"
    name: "byte"
    fullName: "byte"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.CertificateImportOptions*"
  name: "CertificateImportOptions"
  nameWithType: "CertificateImportOptions.CertificateImportOptions"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.CertificateImportOptions"
  package: "com.azure.security.keyvault.certificates.models"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setEnabled*"
  name: "setEnabled"
  nameWithType: "CertificateImportOptions.setEnabled"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setEnabled"
  package: "com.azure.security.keyvault.certificates.models"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.isEnabled*"
  name: "isEnabled"
  nameWithType: "CertificateImportOptions.isEnabled"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.isEnabled"
  package: "com.azure.security.keyvault.certificates.models"
- uid: "com.azure.security.keyvault.certificates.models.CertificatePolicy"
  name: "CertificatePolicy"
  nameWithType: "CertificatePolicy"
  fullName: "com.azure.security.keyvault.certificates.models.CertificatePolicy"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getCertificatePolicy*"
  name: "getCertificatePolicy"
  nameWithType: "CertificateImportOptions.getCertificatePolicy"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getCertificatePolicy"
  package: "com.azure.security.keyvault.certificates.models"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setCertificatePolicy*"
  name: "setCertificatePolicy"
  nameWithType: "CertificateImportOptions.setCertificatePolicy"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setCertificatePolicy"
  package: "com.azure.security.keyvault.certificates.models"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setTags*"
  name: "setTags"
  nameWithType: "CertificateImportOptions.setTags"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setTags"
  package: "com.azure.security.keyvault.certificates.models"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getTags*"
  name: "getTags"
  nameWithType: "CertificateImportOptions.getTags"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getTags"
  package: "com.azure.security.keyvault.certificates.models"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setPassword*"
  name: "setPassword"
  nameWithType: "CertificateImportOptions.setPassword"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.setPassword"
  package: "com.azure.security.keyvault.certificates.models"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getPassword*"
  name: "getPassword"
  nameWithType: "CertificateImportOptions.getPassword"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getPassword"
  package: "com.azure.security.keyvault.certificates.models"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getName*"
  name: "getName"
  nameWithType: "CertificateImportOptions.getName"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getName"
  package: "com.azure.security.keyvault.certificates.models"
- uid: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getValue*"
  name: "getValue"
  nameWithType: "CertificateImportOptions.getValue"
  fullName: "com.azure.security.keyvault.certificates.models.CertificateImportOptions.getValue"
  package: "com.azure.security.keyvault.certificates.models"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
