### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.common.IpRange"
  id: "IpRange"
  parent: "com.azure.storage.common"
  children:
  - "com.azure.storage.common.IpRange.IpRange()"
  - "com.azure.storage.common.IpRange.getIpMax()"
  - "com.azure.storage.common.IpRange.getIpMin()"
  - "com.azure.storage.common.IpRange.parse(java.lang.String)"
  - "com.azure.storage.common.IpRange.setIpMax(java.lang.String)"
  - "com.azure.storage.common.IpRange.setIpMin(java.lang.String)"
  - "com.azure.storage.common.IpRange.toString()"
  langs:
  - "java"
  name: "IpRange"
  nameWithType: "IpRange"
  fullName: "com.azure.storage.common.IpRange"
  type: "Class"
  package: "com.azure.storage.common"
  summary: "This type specifies a continuous range of IP addresses. It is used to limit permissions on SAS tokens. Null may be set if it is not desired to confine the sas permissions to an IP range."
  syntax:
    content: "public final class IpRange"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.common.IpRange.IpRange()"
  id: "IpRange()"
  parent: "com.azure.storage.common.IpRange"
  langs:
  - "java"
  name: "IpRange()"
  nameWithType: "IpRange.IpRange()"
  fullName: "com.azure.storage.common.IpRange.IpRange()"
  overload: "com.azure.storage.common.IpRange.IpRange*"
  type: "Constructor"
  package: "com.azure.storage.common"
  summary: "Constructs an IpRange object."
  syntax:
    content: "public IpRange()"
- uid: "com.azure.storage.common.IpRange.getIpMax()"
  id: "getIpMax()"
  parent: "com.azure.storage.common.IpRange"
  langs:
  - "java"
  name: "getIpMax()"
  nameWithType: "IpRange.getIpMax()"
  fullName: "com.azure.storage.common.IpRange.getIpMax()"
  overload: "com.azure.storage.common.IpRange.getIpMax*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public String getIpMax()"
    return:
      type: "java.lang.String"
      description: "the maximum IP address of the range"
- uid: "com.azure.storage.common.IpRange.getIpMin()"
  id: "getIpMin()"
  parent: "com.azure.storage.common.IpRange"
  langs:
  - "java"
  name: "getIpMin()"
  nameWithType: "IpRange.getIpMin()"
  fullName: "com.azure.storage.common.IpRange.getIpMin()"
  overload: "com.azure.storage.common.IpRange.getIpMin*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public String getIpMin()"
    return:
      type: "java.lang.String"
      description: "the minimum IP address of the range"
- uid: "com.azure.storage.common.IpRange.parse(java.lang.String)"
  id: "parse(java.lang.String)"
  parent: "com.azure.storage.common.IpRange"
  langs:
  - "java"
  name: "parse(String rangeStr)"
  nameWithType: "IpRange.parse(String rangeStr)"
  fullName: "com.azure.storage.common.IpRange.parse(String rangeStr)"
  overload: "com.azure.storage.common.IpRange.parse*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Creates a `IpRange` from the specified string."
  syntax:
    content: "public static IpRange parse(String rangeStr)"
    parameters:
    - id: "rangeStr"
      type: "java.lang.String"
      description: "The <code>String</code> representation of the <code>IpRange</code>."
    return:
      type: "com.azure.storage.common.IpRange"
      description: "The <code>IpRange</code> generated from the <code>String</code>."
- uid: "com.azure.storage.common.IpRange.setIpMax(java.lang.String)"
  id: "setIpMax(java.lang.String)"
  parent: "com.azure.storage.common.IpRange"
  langs:
  - "java"
  name: "setIpMax(String ipMax)"
  nameWithType: "IpRange.setIpMax(String ipMax)"
  fullName: "com.azure.storage.common.IpRange.setIpMax(String ipMax)"
  overload: "com.azure.storage.common.IpRange.setIpMax*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the maximum IP address of the range."
  syntax:
    content: "public IpRange setIpMax(String ipMax)"
    parameters:
    - id: "ipMax"
      type: "java.lang.String"
      description: "IP address to set as the maximum"
    return:
      type: "com.azure.storage.common.IpRange"
      description: "the updated IpRange object"
- uid: "com.azure.storage.common.IpRange.setIpMin(java.lang.String)"
  id: "setIpMin(java.lang.String)"
  parent: "com.azure.storage.common.IpRange"
  langs:
  - "java"
  name: "setIpMin(String ipMin)"
  nameWithType: "IpRange.setIpMin(String ipMin)"
  fullName: "com.azure.storage.common.IpRange.setIpMin(String ipMin)"
  overload: "com.azure.storage.common.IpRange.setIpMin*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the minimum IP address of the range."
  syntax:
    content: "public IpRange setIpMin(String ipMin)"
    parameters:
    - id: "ipMin"
      type: "java.lang.String"
      description: "IP address to set as the minimum"
    return:
      type: "com.azure.storage.common.IpRange"
      description: "the updated IpRange object"
- uid: "com.azure.storage.common.IpRange.toString()"
  id: "toString()"
  parent: "com.azure.storage.common.IpRange"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "IpRange.toString()"
  fullName: "com.azure.storage.common.IpRange.toString()"
  overload: "com.azure.storage.common.IpRange.toString*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Output the single IP address or range of IP addresses for."
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
      description: "The single IP address or range of IP addresses formatted as a <code>String</code>."
references:
- uid: "com.azure.storage.common.IpRange.IpRange*"
  name: "IpRange"
  nameWithType: "IpRange.IpRange"
  fullName: "com.azure.storage.common.IpRange.IpRange"
  package: "com.azure.storage.common"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.common.IpRange.parse*"
  name: "parse"
  nameWithType: "IpRange.parse"
  fullName: "com.azure.storage.common.IpRange.parse"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.IpRange.getIpMin*"
  name: "getIpMin"
  nameWithType: "IpRange.getIpMin"
  fullName: "com.azure.storage.common.IpRange.getIpMin"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.IpRange.setIpMin*"
  name: "setIpMin"
  nameWithType: "IpRange.setIpMin"
  fullName: "com.azure.storage.common.IpRange.setIpMin"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.IpRange.getIpMax*"
  name: "getIpMax"
  nameWithType: "IpRange.getIpMax"
  fullName: "com.azure.storage.common.IpRange.getIpMax"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.IpRange.setIpMax*"
  name: "setIpMax"
  nameWithType: "IpRange.setIpMax"
  fullName: "com.azure.storage.common.IpRange.setIpMax"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.IpRange.toString*"
  name: "toString"
  nameWithType: "IpRange.toString"
  fullName: "com.azure.storage.common.IpRange.toString"
  package: "com.azure.storage.common"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
