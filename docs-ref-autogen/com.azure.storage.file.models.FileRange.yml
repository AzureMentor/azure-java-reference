### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.models.FileRange"
  id: "FileRange"
  parent: "com.azure.storage.file.models"
  children:
  - "com.azure.storage.file.models.FileRange.FileRange(com.azure.storage.file.models.Range)"
  - "com.azure.storage.file.models.FileRange.FileRange(long)"
  - "com.azure.storage.file.models.FileRange.FileRange(long,java.lang.Long)"
  - "com.azure.storage.file.models.FileRange.getEnd()"
  - "com.azure.storage.file.models.FileRange.getStart()"
  - "com.azure.storage.file.models.FileRange.logger"
  - "com.azure.storage.file.models.FileRange.toHeaderValue()"
  - "com.azure.storage.file.models.FileRange.toString()"
  langs:
  - "java"
  name: "FileRange"
  nameWithType: "FileRange"
  fullName: "com.azure.storage.file.models.FileRange"
  type: "Class"
  package: "com.azure.storage.file.models"
  summary: "The range of a file in the storage file service."
  syntax:
    content: "public final class FileRange"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.models.FileRange.FileRange(com.azure.storage.file.models.Range)"
  id: "FileRange(com.azure.storage.file.models.Range)"
  parent: "com.azure.storage.file.models.FileRange"
  langs:
  - "java"
  name: "FileRange(Range range)"
  nameWithType: "FileRange.FileRange(Range range)"
  fullName: "com.azure.storage.file.models.FileRange.FileRange(Range range)"
  overload: "com.azure.storage.file.models.FileRange.FileRange*"
  type: "Constructor"
  package: "com.azure.storage.file.models"
  summary: "Creates an instance of the range of a file from the passed <xref uid=\"com.azure.storage.file.models.Range\" data-throw-if-not-resolved=\"false\">Range</xref>."
  syntax:
    content: "public FileRange(Range range)"
    parameters:
    - id: "range"
      type: "com.azure.storage.file.models.Range"
      description: "Range object containing start and end of the file."
- uid: "com.azure.storage.file.models.FileRange.FileRange(long)"
  id: "FileRange(long)"
  parent: "com.azure.storage.file.models.FileRange"
  langs:
  - "java"
  name: "FileRange(long start)"
  nameWithType: "FileRange.FileRange(long start)"
  fullName: "com.azure.storage.file.models.FileRange.FileRange(long start)"
  overload: "com.azure.storage.file.models.FileRange.FileRange*"
  type: "Constructor"
  package: "com.azure.storage.file.models"
  summary: "Create an instance of the range of a file. Specify the start the range and the end defaults to the length of the file."
  syntax:
    content: "public FileRange(long start)"
    parameters:
    - id: "start"
      type: "long"
      description: "Specifies the start of bytes to be written."
- uid: "com.azure.storage.file.models.FileRange.FileRange(long,java.lang.Long)"
  id: "FileRange(long,java.lang.Long)"
  parent: "com.azure.storage.file.models.FileRange"
  langs:
  - "java"
  name: "FileRange(long start, Long end)"
  nameWithType: "FileRange.FileRange(long start, Long end)"
  fullName: "com.azure.storage.file.models.FileRange.FileRange(long start, Long end)"
  overload: "com.azure.storage.file.models.FileRange.FileRange*"
  type: "Constructor"
  package: "com.azure.storage.file.models"
  summary: "Create an instance of the range of a file. Both the start and end of the range must be specified."
  syntax:
    content: "public FileRange(long start, Long end)"
    parameters:
    - id: "start"
      type: "long"
      description: "Specifies the start of bytes to be written."
    - id: "end"
      type: "java.lang.Long"
      description: "Specifies the end of bytes to be written"
- uid: "com.azure.storage.file.models.FileRange.getEnd()"
  id: "getEnd()"
  parent: "com.azure.storage.file.models.FileRange"
  langs:
  - "java"
  name: "getEnd()"
  nameWithType: "FileRange.getEnd()"
  fullName: "com.azure.storage.file.models.FileRange.getEnd()"
  overload: "com.azure.storage.file.models.FileRange.getEnd*"
  type: "Method"
  package: "com.azure.storage.file.models"
  syntax:
    content: "public Long getEnd()"
    return:
      type: "java.lang.Long"
      description: "The end of bytes to be written."
- uid: "com.azure.storage.file.models.FileRange.getStart()"
  id: "getStart()"
  parent: "com.azure.storage.file.models.FileRange"
  langs:
  - "java"
  name: "getStart()"
  nameWithType: "FileRange.getStart()"
  fullName: "com.azure.storage.file.models.FileRange.getStart()"
  overload: "com.azure.storage.file.models.FileRange.getStart*"
  type: "Method"
  package: "com.azure.storage.file.models"
  syntax:
    content: "public long getStart()"
    return:
      type: "long"
      description: "The start of bytes to be written."
- uid: "com.azure.storage.file.models.FileRange.logger"
  id: "logger"
  parent: "com.azure.storage.file.models.FileRange"
  langs:
  - "java"
  name: "logger"
  nameWithType: "FileRange.logger"
  fullName: "com.azure.storage.file.models.FileRange.logger"
  type: "Field"
  package: "com.azure.storage.file.models"
  syntax:
    content: "final ClientLogger logger"
    return:
      type: "com.azure.core.util.logging.ClientLogger"
- uid: "com.azure.storage.file.models.FileRange.toHeaderValue()"
  id: "toHeaderValue()"
  parent: "com.azure.storage.file.models.FileRange"
  langs:
  - "java"
  name: "toHeaderValue()"
  nameWithType: "FileRange.toHeaderValue()"
  fullName: "com.azure.storage.file.models.FileRange.toHeaderValue()"
  overload: "com.azure.storage.file.models.FileRange.toHeaderValue*"
  type: "Method"
  package: "com.azure.storage.file.models"
  syntax:
    content: "public String toHeaderValue()"
    return:
      type: "java.lang.String"
      description: "<xref uid=\"com.azure.storage.file.models.FileRange.toString()\" data-throw-if-not-resolved=\"false\">FileRange#toString()</xref> if <code>count</code> isn't <code>null</code> or <code>offset</code> isn't 0, otherwise\n null."
- uid: "com.azure.storage.file.models.FileRange.toString()"
  id: "toString()"
  parent: "com.azure.storage.file.models.FileRange"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "FileRange.toString()"
  fullName: "com.azure.storage.file.models.FileRange.toString()"
  overload: "com.azure.storage.file.models.FileRange.toString*"
  type: "Method"
  package: "com.azure.storage.file.models"
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
      description: "The string format of the FileRange written into request."
references:
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.storage.file.models.FileRange.FileRange*"
  name: "FileRange"
  nameWithType: "FileRange.FileRange"
  fullName: "com.azure.storage.file.models.FileRange.FileRange"
  package: "com.azure.storage.file.models"
- uid: "java.lang.Long"
  spec.java:
  - uid: "java.lang.Long"
    name: "Long"
    fullName: "java.lang.Long"
- uid: "com.azure.storage.file.models.Range"
  name: "Range"
  nameWithType: "Range"
  fullName: "com.azure.storage.file.models.Range"
- uid: "com.azure.storage.file.models.FileRange.getStart*"
  name: "getStart"
  nameWithType: "FileRange.getStart"
  fullName: "com.azure.storage.file.models.FileRange.getStart"
  package: "com.azure.storage.file.models"
- uid: "com.azure.storage.file.models.FileRange.getEnd*"
  name: "getEnd"
  nameWithType: "FileRange.getEnd"
  fullName: "com.azure.storage.file.models.FileRange.getEnd"
  package: "com.azure.storage.file.models"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.file.models.FileRange.toString*"
  name: "toString"
  nameWithType: "FileRange.toString"
  fullName: "com.azure.storage.file.models.FileRange.toString"
  package: "com.azure.storage.file.models"
- uid: "com.azure.storage.file.models.FileRange.toHeaderValue*"
  name: "toHeaderValue"
  nameWithType: "FileRange.toHeaderValue"
  fullName: "com.azure.storage.file.models.FileRange.toHeaderValue"
  package: "com.azure.storage.file.models"
- uid: "com.azure.core.util.logging.ClientLogger"
  spec.java:
  - uid: "com.azure.core.util.logging.ClientLogger"
    name: "ClientLogger"
    fullName: "com.azure.core.util.logging.ClientLogger"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
