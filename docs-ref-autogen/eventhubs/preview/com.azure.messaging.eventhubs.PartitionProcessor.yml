### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.eventhubs.PartitionProcessor"
  id: "PartitionProcessor"
  parent: "com.azure.messaging.eventhubs"
  children:
  - "com.azure.messaging.eventhubs.PartitionProcessor.PartitionProcessor()"
  - "com.azure.messaging.eventhubs.PartitionProcessor.close(com.azure.messaging.eventhubs.models.PartitionContext,com.azure.messaging.eventhubs.CloseReason)"
  - "com.azure.messaging.eventhubs.PartitionProcessor.initialize(com.azure.messaging.eventhubs.models.PartitionContext)"
  - "com.azure.messaging.eventhubs.PartitionProcessor.processError(com.azure.messaging.eventhubs.models.PartitionContext,java.lang.Throwable)"
  - "com.azure.messaging.eventhubs.PartitionProcessor.processEvent(com.azure.messaging.eventhubs.models.PartitionContext,com.azure.messaging.eventhubs.EventData)"
  langs:
  - "java"
  name: "PartitionProcessor"
  nameWithType: "PartitionProcessor"
  fullName: "com.azure.messaging.eventhubs.PartitionProcessor"
  type: "Class"
  package: "com.azure.messaging.eventhubs"
  summary: "An abstract class defining all the operations that a partition processor can perform. Users of <xref uid=\"com.azure.messaging.eventhubs.EventProcessor\" data-throw-if-not-resolved=\"false\">EventProcessor</xref> should extend from this class and implement <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor.processEvent(com.azure.messaging.eventhubs.models.PartitionContext,com.azure.messaging.eventhubs.EventData)\" data-throw-if-not-resolved=\"false\">#processEvent(PartitionContext, EventData)</xref> for processing events. Additionally, users can override:\n\n *  <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor.initialize(com.azure.messaging.eventhubs.models.PartitionContext)\" data-throw-if-not-resolved=\"false\">#initialize(PartitionContext)</xref> \\- This method is called before at the beginning of processing a partition.\n *  <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor.processError(com.azure.messaging.eventhubs.models.PartitionContext,java.lang.Throwable)\" data-throw-if-not-resolved=\"false\">#processError(PartitionContext, Throwable)</xref> \\- This method is called if there is an error while processing events\n *  <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor.close(com.azure.messaging.eventhubs.models.PartitionContext,com.azure.messaging.eventhubs.CloseReason)\" data-throw-if-not-resolved=\"false\">#close(PartitionContext, CloseReason)</xref> \\- This method is called at the end of processing a partition. The <xref uid=\"com.azure.messaging.eventhubs.CloseReason\" data-throw-if-not-resolved=\"false\">CloseReason</xref> specifies why the processing of a partition stopped.\n\nAn instance of partition processor will process events from a single partition only.\n\nImplementations of this abstract class also have the responsibility of updating checkpoints when appropriate."
  syntax:
    content: "public abstract class PartitionProcessor"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.messaging.eventhubs.PartitionProcessor.PartitionProcessor()"
  id: "PartitionProcessor()"
  parent: "com.azure.messaging.eventhubs.PartitionProcessor"
  langs:
  - "java"
  name: "PartitionProcessor()"
  nameWithType: "PartitionProcessor.PartitionProcessor()"
  fullName: "com.azure.messaging.eventhubs.PartitionProcessor.PartitionProcessor()"
  overload: "com.azure.messaging.eventhubs.PartitionProcessor.PartitionProcessor*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs"
  syntax:
    content: "public PartitionProcessor()"
- uid: "com.azure.messaging.eventhubs.PartitionProcessor.close(com.azure.messaging.eventhubs.models.PartitionContext,com.azure.messaging.eventhubs.CloseReason)"
  id: "close(com.azure.messaging.eventhubs.models.PartitionContext,com.azure.messaging.eventhubs.CloseReason)"
  parent: "com.azure.messaging.eventhubs.PartitionProcessor"
  langs:
  - "java"
  name: "close(PartitionContext partitionContext, CloseReason closeReason)"
  nameWithType: "PartitionProcessor.close(PartitionContext partitionContext, CloseReason closeReason)"
  fullName: "com.azure.messaging.eventhubs.PartitionProcessor.close(PartitionContext partitionContext, CloseReason closeReason)"
  overload: "com.azure.messaging.eventhubs.PartitionProcessor.close*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "This method is called before the partition processor is closed. A partition processor could be closed for various reasons and the reasons and implementations of this interface can take appropriate actions to cleanup before the partition processor is shutdown."
  syntax:
    content: "public Mono<Void> close(PartitionContext partitionContext, CloseReason closeReason)"
    parameters:
    - id: "partitionContext"
      type: "com.azure.messaging.eventhubs.models.PartitionContext"
      description: "The partition information for which the processing of events is closed."
    - id: "closeReason"
      type: "com.azure.messaging.eventhubs.CloseReason"
      description: "The reason for closing this partition processor."
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
      description: "a representation of the deferred computation of this call."
- uid: "com.azure.messaging.eventhubs.PartitionProcessor.initialize(com.azure.messaging.eventhubs.models.PartitionContext)"
  id: "initialize(com.azure.messaging.eventhubs.models.PartitionContext)"
  parent: "com.azure.messaging.eventhubs.PartitionProcessor"
  langs:
  - "java"
  name: "initialize(PartitionContext partitionContext)"
  nameWithType: "PartitionProcessor.initialize(PartitionContext partitionContext)"
  fullName: "com.azure.messaging.eventhubs.PartitionProcessor.initialize(PartitionContext partitionContext)"
  overload: "com.azure.messaging.eventhubs.PartitionProcessor.initialize*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "This method is called when this <xref uid=\"com.azure.messaging.eventhubs.EventProcessor\" data-throw-if-not-resolved=\"false\">EventProcessor</xref> takes ownership of a new partition and before any events from this partition are received."
  syntax:
    content: "public Mono<Void> initialize(PartitionContext partitionContext)"
    parameters:
    - id: "partitionContext"
      type: "com.azure.messaging.eventhubs.models.PartitionContext"
      description: "The partition information for initialization before events from the partition are\n processed."
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
      description: "a representation of the deferred computation of this call."
- uid: "com.azure.messaging.eventhubs.PartitionProcessor.processError(com.azure.messaging.eventhubs.models.PartitionContext,java.lang.Throwable)"
  id: "processError(com.azure.messaging.eventhubs.models.PartitionContext,java.lang.Throwable)"
  parent: "com.azure.messaging.eventhubs.PartitionProcessor"
  langs:
  - "java"
  name: "processError(PartitionContext partitionContext, Throwable throwable)"
  nameWithType: "PartitionProcessor.processError(PartitionContext partitionContext, Throwable throwable)"
  fullName: "com.azure.messaging.eventhubs.PartitionProcessor.processError(PartitionContext partitionContext, Throwable throwable)"
  overload: "com.azure.messaging.eventhubs.PartitionProcessor.processError*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "This method is called when an error occurs while receiving events from Event Hub. An error also marks the end of event data stream."
  syntax:
    content: "public void processError(PartitionContext partitionContext, Throwable throwable)"
    parameters:
    - id: "partitionContext"
      type: "com.azure.messaging.eventhubs.models.PartitionContext"
      description: "The partition information where the error occurred."
    - id: "throwable"
      type: "java.lang.Throwable"
      description: "The <xref uid=\"\" data-throw-if-not-resolved=\"false\">Throwable</xref> that caused this method to be called."
- uid: "com.azure.messaging.eventhubs.PartitionProcessor.processEvent(com.azure.messaging.eventhubs.models.PartitionContext,com.azure.messaging.eventhubs.EventData)"
  id: "processEvent(com.azure.messaging.eventhubs.models.PartitionContext,com.azure.messaging.eventhubs.EventData)"
  parent: "com.azure.messaging.eventhubs.PartitionProcessor"
  langs:
  - "java"
  name: "processEvent(PartitionContext partitionContext, EventData eventData)"
  nameWithType: "PartitionProcessor.processEvent(PartitionContext partitionContext, EventData eventData)"
  fullName: "com.azure.messaging.eventhubs.PartitionProcessor.processEvent(PartitionContext partitionContext, EventData eventData)"
  overload: "com.azure.messaging.eventhubs.PartitionProcessor.processEvent*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "This method is called when a new event is received for this partition. Processing of this event can happen asynchronously.\n\nThis is also a good place to update checkpoints using the `partitionContext` as appropriate."
  syntax:
    content: "public abstract Mono<Void> processEvent(PartitionContext partitionContext, EventData eventData)"
    parameters:
    - id: "partitionContext"
      type: "com.azure.messaging.eventhubs.models.PartitionContext"
      description: "The partition information the event data belongs to."
    - id: "eventData"
      type: "com.azure.messaging.eventhubs.EventData"
      description: "<xref uid=\"com.azure.messaging.eventhubs.EventData\" data-throw-if-not-resolved=\"false\">EventData</xref> received from this partition."
    return:
      type: "reactor.core.publisher.Mono<java.lang.Void>"
      description: "a representation of the deferred computation of this call."
references:
- uid: "com.azure.messaging.eventhubs.PartitionProcessor.PartitionProcessor*"
  name: "PartitionProcessor"
  nameWithType: "PartitionProcessor.PartitionProcessor"
  fullName: "com.azure.messaging.eventhubs.PartitionProcessor.PartitionProcessor"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.models.PartitionContext"
  name: "PartitionContext"
  nameWithType: "PartitionContext"
  fullName: "com.azure.messaging.eventhubs.models.PartitionContext"
- uid: "reactor.core.publisher.Mono<java.lang.Void>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.PartitionProcessor.initialize*"
  name: "initialize"
  nameWithType: "PartitionProcessor.initialize"
  fullName: "com.azure.messaging.eventhubs.PartitionProcessor.initialize"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.EventData"
  name: "EventData"
  nameWithType: "EventData"
  fullName: "com.azure.messaging.eventhubs.EventData"
- uid: "com.azure.messaging.eventhubs.PartitionProcessor.processEvent*"
  name: "processEvent"
  nameWithType: "PartitionProcessor.processEvent"
  fullName: "com.azure.messaging.eventhubs.PartitionProcessor.processEvent"
  package: "com.azure.messaging.eventhubs"
- uid: "java.lang.Throwable"
  spec.java:
  - uid: "java.lang.Throwable"
    name: "Throwable"
    fullName: "java.lang.Throwable"
- uid: "com.azure.messaging.eventhubs.PartitionProcessor.processError*"
  name: "processError"
  nameWithType: "PartitionProcessor.processError"
  fullName: "com.azure.messaging.eventhubs.PartitionProcessor.processError"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.CloseReason"
  name: "CloseReason"
  nameWithType: "CloseReason"
  fullName: "com.azure.messaging.eventhubs.CloseReason"
- uid: "com.azure.messaging.eventhubs.PartitionProcessor.close*"
  name: "close"
  nameWithType: "PartitionProcessor.close"
  fullName: "com.azure.messaging.eventhubs.PartitionProcessor.close"
  package: "com.azure.messaging.eventhubs"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
