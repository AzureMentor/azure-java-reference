### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.FileServiceClient"
  id: "FileServiceClient"
  parent: "com.azure.storage.file"
  children:
  - "com.azure.storage.file.FileServiceClient.FileServiceClient(com.azure.storage.file.FileServiceAsyncClient)"
  - "com.azure.storage.file.FileServiceClient.createShare(java.lang.String)"
  - "com.azure.storage.file.FileServiceClient.createShareWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.Integer,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileServiceClient.deleteShare(java.lang.String)"
  - "com.azure.storage.file.FileServiceClient.deleteShareWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileServiceClient.getAccountName()"
  - "com.azure.storage.file.FileServiceClient.getFileServiceUrl()"
  - "com.azure.storage.file.FileServiceClient.getProperties()"
  - "com.azure.storage.file.FileServiceClient.getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileServiceClient.getShareClient(java.lang.String)"
  - "com.azure.storage.file.FileServiceClient.listShares()"
  - "com.azure.storage.file.FileServiceClient.listShares(com.azure.storage.file.models.ListSharesOptions,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileServiceClient.setProperties(com.azure.storage.file.models.FileServiceProperties)"
  - "com.azure.storage.file.FileServiceClient.setPropertiesWithResponse(com.azure.storage.file.models.FileServiceProperties,java.time.Duration,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "FileServiceClient"
  nameWithType: "FileServiceClient"
  fullName: "com.azure.storage.file.FileServiceClient"
  type: "Class"
  package: "com.azure.storage.file"
  summary: "This class provides a fileServiceAsyncClient that contains all the operations for interacting with a file account in Azure Storage. Operations allowed by the fileServiceAsyncClient are creating, listing, and deleting shares and retrieving and updating properties of the account.\n\n**Instantiating a Synchronous File Service Client**\n\n\\{@codesnippet com.azure.storage.file.fileServiceClient.instantiation\\}\n\nView <xref uid=\"com.azure.storage.file.FileServiceClientBuilder\" data-throw-if-not-resolved=\"false\">this</xref> for additional ways to construct the fileServiceAsyncClient."
  syntax:
    content: "public final class FileServiceClient"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.FileServiceClient.FileServiceClient(com.azure.storage.file.FileServiceAsyncClient)"
  id: "FileServiceClient(com.azure.storage.file.FileServiceAsyncClient)"
  parent: "com.azure.storage.file.FileServiceClient"
  langs:
  - "java"
  name: "FileServiceClient(FileServiceAsyncClient client)"
  nameWithType: "FileServiceClient.FileServiceClient(FileServiceAsyncClient client)"
  fullName: "com.azure.storage.file.FileServiceClient.FileServiceClient(FileServiceAsyncClient client)"
  overload: "com.azure.storage.file.FileServiceClient.FileServiceClient*"
  type: "Constructor"
  package: "com.azure.storage.file"
  summary: "Creates a FileServiceClient that wraps a FileServiceAsyncClient and blocks requests."
  syntax:
    content: " FileServiceClient(FileServiceAsyncClient client)"
    parameters:
    - id: "client"
      type: "com.azure.storage.file.FileServiceAsyncClient"
      description: "FileServiceAsyncClient that is used to send requests"
- uid: "com.azure.storage.file.FileServiceClient.createShare(java.lang.String)"
  id: "createShare(java.lang.String)"
  parent: "com.azure.storage.file.FileServiceClient"
  langs:
  - "java"
  name: "createShare(String shareName)"
  nameWithType: "FileServiceClient.createShare(String shareName)"
  fullName: "com.azure.storage.file.FileServiceClient.createShare(String shareName)"
  overload: "com.azure.storage.file.FileServiceClient.createShare*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Creates a share in the storage account with the specified name and returns a ShareClient to interact with it.\n\n**Code Samples**\n\nCreate the share with share name of \"myshare\"\n\n\\{@codesnippet com.azure.storage.file.fileServiceClient.createShare\\#string\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/create-share"
  syntax:
    content: "public ShareClient createShare(String shareName)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "Name of the share"
    return:
      type: "com.azure.storage.file.ShareClient"
      description: "The <xref uid=\"com.azure.storage.file.ShareClient\" data-throw-if-not-resolved=\"false\">ShareClient</xref>"
- uid: "com.azure.storage.file.FileServiceClient.createShareWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.Integer,java.time.Duration,com.azure.core.util.Context)"
  id: "createShareWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.lang.Integer,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileServiceClient"
  langs:
  - "java"
  name: "createShareWithResponse(String shareName, Map<String,String> metadata, Integer quotaInGB, Duration timeout, Context context)"
  nameWithType: "FileServiceClient.createShareWithResponse(String shareName, Map<String,String> metadata, Integer quotaInGB, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileServiceClient.createShareWithResponse(String shareName, Map<String,String> metadata, Integer quotaInGB, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileServiceClient.createShareWithResponse*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Creates a share in the storage account with the specified name and metadata and returns a ShareClient to interact with it.\n\n**Code Samples**\n\nCreate the share \"test\" with a quota of 10 GB\n\n\\{@codesnippet com.azure.storage.file.FileServiceClient.createShareWithResponse\\#string-map-integer-duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/create-share"
  syntax:
    content: "public Response<ShareClient> createShareWithResponse(String shareName, Map<String,String> metadata, Integer quotaInGB, Duration timeout, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "Name of the share"
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Optional metadata to associate with the share"
    - id: "quotaInGB"
      type: "java.lang.Integer"
      description: "Optional maximum size the share is allowed to grow to in GB. This must be greater than 0 and\n less than or equal to 5120. The default value is 5120."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.ShareClient>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.ShareClient\" data-throw-if-not-resolved=\"false\">ShareClient</xref> and the status of creating the share."
- uid: "com.azure.storage.file.FileServiceClient.deleteShare(java.lang.String)"
  id: "deleteShare(java.lang.String)"
  parent: "com.azure.storage.file.FileServiceClient"
  langs:
  - "java"
  name: "deleteShare(String shareName)"
  nameWithType: "FileServiceClient.deleteShare(String shareName)"
  fullName: "com.azure.storage.file.FileServiceClient.deleteShare(String shareName)"
  overload: "com.azure.storage.file.FileServiceClient.deleteShare*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Deletes the share in the storage account with the given name\n\n**Code Samples**\n\nDelete the share \"test\"\n\n\\{@codesnippet com.azure.storage.file.fileServiceClient.deleteShare\\#string\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/delete-share"
  syntax:
    content: "public void deleteShare(String shareName)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "Name of the share"
- uid: "com.azure.storage.file.FileServiceClient.deleteShareWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  id: "deleteShareWithResponse(java.lang.String,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileServiceClient"
  langs:
  - "java"
  name: "deleteShareWithResponse(String shareName, String snapshot, Duration timeout, Context context)"
  nameWithType: "FileServiceClient.deleteShareWithResponse(String shareName, String snapshot, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileServiceClient.deleteShareWithResponse(String shareName, String snapshot, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileServiceClient.deleteShareWithResponse*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Deletes the specific snapshot of the share in the storage account with the given name. Snapshot are identified by the time they were created.\n\n**Code Samples**\n\nDelete the snapshot of share \"test\" that was created at current time.\n\n\\{@codesnippet com.azure.storage.file.fileServiceClient.deleteShareWithResponse\\#string-string-duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/delete-share"
  syntax:
    content: "public Response<Void> deleteShareWithResponse(String shareName, String snapshot, Duration timeout, Context context)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "Name of the share"
    - id: "snapshot"
      type: "java.lang.String"
      description: "Identifier of the snapshot"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<java.lang.Void>"
      description: "A response that only contains headers and response status code"
- uid: "com.azure.storage.file.FileServiceClient.getAccountName()"
  id: "getAccountName()"
  parent: "com.azure.storage.file.FileServiceClient"
  langs:
  - "java"
  name: "getAccountName()"
  nameWithType: "FileServiceClient.getAccountName()"
  fullName: "com.azure.storage.file.FileServiceClient.getAccountName()"
  overload: "com.azure.storage.file.FileServiceClient.getAccountName*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Get associated account name."
  syntax:
    content: "public String getAccountName()"
    return:
      type: "java.lang.String"
      description: "account name associated with this storage resource."
- uid: "com.azure.storage.file.FileServiceClient.getFileServiceUrl()"
  id: "getFileServiceUrl()"
  parent: "com.azure.storage.file.FileServiceClient"
  langs:
  - "java"
  name: "getFileServiceUrl()"
  nameWithType: "FileServiceClient.getFileServiceUrl()"
  fullName: "com.azure.storage.file.FileServiceClient.getFileServiceUrl()"
  overload: "com.azure.storage.file.FileServiceClient.getFileServiceUrl*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Get the url of the storage file service client."
  syntax:
    content: "public String getFileServiceUrl()"
    return:
      type: "java.lang.String"
      description: "the url of the Storage File service."
- uid: "com.azure.storage.file.FileServiceClient.getProperties()"
  id: "getProperties()"
  parent: "com.azure.storage.file.FileServiceClient"
  langs:
  - "java"
  name: "getProperties()"
  nameWithType: "FileServiceClient.getProperties()"
  fullName: "com.azure.storage.file.FileServiceClient.getProperties()"
  overload: "com.azure.storage.file.FileServiceClient.getProperties*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Retrieves the properties of the storage account's File service. The properties range from storage analytics and metrics to CORS (Cross-Origin Resource Sharing).\n\n**Code Samples**\n\nRetrieve File service properties\n\n\\{@codesnippet com.azure.storage.file.fileServiceClient.getProperties\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-service-properties"
  syntax:
    content: "public FileServiceProperties getProperties()"
    return:
      type: "com.azure.storage.file.models.FileServiceProperties"
      description: "Storage account <xref uid=\"com.azure.storage.file.models.FileServiceProperties\" data-throw-if-not-resolved=\"false\">File service properties</xref>"
- uid: "com.azure.storage.file.FileServiceClient.getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)"
  id: "getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileServiceClient"
  langs:
  - "java"
  name: "getPropertiesWithResponse(Duration timeout, Context context)"
  nameWithType: "FileServiceClient.getPropertiesWithResponse(Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileServiceClient.getPropertiesWithResponse(Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileServiceClient.getPropertiesWithResponse*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Retrieves the properties of the storage account's File service. The properties range from storage analytics and metrics to CORS (Cross-Origin Resource Sharing).\n\n**Code Samples**\n\nRetrieve File service properties\n\n\\{@codesnippet com.azure.storage.file.fileServiceClient.getPropertiesWithResponse\\#duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-service-properties"
  syntax:
    content: "public Response<FileServiceProperties> getPropertiesWithResponse(Duration timeout, Context context)"
    parameters:
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileServiceProperties>"
      description: "A response containing the Storage account <xref uid=\"com.azure.storage.file.models.FileServiceProperties\" data-throw-if-not-resolved=\"false\">File service properties</xref> with\n headers and response status code"
- uid: "com.azure.storage.file.FileServiceClient.getShareClient(java.lang.String)"
  id: "getShareClient(java.lang.String)"
  parent: "com.azure.storage.file.FileServiceClient"
  langs:
  - "java"
  name: "getShareClient(String shareName)"
  nameWithType: "FileServiceClient.getShareClient(String shareName)"
  fullName: "com.azure.storage.file.FileServiceClient.getShareClient(String shareName)"
  overload: "com.azure.storage.file.FileServiceClient.getShareClient*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Constructs a ShareClient that interacts with the specified share.\n\nIf the share doesn't exist in the storage account <xref uid=\"com.azure.storage.file.ShareClient.create()\" data-throw-if-not-resolved=\"false\">create</xref> in the fileServiceAsyncClient will need to be called before interaction with the share can happen."
  syntax:
    content: "public ShareClient getShareClient(String shareName)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "Name of the share"
    return:
      type: "com.azure.storage.file.ShareClient"
      description: "a ShareClient that interacts with the specified share"
- uid: "com.azure.storage.file.FileServiceClient.listShares()"
  id: "listShares()"
  parent: "com.azure.storage.file.FileServiceClient"
  langs:
  - "java"
  name: "listShares()"
  nameWithType: "FileServiceClient.listShares()"
  fullName: "com.azure.storage.file.FileServiceClient.listShares()"
  overload: "com.azure.storage.file.FileServiceClient.listShares*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Lists all shares in the storage account without their metadata or snapshots.\n\n**Code Samples**\n\nList all shares in the account\n\n\\{@codesnippet com.azure.storage.file.fileServiceClient.listShares\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-shares"
  syntax:
    content: "public PagedIterable<ShareItem> listShares()"
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.storage.file.models.ShareItem>"
      description: "<xref uid=\"com.azure.storage.file.models.ShareItem\" data-throw-if-not-resolved=\"false\">Shares</xref> in the storage account without their metadata or snapshots"
- uid: "com.azure.storage.file.FileServiceClient.listShares(com.azure.storage.file.models.ListSharesOptions,java.time.Duration,com.azure.core.util.Context)"
  id: "listShares(com.azure.storage.file.models.ListSharesOptions,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileServiceClient"
  langs:
  - "java"
  name: "listShares(ListSharesOptions options, Duration timeout, Context context)"
  nameWithType: "FileServiceClient.listShares(ListSharesOptions options, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileServiceClient.listShares(ListSharesOptions options, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileServiceClient.listShares*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Lists the shares in the Storage account that pass the options filter.\n\nSet starts with name filter using <xref uid=\"com.azure.storage.file.models.ListSharesOptions.setPrefix(java.lang.String)\" data-throw-if-not-resolved=\"false\">prefix</xref> to filter shares that are listed.\n\nPass true to <xref uid=\"com.azure.storage.file.models.ListSharesOptions.setIncludeMetadata(boolean)\" data-throw-if-not-resolved=\"false\">includeMetadata</xref> to have metadata returned for the shares.\n\nPass true to <xref uid=\"com.azure.storage.file.models.ListSharesOptions.setIncludeSnapshots(boolean)\" data-throw-if-not-resolved=\"false\">includeSnapshots</xref> to have snapshots of the shares listed.\n\n**Code Samples**\n\nList all shares that begin with \"azure\"\n\n\\{@codesnippet com.azure.storage.file.FileServiceClient.listShares\\#ListSharesOptions-Duration-Context1\\}\n\nList all shares including their snapshots and metadata\n\n\\{@codesnippet com.azure.storage.file.FileServiceClient.listShares\\#ListSharesOptions-Duration-Context2\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-shares"
  syntax:
    content: "public PagedIterable<ShareItem> listShares(ListSharesOptions options, Duration timeout, Context context)"
    parameters:
    - id: "options"
      type: "com.azure.storage.file.models.ListSharesOptions"
      description: "Options for listing shares"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.storage.file.models.ShareItem>"
      description: "<xref uid=\"com.azure.storage.file.models.ShareItem\" data-throw-if-not-resolved=\"false\">Shares</xref> in the storage account that satisfy the filter requirements"
- uid: "com.azure.storage.file.FileServiceClient.setProperties(com.azure.storage.file.models.FileServiceProperties)"
  id: "setProperties(com.azure.storage.file.models.FileServiceProperties)"
  parent: "com.azure.storage.file.FileServiceClient"
  langs:
  - "java"
  name: "setProperties(FileServiceProperties properties)"
  nameWithType: "FileServiceClient.setProperties(FileServiceProperties properties)"
  fullName: "com.azure.storage.file.FileServiceClient.setProperties(FileServiceProperties properties)"
  overload: "com.azure.storage.file.FileServiceClient.setProperties*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Sets the properties for the storage account's File service. The properties range from storage analytics and metric to CORS (Cross-Origin Resource Sharing). To maintain the CORS in the Queue service pass a `null` value for <xref uid=\"com.azure.storage.file.models.FileServiceProperties.getCors()\" data-throw-if-not-resolved=\"false\">CORS</xref>. To disable all CORS in the Queue service pass an empty list for <xref uid=\"com.azure.storage.file.models.FileServiceProperties.getCors()\" data-throw-if-not-resolved=\"false\">CORS</xref>.\n\n**Code Sample**\n\nClear CORS in the File service\n\n\\{@codesnippet com.azure.storage.file.fileServiceClient.setPropertiesWithResponse\\#fileServiceProperties-Context.clearCORS\\}\n\nEnable Minute and Hour Metrics\n\n\\{@codesnippet com.azure.storage.file.fileServiceClient.setProperties\\#fileServiceProperties\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-service-properties"
  syntax:
    content: "public void setProperties(FileServiceProperties properties)"
    parameters:
    - id: "properties"
      type: "com.azure.storage.file.models.FileServiceProperties"
      description: "Storage account File service properties"
- uid: "com.azure.storage.file.FileServiceClient.setPropertiesWithResponse(com.azure.storage.file.models.FileServiceProperties,java.time.Duration,com.azure.core.util.Context)"
  id: "setPropertiesWithResponse(com.azure.storage.file.models.FileServiceProperties,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileServiceClient"
  langs:
  - "java"
  name: "setPropertiesWithResponse(FileServiceProperties properties, Duration timeout, Context context)"
  nameWithType: "FileServiceClient.setPropertiesWithResponse(FileServiceProperties properties, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileServiceClient.setPropertiesWithResponse(FileServiceProperties properties, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileServiceClient.setPropertiesWithResponse*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Sets the properties for the storage account's File service. The properties range from storage analytics and metric to CORS (Cross-Origin Resource Sharing). To maintain the CORS in the Queue service pass a `null` value for <xref uid=\"com.azure.storage.file.models.FileServiceProperties.getCors()\" data-throw-if-not-resolved=\"false\">CORS</xref>. To disable all CORS in the Queue service pass an empty list for <xref uid=\"com.azure.storage.file.models.FileServiceProperties.getCors()\" data-throw-if-not-resolved=\"false\">CORS</xref>.\n\n**Code Sample**\n\nClear CORS in the File service\n\n\\{@codesnippet com.azure.storage.file.fileServiceClient.setPropertiesWithResponse\\#fileServiceProperties-Context.clearCORS\\}\n\nEnable Minute and Hour Metrics\n\n\\{@codesnippet com.azure.storage.file.fileServiceClient.setPropertiesWithResponse\\#fileServiceProperties-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-service-properties"
  syntax:
    content: "public Response<Void> setPropertiesWithResponse(FileServiceProperties properties, Duration timeout, Context context)"
    parameters:
    - id: "properties"
      type: "com.azure.storage.file.models.FileServiceProperties"
      description: "Storage account File service properties"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<java.lang.Void>"
      description: "A response that only contains headers and response status code"
references:
- uid: "com.azure.storage.file.FileServiceAsyncClient"
  name: "FileServiceAsyncClient"
  nameWithType: "FileServiceAsyncClient"
  fullName: "com.azure.storage.file.FileServiceAsyncClient"
- uid: "com.azure.storage.file.FileServiceClient.FileServiceClient*"
  name: "FileServiceClient"
  nameWithType: "FileServiceClient.FileServiceClient"
  fullName: "com.azure.storage.file.FileServiceClient.FileServiceClient"
  package: "com.azure.storage.file"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.file.FileServiceClient.getFileServiceUrl*"
  name: "getFileServiceUrl"
  nameWithType: "FileServiceClient.getFileServiceUrl"
  fullName: "com.azure.storage.file.FileServiceClient.getFileServiceUrl"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.ShareClient"
  name: "ShareClient"
  nameWithType: "ShareClient"
  fullName: "com.azure.storage.file.ShareClient"
- uid: "com.azure.storage.file.FileServiceClient.getShareClient*"
  name: "getShareClient"
  nameWithType: "FileServiceClient.getShareClient"
  fullName: "com.azure.storage.file.FileServiceClient.getShareClient"
  package: "com.azure.storage.file"
- uid: "com.azure.core.http.rest.PagedIterable<com.azure.storage.file.models.ShareItem>"
  spec.java:
  - uid: "com.azure.core.http.rest.PagedIterable"
    name: "PagedIterable"
    fullName: "com.azure.core.http.rest.PagedIterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.models.ShareItem"
    name: "ShareItem"
    fullName: "com.azure.storage.file.models.ShareItem"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.FileServiceClient.listShares*"
  name: "listShares"
  nameWithType: "FileServiceClient.listShares"
  fullName: "com.azure.storage.file.FileServiceClient.listShares"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.models.ListSharesOptions"
  name: "ListSharesOptions"
  nameWithType: "ListSharesOptions"
  fullName: "com.azure.storage.file.models.ListSharesOptions"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "com.azure.storage.file.models.FileServiceProperties"
  name: "FileServiceProperties"
  nameWithType: "FileServiceProperties"
  fullName: "com.azure.storage.file.models.FileServiceProperties"
- uid: "com.azure.storage.file.FileServiceClient.getProperties*"
  name: "getProperties"
  nameWithType: "FileServiceClient.getProperties"
  fullName: "com.azure.storage.file.FileServiceClient.getProperties"
  package: "com.azure.storage.file"
- uid: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileServiceProperties>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.models.FileServiceProperties"
    name: "FileServiceProperties"
    fullName: "com.azure.storage.file.models.FileServiceProperties"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.FileServiceClient.getPropertiesWithResponse*"
  name: "getPropertiesWithResponse"
  nameWithType: "FileServiceClient.getPropertiesWithResponse"
  fullName: "com.azure.storage.file.FileServiceClient.getPropertiesWithResponse"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileServiceClient.setProperties*"
  name: "setProperties"
  nameWithType: "FileServiceClient.setProperties"
  fullName: "com.azure.storage.file.FileServiceClient.setProperties"
  package: "com.azure.storage.file"
- uid: "com.azure.core.http.rest.Response<java.lang.Void>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.FileServiceClient.setPropertiesWithResponse*"
  name: "setPropertiesWithResponse"
  nameWithType: "FileServiceClient.setPropertiesWithResponse"
  fullName: "com.azure.storage.file.FileServiceClient.setPropertiesWithResponse"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileServiceClient.createShare*"
  name: "createShare"
  nameWithType: "FileServiceClient.createShare"
  fullName: "com.azure.storage.file.FileServiceClient.createShare"
  package: "com.azure.storage.file"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.azure.core.http.rest.Response<com.azure.storage.file.ShareClient>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.ShareClient"
    name: "ShareClient"
    fullName: "com.azure.storage.file.ShareClient"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.FileServiceClient.createShareWithResponse*"
  name: "createShareWithResponse"
  nameWithType: "FileServiceClient.createShareWithResponse"
  fullName: "com.azure.storage.file.FileServiceClient.createShareWithResponse"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileServiceClient.deleteShare*"
  name: "deleteShare"
  nameWithType: "FileServiceClient.deleteShare"
  fullName: "com.azure.storage.file.FileServiceClient.deleteShare"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileServiceClient.deleteShareWithResponse*"
  name: "deleteShareWithResponse"
  nameWithType: "FileServiceClient.deleteShareWithResponse"
  fullName: "com.azure.storage.file.FileServiceClient.deleteShareWithResponse"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileServiceClient.getAccountName*"
  name: "getAccountName"
  nameWithType: "FileServiceClient.getAccountName"
  fullName: "com.azure.storage.file.FileServiceClient.getAccountName"
  package: "com.azure.storage.file"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.storage.file.models.ShareItem"
  name: "ShareItem"
  nameWithType: "ShareItem"
  fullName: "com.azure.storage.file.models.ShareItem"
- uid: "com.azure.core.http.rest.PagedIterable"
  name: "PagedIterable"
  nameWithType: "PagedIterable"
  fullName: "com.azure.core.http.rest.PagedIterable"
- uid: "com.azure.core.http.rest.Response"
  name: "Response"
  nameWithType: "Response"
  fullName: "com.azure.core.http.rest.Response"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
