### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.ShareClientBuilder"
  id: "ShareClientBuilder"
  parent: "com.azure.storage.file"
  children:
  - "com.azure.storage.file.ShareClientBuilder.ShareClientBuilder()"
  - "com.azure.storage.file.ShareClientBuilder.buildAsyncClient()"
  - "com.azure.storage.file.ShareClientBuilder.buildClient()"
  - "com.azure.storage.file.ShareClientBuilder.endpoint(java.lang.String)"
  - "com.azure.storage.file.ShareClientBuilder.getClazz()"
  - "com.azure.storage.file.ShareClientBuilder.shareName(java.lang.String)"
  - "com.azure.storage.file.ShareClientBuilder.snapshot(java.lang.String)"
  langs:
  - "java"
  name: "ShareClientBuilder"
  nameWithType: "ShareClientBuilder"
  fullName: "com.azure.storage.file.ShareClientBuilder"
  type: "Class"
  package: "com.azure.storage.file"
  summary: "This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid=\"com.azure.storage.file.ShareClient\" data-throw-if-not-resolved=\"false\">ShareClients</xref> and <xref uid=\"com.azure.storage.file.ShareAsyncClient\" data-throw-if-not-resolved=\"false\">ShareAsyncClients</xref>, calling <xref uid=\"com.azure.storage.file.ShareClientBuilder.buildClient()\" data-throw-if-not-resolved=\"false\">buildClient</xref> constructs an instance of ShareClient and calling <xref uid=\"com.azure.storage.file.ShareClientBuilder.buildAsyncClient()\" data-throw-if-not-resolved=\"false\">buildAsyncClient</xref> constructs an instance of ShareAsyncClient.\n\nThe client needs the endpoint of the Azure Storage File service, name of the share, and authorization credential. <xref uid=\"com.azure.storage.file.ShareClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> gives the builder the endpoint and may give the builder the <xref uid=\"com.azure.storage.file.ShareClientBuilder.shareName(java.lang.String)\" data-throw-if-not-resolved=\"false\">shareName</xref> and a <xref uid=\"\" data-throw-if-not-resolved=\"false\">SAS token</xref> that authorizes the client.\n\n**Instantiating a synchronous Share Client with SAS token**\n\n\\{@codesnippet com.azure.storage.file.shareClient.instantiation.sastoken\\}\n\n**Instantiating an Asynchronous Share Client with SAS token**\n\n\\{@codesnippet com.azure.storage.file.shareAsyncClient.instantiation.sastoken\\}\n\nIf the `endpoint` doesn't contain the query parameters to construct a SAS token it may be set using <xref uid=\"\" data-throw-if-not-resolved=\"false\">sasToken</xref>.\n\n\\{@codesnippet com.azure.storage.file.shareClient.instantiation.credential\\} \\{@codesnippet com.azure.storage.file.shareAsyncClient.instantiation.credential\\}\n\nAnother way to authenticate the client is using a <xref uid=\"\" data-throw-if-not-resolved=\"false\">SharedKeyCredential</xref>. To create a SharedKeyCredential a connection string from the Storage File service must be used. Set the SharedKeyCredential with <xref uid=\"\" data-throw-if-not-resolved=\"false\">connectionString</xref>. If the builder has both a SAS token and SharedKeyCredential the SharedKeyCredential will be preferred when authorizing requests sent to the service.\n\n**Instantiating a synchronous Share Client with connection string.**\n\n\\{@codesnippet com.azure.storage.file.shareClient.instantiation.connectionstring\\}\n\n**Instantiating an Asynchronous Share Client with connection string.**\n\n\\{@codesnippet com.azure.storage.file.shareAsyncClient.instantiation.connectionstring\\}"
  syntax:
    content: "public class ShareClientBuilder extends BaseFileClientBuilder<ShareClientBuilder>"
  inheritance:
  - "java.lang.Object"
  - "com.azure.storage.common.BaseClientBuilder"
  - "com.azure.storage.file.BaseFileClientBuilder"
  inheritedMembers:
  - "com.azure.storage.common.BaseClientBuilder.addOptionalEncryptionPolicy(java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>)"
  - "com.azure.storage.common.BaseClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  - "com.azure.storage.common.BaseClientBuilder.buildPipeline()"
  - "com.azure.storage.common.BaseClientBuilder.configuration(com.azure.core.util.Configuration)"
  - "com.azure.storage.common.BaseClientBuilder.connectionString(java.lang.String)"
  - "com.azure.storage.common.BaseClientBuilder.credential(com.azure.storage.common.credentials.SharedKeyCredential)"
  - "com.azure.storage.common.BaseClientBuilder.endpoint(java.lang.String)"
  - "com.azure.storage.common.BaseClientBuilder.getClazz()"
  - "com.azure.storage.common.BaseClientBuilder.getConfiguration()"
  - "com.azure.storage.common.BaseClientBuilder.getPipeline()"
  - "com.azure.storage.common.BaseClientBuilder.hasCredential()"
  - "com.azure.storage.common.BaseClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  - "com.azure.storage.common.BaseClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  - "com.azure.storage.common.BaseClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  - "com.azure.storage.common.BaseClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)"
  - "com.azure.storage.common.BaseClientBuilder.sasToken(java.lang.String)"
  - "com.azure.storage.file.BaseFileClientBuilder.applyServiceSpecificValidations(com.azure.storage.common.policy.ResponseValidationPolicyBuilder)"
  - "com.azure.storage.file.BaseFileClientBuilder.credential(com.azure.core.credentials.TokenCredential)"
  - "com.azure.storage.file.BaseFileClientBuilder.getServiceUrlMidfix()"
  - "com.azure.storage.file.BaseFileClientBuilder.getUserAgentPolicy()"
  - "com.azure.storage.file.BaseFileClientBuilder.setAnonymousCredential()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.ShareClientBuilder.ShareClientBuilder()"
  id: "ShareClientBuilder()"
  parent: "com.azure.storage.file.ShareClientBuilder"
  langs:
  - "java"
  name: "ShareClientBuilder()"
  nameWithType: "ShareClientBuilder.ShareClientBuilder()"
  fullName: "com.azure.storage.file.ShareClientBuilder.ShareClientBuilder()"
  overload: "com.azure.storage.file.ShareClientBuilder.ShareClientBuilder*"
  type: "Constructor"
  package: "com.azure.storage.file"
  summary: "Creates a builder instance that is able to configure and construct <xref uid=\"com.azure.storage.file.ShareClient\" data-throw-if-not-resolved=\"false\">ShareClients</xref> and <xref uid=\"com.azure.storage.file.ShareAsyncClient\" data-throw-if-not-resolved=\"false\">ShareAsyncClients</xref>."
  syntax:
    content: "public ShareClientBuilder()"
- uid: "com.azure.storage.file.ShareClientBuilder.buildAsyncClient()"
  id: "buildAsyncClient()"
  parent: "com.azure.storage.file.ShareClientBuilder"
  langs:
  - "java"
  name: "buildAsyncClient()"
  nameWithType: "ShareClientBuilder.buildAsyncClient()"
  fullName: "com.azure.storage.file.ShareClientBuilder.buildAsyncClient()"
  overload: "com.azure.storage.file.ShareClientBuilder.buildAsyncClient*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Creates a <xref uid=\"com.azure.storage.file.ShareAsyncClient\" data-throw-if-not-resolved=\"false\">ShareAsyncClient</xref> based on options set in the builder. Every time `buildAsyncClient()` is called a new instance of <xref uid=\"com.azure.storage.file.ShareAsyncClient\" data-throw-if-not-resolved=\"false\">ShareAsyncClient</xref> is created.\n\nIf <xref uid=\"\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then the `pipeline` and <xref uid=\"com.azure.storage.file.ShareClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> are used to create the <xref uid=\"com.azure.storage.file.ShareAsyncClient\" data-throw-if-not-resolved=\"false\">client</xref>. All other builder settings are ignored."
  syntax:
    content: "public ShareAsyncClient buildAsyncClient()"
    return:
      type: "com.azure.storage.file.ShareAsyncClient"
      description: "A ShareAsyncClient with the options set from the builder."
- uid: "com.azure.storage.file.ShareClientBuilder.buildClient()"
  id: "buildClient()"
  parent: "com.azure.storage.file.ShareClientBuilder"
  langs:
  - "java"
  name: "buildClient()"
  nameWithType: "ShareClientBuilder.buildClient()"
  fullName: "com.azure.storage.file.ShareClientBuilder.buildClient()"
  overload: "com.azure.storage.file.ShareClientBuilder.buildClient*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Creates a <xref uid=\"com.azure.storage.file.ShareClient\" data-throw-if-not-resolved=\"false\">ShareClient</xref> based on options set in the builder. Every time `buildClient()` is called a new instance of <xref uid=\"com.azure.storage.file.ShareClient\" data-throw-if-not-resolved=\"false\">ShareClient</xref> is created.\n\nIf <xref uid=\"\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then the `pipeline` and <xref uid=\"com.azure.storage.file.ShareClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> are used to create the <xref uid=\"com.azure.storage.file.ShareClient\" data-throw-if-not-resolved=\"false\">client</xref>. All other builder settings are ignored."
  syntax:
    content: "public ShareClient buildClient()"
    return:
      type: "com.azure.storage.file.ShareClient"
      description: "A ShareClient with the options set from the builder."
- uid: "com.azure.storage.file.ShareClientBuilder.endpoint(java.lang.String)"
  id: "endpoint(java.lang.String)"
  parent: "com.azure.storage.file.ShareClientBuilder"
  langs:
  - "java"
  name: "endpoint(String endpoint)"
  nameWithType: "ShareClientBuilder.endpoint(String endpoint)"
  fullName: "com.azure.storage.file.ShareClientBuilder.endpoint(String endpoint)"
  overload: "com.azure.storage.file.ShareClientBuilder.endpoint*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Sets the endpoint for the Azure Storage File instance that the client will interact with.\n\nThe first path segment, if the endpoint contains path segments, will be assumed to be the name of the share that the client will interact with.\n\nQuery parameters of the endpoint will be parsed in an attempt to generate a SAS token to authenticate requests sent to the service."
  syntax:
    content: "public ShareClientBuilder endpoint(String endpoint)"
    parameters:
    - id: "endpoint"
      type: "java.lang.String"
      description: "The URL of the Azure Storage File instance to send service requests to and receive responses\n from."
    return:
      type: "com.azure.storage.file.ShareClientBuilder"
      description: "the updated ShareClientBuilder object"
- uid: "com.azure.storage.file.ShareClientBuilder.getClazz()"
  id: "getClazz()"
  parent: "com.azure.storage.file.ShareClientBuilder"
  langs:
  - "java"
  name: "getClazz()"
  nameWithType: "ShareClientBuilder.getClazz()"
  fullName: "com.azure.storage.file.ShareClientBuilder.getClazz()"
  overload: "com.azure.storage.file.ShareClientBuilder.getClazz*"
  type: "Method"
  package: "com.azure.storage.file"
  syntax:
    content: "protected Class<ShareClientBuilder> getClazz()"
    return:
      type: "java.lang.Class<com.azure.storage.file.ShareClientBuilder>"
- uid: "com.azure.storage.file.ShareClientBuilder.shareName(java.lang.String)"
  id: "shareName(java.lang.String)"
  parent: "com.azure.storage.file.ShareClientBuilder"
  langs:
  - "java"
  name: "shareName(String shareName)"
  nameWithType: "ShareClientBuilder.shareName(String shareName)"
  fullName: "com.azure.storage.file.ShareClientBuilder.shareName(String shareName)"
  overload: "com.azure.storage.file.ShareClientBuilder.shareName*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Sets the share that the constructed clients will interact with"
  syntax:
    content: "public ShareClientBuilder shareName(String shareName)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "Name of the share"
    return:
      type: "com.azure.storage.file.ShareClientBuilder"
      description: "the updated ShareClientBuilder object"
- uid: "com.azure.storage.file.ShareClientBuilder.snapshot(java.lang.String)"
  id: "snapshot(java.lang.String)"
  parent: "com.azure.storage.file.ShareClientBuilder"
  langs:
  - "java"
  name: "snapshot(String snapshot)"
  nameWithType: "ShareClientBuilder.snapshot(String snapshot)"
  fullName: "com.azure.storage.file.ShareClientBuilder.snapshot(String snapshot)"
  overload: "com.azure.storage.file.ShareClientBuilder.snapshot*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Sets the snapshot that the constructed clients will interact with. This snapshot must be linked to the share that has been specified in the builder."
  syntax:
    content: "public ShareClientBuilder snapshot(String snapshot)"
    parameters:
    - id: "snapshot"
      type: "java.lang.String"
      description: "Identifier of the snapshot"
    return:
      type: "com.azure.storage.file.ShareClientBuilder"
      description: "the updated ShareClientBuilder object"
references:
- uid: "com.azure.storage.file.ShareClientBuilder.ShareClientBuilder*"
  name: "ShareClientBuilder"
  nameWithType: "ShareClientBuilder.ShareClientBuilder"
  fullName: "com.azure.storage.file.ShareClientBuilder.ShareClientBuilder"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.ShareAsyncClient"
  name: "ShareAsyncClient"
  nameWithType: "ShareAsyncClient"
  fullName: "com.azure.storage.file.ShareAsyncClient"
- uid: "com.azure.storage.file.ShareClientBuilder.buildAsyncClient*"
  name: "buildAsyncClient"
  nameWithType: "ShareClientBuilder.buildAsyncClient"
  fullName: "com.azure.storage.file.ShareClientBuilder.buildAsyncClient"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.ShareClient"
  name: "ShareClient"
  nameWithType: "ShareClient"
  fullName: "com.azure.storage.file.ShareClient"
- uid: "com.azure.storage.file.ShareClientBuilder.buildClient*"
  name: "buildClient"
  nameWithType: "ShareClientBuilder.buildClient"
  fullName: "com.azure.storage.file.ShareClientBuilder.buildClient"
  package: "com.azure.storage.file"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.file.ShareClientBuilder.endpoint*"
  name: "endpoint"
  nameWithType: "ShareClientBuilder.endpoint"
  fullName: "com.azure.storage.file.ShareClientBuilder.endpoint"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.ShareClientBuilder.shareName*"
  name: "shareName"
  nameWithType: "ShareClientBuilder.shareName"
  fullName: "com.azure.storage.file.ShareClientBuilder.shareName"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.ShareClientBuilder.snapshot*"
  name: "snapshot"
  nameWithType: "ShareClientBuilder.snapshot"
  fullName: "com.azure.storage.file.ShareClientBuilder.snapshot"
  package: "com.azure.storage.file"
- uid: "java.lang.Class<com.azure.storage.file.ShareClientBuilder>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.ShareClientBuilder"
    name: "ShareClientBuilder"
    fullName: "com.azure.storage.file.ShareClientBuilder"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.ShareClientBuilder.getClazz*"
  name: "getClazz"
  nameWithType: "ShareClientBuilder.getClazz"
  fullName: "com.azure.storage.file.ShareClientBuilder.getClazz"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.BaseFileClientBuilder<com.azure.storage.file.ShareClientBuilder>"
  name: "BaseFileClientBuilder<ShareClientBuilder>"
  nameWithType: "BaseFileClientBuilder<ShareClientBuilder>"
  fullName: "com.azure.storage.file.BaseFileClientBuilder<com.azure.storage.file.ShareClientBuilder>"
- uid: "com.azure.storage.common.BaseClientBuilder.credential(com.azure.storage.common.credentials.SharedKeyCredential)"
  name: "BaseClientBuilder.credential(SharedKeyCredential)"
  nameWithType: "BaseClientBuilder.credential(SharedKeyCredential)"
  fullName: "com.azure.storage.common.BaseClientBuilder.credential(com.azure.storage.common.credentials.SharedKeyCredential)"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.azure.storage.common.BaseClientBuilder.buildPipeline()"
  name: "BaseClientBuilder.buildPipeline()"
  nameWithType: "BaseClientBuilder.buildPipeline()"
  fullName: "com.azure.storage.common.BaseClientBuilder.buildPipeline()"
- uid: "com.azure.storage.common.BaseClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)"
  name: "BaseClientBuilder.retryOptions(RequestRetryOptions)"
  nameWithType: "BaseClientBuilder.retryOptions(RequestRetryOptions)"
  fullName: "com.azure.storage.common.BaseClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)"
- uid: "com.azure.storage.file.BaseFileClientBuilder.getServiceUrlMidfix()"
  name: "BaseFileClientBuilder.getServiceUrlMidfix()"
  nameWithType: "BaseFileClientBuilder.getServiceUrlMidfix()"
  fullName: "com.azure.storage.file.BaseFileClientBuilder.getServiceUrlMidfix()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.storage.common.BaseClientBuilder.sasToken(java.lang.String)"
  name: "BaseClientBuilder.sasToken(String)"
  nameWithType: "BaseClientBuilder.sasToken(String)"
  fullName: "com.azure.storage.common.BaseClientBuilder.sasToken(java.lang.String)"
- uid: "com.azure.storage.file.BaseFileClientBuilder.applyServiceSpecificValidations(com.azure.storage.common.policy.ResponseValidationPolicyBuilder)"
  name: "BaseFileClientBuilder.applyServiceSpecificValidations(ResponseValidationPolicyBuilder)"
  nameWithType: "BaseFileClientBuilder.applyServiceSpecificValidations(ResponseValidationPolicyBuilder)"
  fullName: "com.azure.storage.file.BaseFileClientBuilder.applyServiceSpecificValidations(com.azure.storage.common.policy.ResponseValidationPolicyBuilder)"
- uid: "com.azure.storage.common.BaseClientBuilder.getConfiguration()"
  name: "BaseClientBuilder.getConfiguration()"
  nameWithType: "BaseClientBuilder.getConfiguration()"
  fullName: "com.azure.storage.common.BaseClientBuilder.getConfiguration()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.azure.storage.common.BaseClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  name: "BaseClientBuilder.httpLogOptions(HttpLogOptions)"
  nameWithType: "BaseClientBuilder.httpLogOptions(HttpLogOptions)"
  fullName: "com.azure.storage.common.BaseClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.azure.storage.common.BaseClientBuilder.addOptionalEncryptionPolicy(java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>)"
  name: "BaseClientBuilder.addOptionalEncryptionPolicy(List<HttpPipelinePolicy>)"
  nameWithType: "BaseClientBuilder.addOptionalEncryptionPolicy(List<HttpPipelinePolicy>)"
  fullName: "com.azure.storage.common.BaseClientBuilder.addOptionalEncryptionPolicy(java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.common.BaseClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  name: "BaseClientBuilder.pipeline(HttpPipeline)"
  nameWithType: "BaseClientBuilder.pipeline(HttpPipeline)"
  fullName: "com.azure.storage.common.BaseClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
- uid: "com.azure.storage.file.BaseFileClientBuilder.getUserAgentPolicy()"
  name: "BaseFileClientBuilder.getUserAgentPolicy()"
  nameWithType: "BaseFileClientBuilder.getUserAgentPolicy()"
  fullName: "com.azure.storage.file.BaseFileClientBuilder.getUserAgentPolicy()"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.storage.common.BaseClientBuilder.endpoint(java.lang.String)"
  name: "BaseClientBuilder.endpoint(String)"
  nameWithType: "BaseClientBuilder.endpoint(String)"
  fullName: "com.azure.storage.common.BaseClientBuilder.endpoint(java.lang.String)"
- uid: "com.azure.storage.file.BaseFileClientBuilder.credential(com.azure.core.credentials.TokenCredential)"
  name: "BaseFileClientBuilder.credential(TokenCredential)"
  nameWithType: "BaseFileClientBuilder.credential(TokenCredential)"
  fullName: "com.azure.storage.file.BaseFileClientBuilder.credential(com.azure.core.credentials.TokenCredential)"
- uid: "com.azure.storage.common.BaseClientBuilder.hasCredential()"
  name: "BaseClientBuilder.hasCredential()"
  nameWithType: "BaseClientBuilder.hasCredential()"
  fullName: "com.azure.storage.common.BaseClientBuilder.hasCredential()"
- uid: "com.azure.storage.common.BaseClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  name: "BaseClientBuilder.httpClient(HttpClient)"
  nameWithType: "BaseClientBuilder.httpClient(HttpClient)"
  fullName: "com.azure.storage.common.BaseClientBuilder.httpClient(com.azure.core.http.HttpClient)"
- uid: "com.azure.storage.common.BaseClientBuilder.getClazz()"
  name: "BaseClientBuilder.getClazz()"
  nameWithType: "BaseClientBuilder.getClazz()"
  fullName: "com.azure.storage.common.BaseClientBuilder.getClazz()"
- uid: "com.azure.storage.common.BaseClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  name: "BaseClientBuilder.addPolicy(HttpPipelinePolicy)"
  nameWithType: "BaseClientBuilder.addPolicy(HttpPipelinePolicy)"
  fullName: "com.azure.storage.common.BaseClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
- uid: "com.azure.storage.common.BaseClientBuilder.configuration(com.azure.core.util.Configuration)"
  name: "BaseClientBuilder.configuration(Configuration)"
  nameWithType: "BaseClientBuilder.configuration(Configuration)"
  fullName: "com.azure.storage.common.BaseClientBuilder.configuration(com.azure.core.util.Configuration)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.storage.file.BaseFileClientBuilder.setAnonymousCredential()"
  name: "BaseFileClientBuilder.setAnonymousCredential()"
  nameWithType: "BaseFileClientBuilder.setAnonymousCredential()"
  fullName: "com.azure.storage.file.BaseFileClientBuilder.setAnonymousCredential()"
- uid: "com.azure.storage.common.BaseClientBuilder.getPipeline()"
  name: "BaseClientBuilder.getPipeline()"
  nameWithType: "BaseClientBuilder.getPipeline()"
  fullName: "com.azure.storage.common.BaseClientBuilder.getPipeline()"
- uid: "com.azure.storage.common.BaseClientBuilder.connectionString(java.lang.String)"
  name: "BaseClientBuilder.connectionString(String)"
  nameWithType: "BaseClientBuilder.connectionString(String)"
  fullName: "com.azure.storage.common.BaseClientBuilder.connectionString(java.lang.String)"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "com.azure.storage.file.BaseFileClientBuilder"
  name: "BaseFileClientBuilder"
  nameWithType: "BaseFileClientBuilder"
  fullName: "com.azure.storage.file.BaseFileClientBuilder"
- uid: "com.azure.core.http.policy.HttpPipelinePolicy>)"
  name: "HttpPipelinePolicy>)"
  nameWithType: "HttpPipelinePolicy>)"
  fullName: "com.azure.core.http.policy.HttpPipelinePolicy>)"
- uid: "com.azure.storage.common.BaseClientBuilder.addOptionalEncryptionPolicy(java.util.List"
  name: "BaseClientBuilder.addOptionalEncryptionPolicy(List"
  nameWithType: "BaseClientBuilder.addOptionalEncryptionPolicy(List"
  fullName: "com.azure.storage.common.BaseClientBuilder.addOptionalEncryptionPolicy(java.util.List"
