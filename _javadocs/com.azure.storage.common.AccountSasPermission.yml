### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.common.AccountSasPermission"
  id: "AccountSasPermission"
  parent: "com.azure.storage.common"
  children:
  - "com.azure.storage.common.AccountSasPermission.AccountSasPermission()"
  - "com.azure.storage.common.AccountSasPermission.getAddPermission()"
  - "com.azure.storage.common.AccountSasPermission.getCreatePermission()"
  - "com.azure.storage.common.AccountSasPermission.getDeletePermission()"
  - "com.azure.storage.common.AccountSasPermission.getListPermission()"
  - "com.azure.storage.common.AccountSasPermission.getProcessMessages()"
  - "com.azure.storage.common.AccountSasPermission.getReadPermission()"
  - "com.azure.storage.common.AccountSasPermission.getUpdatePermission()"
  - "com.azure.storage.common.AccountSasPermission.getWritePermission()"
  - "com.azure.storage.common.AccountSasPermission.parse(java.lang.String)"
  - "com.azure.storage.common.AccountSasPermission.setAddPermission(boolean)"
  - "com.azure.storage.common.AccountSasPermission.setCreatePermission(boolean)"
  - "com.azure.storage.common.AccountSasPermission.setDeletePermission(boolean)"
  - "com.azure.storage.common.AccountSasPermission.setListPermission(boolean)"
  - "com.azure.storage.common.AccountSasPermission.setProcessMessages(boolean)"
  - "com.azure.storage.common.AccountSasPermission.setReadPermission(boolean)"
  - "com.azure.storage.common.AccountSasPermission.setUpdatePermission(boolean)"
  - "com.azure.storage.common.AccountSasPermission.setWritePermission(boolean)"
  - "com.azure.storage.common.AccountSasPermission.toString()"
  langs:
  - "java"
  name: "AccountSasPermission"
  nameWithType: "AccountSasPermission"
  fullName: "com.azure.storage.common.AccountSasPermission"
  type: "Class"
  package: "com.azure.storage.common"
  summary: "This is a helper class to construct a string representing the permissions granted by an AccountSAS. Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the values are set, this should be serialized with toString and set as the permissions field on an <xref uid=\"com.azure.storage.common.AccountSasSignatureValues\" data-throw-if-not-resolved=\"false\">AccountSasSignatureValues</xref> object. It is possible to construct the permissions string without this class, but the order of the permissions is particular and this class guarantees correctness."
  syntax:
    content: "public final class AccountSasPermission"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.common.AccountSasPermission.AccountSasPermission()"
  id: "AccountSasPermission()"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "AccountSasPermission()"
  nameWithType: "AccountSasPermission.AccountSasPermission()"
  fullName: "com.azure.storage.common.AccountSasPermission.AccountSasPermission()"
  overload: "com.azure.storage.common.AccountSasPermission.AccountSasPermission*"
  type: "Constructor"
  package: "com.azure.storage.common"
  summary: "Initializes an `AccountSasPermission` object with all fields set to false."
  syntax:
    content: "public AccountSasPermission()"
- uid: "com.azure.storage.common.AccountSasPermission.getAddPermission()"
  id: "getAddPermission()"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "getAddPermission()"
  nameWithType: "AccountSasPermission.getAddPermission()"
  fullName: "com.azure.storage.common.AccountSasPermission.getAddPermission()"
  overload: "com.azure.storage.common.AccountSasPermission.getAddPermission*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public boolean getAddPermission()"
    return:
      type: "boolean"
      description: "the add permission status"
- uid: "com.azure.storage.common.AccountSasPermission.getCreatePermission()"
  id: "getCreatePermission()"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "getCreatePermission()"
  nameWithType: "AccountSasPermission.getCreatePermission()"
  fullName: "com.azure.storage.common.AccountSasPermission.getCreatePermission()"
  overload: "com.azure.storage.common.AccountSasPermission.getCreatePermission*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public boolean getCreatePermission()"
    return:
      type: "boolean"
      description: "the create permission status"
- uid: "com.azure.storage.common.AccountSasPermission.getDeletePermission()"
  id: "getDeletePermission()"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "getDeletePermission()"
  nameWithType: "AccountSasPermission.getDeletePermission()"
  fullName: "com.azure.storage.common.AccountSasPermission.getDeletePermission()"
  overload: "com.azure.storage.common.AccountSasPermission.getDeletePermission*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public boolean getDeletePermission()"
    return:
      type: "boolean"
      description: "the delete permission status"
- uid: "com.azure.storage.common.AccountSasPermission.getListPermission()"
  id: "getListPermission()"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "getListPermission()"
  nameWithType: "AccountSasPermission.getListPermission()"
  fullName: "com.azure.storage.common.AccountSasPermission.getListPermission()"
  overload: "com.azure.storage.common.AccountSasPermission.getListPermission*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public boolean getListPermission()"
    return:
      type: "boolean"
      description: "the list permission status"
- uid: "com.azure.storage.common.AccountSasPermission.getProcessMessages()"
  id: "getProcessMessages()"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "getProcessMessages()"
  nameWithType: "AccountSasPermission.getProcessMessages()"
  fullName: "com.azure.storage.common.AccountSasPermission.getProcessMessages()"
  overload: "com.azure.storage.common.AccountSasPermission.getProcessMessages*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Returns the process messages permission, this allows the retrieval and deletion of queue messages."
  syntax:
    content: "public boolean getProcessMessages()"
    return:
      type: "boolean"
      description: "the process messages permission status."
- uid: "com.azure.storage.common.AccountSasPermission.getReadPermission()"
  id: "getReadPermission()"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "getReadPermission()"
  nameWithType: "AccountSasPermission.getReadPermission()"
  fullName: "com.azure.storage.common.AccountSasPermission.getReadPermission()"
  overload: "com.azure.storage.common.AccountSasPermission.getReadPermission*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public boolean getReadPermission()"
    return:
      type: "boolean"
      description: "the read permission status"
- uid: "com.azure.storage.common.AccountSasPermission.getUpdatePermission()"
  id: "getUpdatePermission()"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "getUpdatePermission()"
  nameWithType: "AccountSasPermission.getUpdatePermission()"
  fullName: "com.azure.storage.common.AccountSasPermission.getUpdatePermission()"
  overload: "com.azure.storage.common.AccountSasPermission.getUpdatePermission*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Returns the update permission status, it allows the update of queue message and tables."
  syntax:
    content: "public boolean getUpdatePermission()"
    return:
      type: "boolean"
      description: "the update permission status"
- uid: "com.azure.storage.common.AccountSasPermission.getWritePermission()"
  id: "getWritePermission()"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "getWritePermission()"
  nameWithType: "AccountSasPermission.getWritePermission()"
  fullName: "com.azure.storage.common.AccountSasPermission.getWritePermission()"
  overload: "com.azure.storage.common.AccountSasPermission.getWritePermission*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public boolean getWritePermission()"
    return:
      type: "boolean"
      description: "the write permission status"
- uid: "com.azure.storage.common.AccountSasPermission.parse(java.lang.String)"
  id: "parse(java.lang.String)"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "parse(String permString)"
  nameWithType: "AccountSasPermission.parse(String permString)"
  fullName: "com.azure.storage.common.AccountSasPermission.parse(String permString)"
  overload: "com.azure.storage.common.AccountSasPermission.parse*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Creates an `AccountSasPermission` from the specified permissions string. This method will throw an `IllegalArgumentException` if it encounters a character that does not correspond to a valid permission."
  syntax:
    content: "public static AccountSasPermission parse(String permString)"
    parameters:
    - id: "permString"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the <code>SharedAccessAccountPermissions</code>."
    return:
      type: "com.azure.storage.common.AccountSasPermission"
      description: "An <code>AccountSasPermission</code> object generated from the given <code>String</code>."
- uid: "com.azure.storage.common.AccountSasPermission.setAddPermission(boolean)"
  id: "setAddPermission(boolean)"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "setAddPermission(boolean hadAddPermission)"
  nameWithType: "AccountSasPermission.setAddPermission(boolean hadAddPermission)"
  fullName: "com.azure.storage.common.AccountSasPermission.setAddPermission(boolean hadAddPermission)"
  overload: "com.azure.storage.common.AccountSasPermission.setAddPermission*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the add permission status."
  syntax:
    content: "public AccountSasPermission setAddPermission(boolean hadAddPermission)"
    parameters:
    - id: "hadAddPermission"
      type: "boolean"
      description: "Permission status to set"
    return:
      type: "com.azure.storage.common.AccountSasPermission"
      description: "the updated AccountSasPermission object"
- uid: "com.azure.storage.common.AccountSasPermission.setCreatePermission(boolean)"
  id: "setCreatePermission(boolean)"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "setCreatePermission(boolean hasCreatePermission)"
  nameWithType: "AccountSasPermission.setCreatePermission(boolean hasCreatePermission)"
  fullName: "com.azure.storage.common.AccountSasPermission.setCreatePermission(boolean hasCreatePermission)"
  overload: "com.azure.storage.common.AccountSasPermission.setCreatePermission*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the create permission status."
  syntax:
    content: "public AccountSasPermission setCreatePermission(boolean hasCreatePermission)"
    parameters:
    - id: "hasCreatePermission"
      type: "boolean"
      description: "Permission status to set"
    return:
      type: "com.azure.storage.common.AccountSasPermission"
      description: "the updated AccountSasPermission object"
- uid: "com.azure.storage.common.AccountSasPermission.setDeletePermission(boolean)"
  id: "setDeletePermission(boolean)"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "setDeletePermission(boolean hasDeletePermission)"
  nameWithType: "AccountSasPermission.setDeletePermission(boolean hasDeletePermission)"
  fullName: "com.azure.storage.common.AccountSasPermission.setDeletePermission(boolean hasDeletePermission)"
  overload: "com.azure.storage.common.AccountSasPermission.setDeletePermission*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the delete permission status."
  syntax:
    content: "public AccountSasPermission setDeletePermission(boolean hasDeletePermission)"
    parameters:
    - id: "hasDeletePermission"
      type: "boolean"
      description: "Permission status to set"
    return:
      type: "com.azure.storage.common.AccountSasPermission"
      description: "the updated AccountSasPermission object"
- uid: "com.azure.storage.common.AccountSasPermission.setListPermission(boolean)"
  id: "setListPermission(boolean)"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "setListPermission(boolean hadListPermission)"
  nameWithType: "AccountSasPermission.setListPermission(boolean hadListPermission)"
  fullName: "com.azure.storage.common.AccountSasPermission.setListPermission(boolean hadListPermission)"
  overload: "com.azure.storage.common.AccountSasPermission.setListPermission*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the list permission status. This permission grants the ability to list blob containers, blobs, shares, directories, and files."
  syntax:
    content: "public AccountSasPermission setListPermission(boolean hadListPermission)"
    parameters:
    - id: "hadListPermission"
      type: "boolean"
      description: "Permission status to set"
    return:
      type: "com.azure.storage.common.AccountSasPermission"
      description: "the updated AccountSasPermission object"
- uid: "com.azure.storage.common.AccountSasPermission.setProcessMessages(boolean)"
  id: "setProcessMessages(boolean)"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "setProcessMessages(boolean hasProcessMessagesPermission)"
  nameWithType: "AccountSasPermission.setProcessMessages(boolean hasProcessMessagesPermission)"
  fullName: "com.azure.storage.common.AccountSasPermission.setProcessMessages(boolean hasProcessMessagesPermission)"
  overload: "com.azure.storage.common.AccountSasPermission.setProcessMessages*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the process messages permission, this allows the retrieval and deletion of queue messages."
  syntax:
    content: "public AccountSasPermission setProcessMessages(boolean hasProcessMessagesPermission)"
    parameters:
    - id: "hasProcessMessagesPermission"
      type: "boolean"
      description: "Permission status to set"
    return:
      type: "com.azure.storage.common.AccountSasPermission"
      description: "the updated AccountSasPermission object"
- uid: "com.azure.storage.common.AccountSasPermission.setReadPermission(boolean)"
  id: "setReadPermission(boolean)"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "setReadPermission(boolean hasReadPermission)"
  nameWithType: "AccountSasPermission.setReadPermission(boolean hasReadPermission)"
  fullName: "com.azure.storage.common.AccountSasPermission.setReadPermission(boolean hasReadPermission)"
  overload: "com.azure.storage.common.AccountSasPermission.setReadPermission*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the read permission status."
  syntax:
    content: "public AccountSasPermission setReadPermission(boolean hasReadPermission)"
    parameters:
    - id: "hasReadPermission"
      type: "boolean"
      description: "Permission status to set"
    return:
      type: "com.azure.storage.common.AccountSasPermission"
      description: "the updated AccountSasPermission object"
- uid: "com.azure.storage.common.AccountSasPermission.setUpdatePermission(boolean)"
  id: "setUpdatePermission(boolean)"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "setUpdatePermission(boolean hasUpdatePermission)"
  nameWithType: "AccountSasPermission.setUpdatePermission(boolean hasUpdatePermission)"
  fullName: "com.azure.storage.common.AccountSasPermission.setUpdatePermission(boolean hasUpdatePermission)"
  overload: "com.azure.storage.common.AccountSasPermission.setUpdatePermission*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the update permission status, it allows the update of queue messages and tables."
  syntax:
    content: "public AccountSasPermission setUpdatePermission(boolean hasUpdatePermission)"
    parameters:
    - id: "hasUpdatePermission"
      type: "boolean"
      description: "Permission status to set"
    return:
      type: "com.azure.storage.common.AccountSasPermission"
      description: "the updated AccountSasPermission object"
- uid: "com.azure.storage.common.AccountSasPermission.setWritePermission(boolean)"
  id: "setWritePermission(boolean)"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "setWritePermission(boolean hasWritePermission)"
  nameWithType: "AccountSasPermission.setWritePermission(boolean hasWritePermission)"
  fullName: "com.azure.storage.common.AccountSasPermission.setWritePermission(boolean hasWritePermission)"
  overload: "com.azure.storage.common.AccountSasPermission.setWritePermission*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the write permission status."
  syntax:
    content: "public AccountSasPermission setWritePermission(boolean hasWritePermission)"
    parameters:
    - id: "hasWritePermission"
      type: "boolean"
      description: "Permission status to set"
    return:
      type: "com.azure.storage.common.AccountSasPermission"
      description: "the updated AccountSasPermission object"
- uid: "com.azure.storage.common.AccountSasPermission.toString()"
  id: "toString()"
  parent: "com.azure.storage.common.AccountSasPermission"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "AccountSasPermission.toString()"
  fullName: "com.azure.storage.common.AccountSasPermission.toString()"
  overload: "com.azure.storage.common.AccountSasPermission.toString*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Converts the given permissions to a `String`. Using this method will guarantee the permissions are in an order accepted by the service."
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the <code>AccountSASPermissions</code>."
references:
- uid: "com.azure.storage.common.AccountSasPermission.AccountSasPermission*"
  name: "AccountSasPermission"
  nameWithType: "AccountSasPermission.AccountSasPermission"
  fullName: "com.azure.storage.common.AccountSasPermission.AccountSasPermission"
  package: "com.azure.storage.common"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.common.AccountSasPermission.parse*"
  name: "parse"
  nameWithType: "AccountSasPermission.parse"
  fullName: "com.azure.storage.common.AccountSasPermission.parse"
  package: "com.azure.storage.common"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.storage.common.AccountSasPermission.getReadPermission*"
  name: "getReadPermission"
  nameWithType: "AccountSasPermission.getReadPermission"
  fullName: "com.azure.storage.common.AccountSasPermission.getReadPermission"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasPermission.setReadPermission*"
  name: "setReadPermission"
  nameWithType: "AccountSasPermission.setReadPermission"
  fullName: "com.azure.storage.common.AccountSasPermission.setReadPermission"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasPermission.getAddPermission*"
  name: "getAddPermission"
  nameWithType: "AccountSasPermission.getAddPermission"
  fullName: "com.azure.storage.common.AccountSasPermission.getAddPermission"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasPermission.setAddPermission*"
  name: "setAddPermission"
  nameWithType: "AccountSasPermission.setAddPermission"
  fullName: "com.azure.storage.common.AccountSasPermission.setAddPermission"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasPermission.getCreatePermission*"
  name: "getCreatePermission"
  nameWithType: "AccountSasPermission.getCreatePermission"
  fullName: "com.azure.storage.common.AccountSasPermission.getCreatePermission"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasPermission.setCreatePermission*"
  name: "setCreatePermission"
  nameWithType: "AccountSasPermission.setCreatePermission"
  fullName: "com.azure.storage.common.AccountSasPermission.setCreatePermission"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasPermission.getWritePermission*"
  name: "getWritePermission"
  nameWithType: "AccountSasPermission.getWritePermission"
  fullName: "com.azure.storage.common.AccountSasPermission.getWritePermission"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasPermission.setWritePermission*"
  name: "setWritePermission"
  nameWithType: "AccountSasPermission.setWritePermission"
  fullName: "com.azure.storage.common.AccountSasPermission.setWritePermission"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasPermission.getDeletePermission*"
  name: "getDeletePermission"
  nameWithType: "AccountSasPermission.getDeletePermission"
  fullName: "com.azure.storage.common.AccountSasPermission.getDeletePermission"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasPermission.setDeletePermission*"
  name: "setDeletePermission"
  nameWithType: "AccountSasPermission.setDeletePermission"
  fullName: "com.azure.storage.common.AccountSasPermission.setDeletePermission"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasPermission.getListPermission*"
  name: "getListPermission"
  nameWithType: "AccountSasPermission.getListPermission"
  fullName: "com.azure.storage.common.AccountSasPermission.getListPermission"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasPermission.setListPermission*"
  name: "setListPermission"
  nameWithType: "AccountSasPermission.setListPermission"
  fullName: "com.azure.storage.common.AccountSasPermission.setListPermission"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasPermission.getUpdatePermission*"
  name: "getUpdatePermission"
  nameWithType: "AccountSasPermission.getUpdatePermission"
  fullName: "com.azure.storage.common.AccountSasPermission.getUpdatePermission"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasPermission.setUpdatePermission*"
  name: "setUpdatePermission"
  nameWithType: "AccountSasPermission.setUpdatePermission"
  fullName: "com.azure.storage.common.AccountSasPermission.setUpdatePermission"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasPermission.getProcessMessages*"
  name: "getProcessMessages"
  nameWithType: "AccountSasPermission.getProcessMessages"
  fullName: "com.azure.storage.common.AccountSasPermission.getProcessMessages"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasPermission.setProcessMessages*"
  name: "setProcessMessages"
  nameWithType: "AccountSasPermission.setProcessMessages"
  fullName: "com.azure.storage.common.AccountSasPermission.setProcessMessages"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasPermission.toString*"
  name: "toString"
  nameWithType: "AccountSasPermission.toString"
  fullName: "com.azure.storage.common.AccountSasPermission.toString"
  package: "com.azure.storage.common"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
