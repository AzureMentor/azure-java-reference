### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.FileClient"
  id: "FileClient"
  parent: "com.azure.storage.file"
  children:
  - "com.azure.storage.file.FileClient.FileClient(com.azure.storage.file.FileAsyncClient)"
  - "com.azure.storage.file.FileClient.abortCopy(java.lang.String)"
  - "com.azure.storage.file.FileClient.abortCopyWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileClient.clearRange(long)"
  - "com.azure.storage.file.FileClient.clearRangeWithResponse(long,long,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileClient.create(long)"
  - "com.azure.storage.file.FileClient.createWithResponse(long,com.azure.storage.file.models.FileHTTPHeaders,com.azure.storage.file.FileSmbProperties,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileClient.delete()"
  - "com.azure.storage.file.FileClient.deleteWithResponse(java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileClient.downloadToFile(java.lang.String)"
  - "com.azure.storage.file.FileClient.downloadToFileWithResponse(java.lang.String,com.azure.storage.file.models.FileRange,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileClient.downloadWithProperties()"
  - "com.azure.storage.file.FileClient.downloadWithPropertiesWithResponse(com.azure.storage.file.models.FileRange,java.lang.Boolean,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileClient.forceCloseHandles(java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileClient.getAccountName()"
  - "com.azure.storage.file.FileClient.getFileOutputStream()"
  - "com.azure.storage.file.FileClient.getFileOutputStream(long)"
  - "com.azure.storage.file.FileClient.getFilePath()"
  - "com.azure.storage.file.FileClient.getFileUrl()"
  - "com.azure.storage.file.FileClient.getProperties()"
  - "com.azure.storage.file.FileClient.getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileClient.getShareName()"
  - "com.azure.storage.file.FileClient.getShareSnapshotId()"
  - "com.azure.storage.file.FileClient.listHandles()"
  - "com.azure.storage.file.FileClient.listHandles(java.lang.Integer,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileClient.listRanges()"
  - "com.azure.storage.file.FileClient.listRanges(com.azure.storage.file.models.FileRange,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileClient.openInputStream()"
  - "com.azure.storage.file.FileClient.openInputStream(com.azure.storage.file.models.FileRange)"
  - "com.azure.storage.file.FileClient.setMetadata(java.util.Map<java.lang.String,java.lang.String>)"
  - "com.azure.storage.file.FileClient.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileClient.setProperties(long,com.azure.storage.file.models.FileHTTPHeaders,com.azure.storage.file.FileSmbProperties,java.lang.String)"
  - "com.azure.storage.file.FileClient.setPropertiesWithResponse(long,com.azure.storage.file.models.FileHTTPHeaders,com.azure.storage.file.FileSmbProperties,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileClient.startCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>)"
  - "com.azure.storage.file.FileClient.startCopyWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileClient.upload(java.nio.ByteBuffer,long)"
  - "com.azure.storage.file.FileClient.uploadFromFile(java.lang.String)"
  - "com.azure.storage.file.FileClient.uploadRangeFromUrl(long,long,long,java.net.URI)"
  - "com.azure.storage.file.FileClient.uploadRangeFromUrlWithResponse(long,long,long,java.net.URI,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileClient.uploadWithResponse(java.nio.ByteBuffer,long,java.time.Duration,com.azure.core.util.Context)"
  - "com.azure.storage.file.FileClient.uploadWithResponse(java.nio.ByteBuffer,long,long,java.time.Duration,com.azure.core.util.Context)"
  langs:
  - "java"
  name: "FileClient"
  nameWithType: "FileClient"
  fullName: "com.azure.storage.file.FileClient"
  type: "Class"
  package: "com.azure.storage.file"
  summary: "This class provides a client that contains all the operations for interacting files under Azure Storage File Service. Operations allowed by the client are creating, uploading, copying, listing, downloading, and deleting files.\n\n**Instantiating a synchronous File Client**\n\n\\{@codesnippet com.azure.storage.file.fileClient.instantiation\\}\n\nView <xref uid=\"com.azure.storage.file.FileClientBuilder\" data-throw-if-not-resolved=\"false\">this</xref> for additional ways to construct the client."
  syntax:
    content: "public class FileClient"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.FileClient.FileClient(com.azure.storage.file.FileAsyncClient)"
  id: "FileClient(com.azure.storage.file.FileAsyncClient)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "FileClient(FileAsyncClient fileAsyncClient)"
  nameWithType: "FileClient.FileClient(FileAsyncClient fileAsyncClient)"
  fullName: "com.azure.storage.file.FileClient.FileClient(FileAsyncClient fileAsyncClient)"
  overload: "com.azure.storage.file.FileClient.FileClient*"
  type: "Constructor"
  package: "com.azure.storage.file"
  summary: "Creates a FileClient that wraps a FileAsyncClient and requests."
  syntax:
    content: " FileClient(FileAsyncClient fileAsyncClient)"
    parameters:
    - id: "fileAsyncClient"
      type: "com.azure.storage.file.FileAsyncClient"
      description: "FileAsyncClient that is used to send requests"
- uid: "com.azure.storage.file.FileClient.abortCopy(java.lang.String)"
  id: "abortCopy(java.lang.String)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "abortCopy(String copyId)"
  nameWithType: "FileClient.abortCopy(String copyId)"
  fullName: "com.azure.storage.file.FileClient.abortCopy(String copyId)"
  overload: "com.azure.storage.file.FileClient.abortCopy*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Aborts a pending Copy File operation, and leaves a destination file with zero length and full metadata.\n\n**Code Samples**\n\nAbort copy file from copy id(\"someCopyId\")\n\n\\{@codesnippet com.azure.storage.file.fileClient.abortCopy\\#string\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-file"
  syntax:
    content: "public void abortCopy(String copyId)"
    parameters:
    - id: "copyId"
      type: "java.lang.String"
      description: "Specifies the copy id which has copying pending status associate with it."
- uid: "com.azure.storage.file.FileClient.abortCopyWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  id: "abortCopyWithResponse(java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "abortCopyWithResponse(String copyId, Duration timeout, Context context)"
  nameWithType: "FileClient.abortCopyWithResponse(String copyId, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileClient.abortCopyWithResponse(String copyId, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileClient.abortCopyWithResponse*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Aborts a pending Copy File operation, and leaves a destination file with zero length and full metadata.\n\n**Code Samples**\n\nAbort copy file from copy id(\"someCopyId\")\n\n\\{@codesnippet com.azure.storage.file.fileClient.abortCopyWithResponse\\#string-duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-file"
  syntax:
    content: "public Response<Void> abortCopyWithResponse(String copyId, Duration timeout, Context context)"
    parameters:
    - id: "copyId"
      type: "java.lang.String"
      description: "Specifies the copy id which has copying pending status associate with it."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<java.lang.Void>"
      description: "A response containing the status of aborting copy the file."
- uid: "com.azure.storage.file.FileClient.clearRange(long)"
  id: "clearRange(long)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "clearRange(long length)"
  nameWithType: "FileClient.clearRange(long length)"
  fullName: "com.azure.storage.file.FileClient.clearRange(long length)"
  overload: "com.azure.storage.file.FileClient.clearRange*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Clears a range of bytes to specific of a file in storage file service. Clear operations performs an in-place write on the specified file.\n\n**Code Samples**\n\nClears the first 1024 bytes.\n\n\\{@codesnippet com.azure.storage.file.fileClient.clearRange\\#long\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public FileUploadInfo clearRange(long length)"
    parameters:
    - id: "length"
      type: "long"
      description: "Specifies the number of bytes being cleared."
    return:
      type: "com.azure.storage.file.models.FileUploadInfo"
      description: "The <xref uid=\"com.azure.storage.file.models.FileUploadInfo\" data-throw-if-not-resolved=\"false\">file upload info</xref>"
- uid: "com.azure.storage.file.FileClient.clearRangeWithResponse(long,long,java.time.Duration,com.azure.core.util.Context)"
  id: "clearRangeWithResponse(long,long,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "clearRangeWithResponse(long length, long offset, Duration timeout, Context context)"
  nameWithType: "FileClient.clearRangeWithResponse(long length, long offset, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileClient.clearRangeWithResponse(long length, long offset, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileClient.clearRangeWithResponse*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Clears a range of bytes to specific of a file in storage file service. Upload operations performs an in-place write on the specified file.\n\n**Code Samples**\n\nClear the range starting from 1024 with length of 1024.\n\n\\{@codesnippet com.azure.storage.file.FileClient.clearRangeWithResponse\\#long-long-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public Response<FileUploadInfo> clearRangeWithResponse(long length, long offset, Duration timeout, Context context)"
    parameters:
    - id: "length"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body."
    - id: "offset"
      type: "long"
      description: "Optional starting point of the upload range. It will start from the beginning if it is\n <code>null</code>"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileUploadInfo>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.models.FileUploadInfo\" data-throw-if-not-resolved=\"false\">file upload info</xref> with headers and response status code"
- uid: "com.azure.storage.file.FileClient.create(long)"
  id: "create(long)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "create(long maxSize)"
  nameWithType: "FileClient.create(long maxSize)"
  fullName: "com.azure.storage.file.FileClient.create(long maxSize)"
  overload: "com.azure.storage.file.FileClient.create*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Creates a file in the storage account and returns a response of <xref uid=\"com.azure.storage.file.models.FileInfo\" data-throw-if-not-resolved=\"false\">FileInfo</xref> to interact with it.\n\n**Code Samples**\n\nCreate the file with length of 1024 bytes, some headers and metadata.\n\n\\{@codesnippet com.azure.storage.file.fileClient.create\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/create-file"
  syntax:
    content: "public FileInfo create(long maxSize)"
    parameters:
    - id: "maxSize"
      type: "long"
      description: "The maximum size in bytes for the file, up to 1 TiB."
    return:
      type: "com.azure.storage.file.models.FileInfo"
      description: "The <xref uid=\"com.azure.storage.file.models.FileInfo\" data-throw-if-not-resolved=\"false\">file info</xref>"
- uid: "com.azure.storage.file.FileClient.createWithResponse(long,com.azure.storage.file.models.FileHTTPHeaders,com.azure.storage.file.FileSmbProperties,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)"
  id: "createWithResponse(long,com.azure.storage.file.models.FileHTTPHeaders,com.azure.storage.file.FileSmbProperties,java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "createWithResponse(long maxSize, FileHTTPHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata, Duration timeout, Context context)"
  nameWithType: "FileClient.createWithResponse(long maxSize, FileHTTPHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileClient.createWithResponse(long maxSize, FileHTTPHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileClient.createWithResponse*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Creates a file in the storage account and returns a response of FileInfo to interact with it.\n\n**Code Samples**\n\nCreate the file with length of 1024 bytes, some headers, file smb properties and metadata.\n\n\\{@codesnippet com.azure.storage.file.fileClient.createWithResponse\\#long-filehttpheaders-filesmbproperties-string-map-duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/create-file"
  syntax:
    content: "public Response<FileInfo> createWithResponse(long maxSize, FileHTTPHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Map<String,String> metadata, Duration timeout, Context context)"
    parameters:
    - id: "maxSize"
      type: "long"
      description: "The maximum size in bytes for the file, up to 1 TiB."
    - id: "httpHeaders"
      type: "com.azure.storage.file.models.FileHTTPHeaders"
      description: "The user settable file http headers."
    - id: "smbProperties"
      type: "com.azure.storage.file.FileSmbProperties"
      description: "The user settable file smb properties."
    - id: "filePermission"
      type: "java.lang.String"
      description: "The file permission of the file."
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Optional name-value pairs associated with the file as metadata."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileInfo>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.models.FileInfo\" data-throw-if-not-resolved=\"false\">file info</xref> and the status of creating the file."
- uid: "com.azure.storage.file.FileClient.delete()"
  id: "delete()"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "delete()"
  nameWithType: "FileClient.delete()"
  fullName: "com.azure.storage.file.FileClient.delete()"
  overload: "com.azure.storage.file.FileClient.delete*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Deletes the file associate with the client.\n\n**Code Samples**\n\nDelete the file\n\n\\{@codesnippet com.azure.storage.file.fileClient.delete\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2"
  syntax:
    content: "public void delete()"
- uid: "com.azure.storage.file.FileClient.deleteWithResponse(java.time.Duration,com.azure.core.util.Context)"
  id: "deleteWithResponse(java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "deleteWithResponse(Duration timeout, Context context)"
  nameWithType: "FileClient.deleteWithResponse(Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileClient.deleteWithResponse(Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileClient.deleteWithResponse*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Deletes the file associate with the client.\n\n**Code Samples**\n\nDelete the file\n\n\\{@codesnippet com.azure.storage.file.fileClient.deleteWithResponse\\#duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2"
  syntax:
    content: "public Response<Void> deleteWithResponse(Duration timeout, Context context)"
    parameters:
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<java.lang.Void>"
      description: "A response that only contains headers and response status code"
- uid: "com.azure.storage.file.FileClient.downloadToFile(java.lang.String)"
  id: "downloadToFile(java.lang.String)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "downloadToFile(String downloadFilePath)"
  nameWithType: "FileClient.downloadToFile(String downloadFilePath)"
  fullName: "com.azure.storage.file.FileClient.downloadToFile(String downloadFilePath)"
  overload: "com.azure.storage.file.FileClient.downloadToFile*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Downloads a file from the system, including its metadata and properties into a file specified by the path.\n\nThe file will be created and must not exist, if the file already exists a <xref uid=\"\" data-throw-if-not-resolved=\"false\">FileAlreadyExistsException</xref> will be thrown.\n\n**Code Samples**\n\nDownload the file to current folder.\n\n\\{@codesnippet com.azure.storage.file.fileClient.downloadToFile\\#string\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file"
  syntax:
    content: "public FileProperties downloadToFile(String downloadFilePath)"
    parameters:
    - id: "downloadFilePath"
      type: "java.lang.String"
      description: "The path where store the downloaded file"
    return:
      type: "com.azure.storage.file.models.FileProperties"
      description: "The properties of the file."
- uid: "com.azure.storage.file.FileClient.downloadToFileWithResponse(java.lang.String,com.azure.storage.file.models.FileRange,java.time.Duration,com.azure.core.util.Context)"
  id: "downloadToFileWithResponse(java.lang.String,com.azure.storage.file.models.FileRange,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "downloadToFileWithResponse(String downloadFilePath, FileRange range, Duration timeout, Context context)"
  nameWithType: "FileClient.downloadToFileWithResponse(String downloadFilePath, FileRange range, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileClient.downloadToFileWithResponse(String downloadFilePath, FileRange range, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileClient.downloadToFileWithResponse*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Downloads a file from the system, including its metadata and properties into a file specified by the path.\n\nThe file will be created and must not exist, if the file already exists a <xref uid=\"\" data-throw-if-not-resolved=\"false\">FileAlreadyExistsException</xref> will be thrown.\n\n**Code Samples**\n\nDownload the file from 1024 to 2048 bytes to current folder.\n\n\\{@codesnippet com.azure.storage.file.fileClient.downloadToFileWithResponse\\#string-filerange-duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file"
  syntax:
    content: "public Response<FileProperties> downloadToFileWithResponse(String downloadFilePath, FileRange range, Duration timeout, Context context)"
    parameters:
    - id: "downloadFilePath"
      type: "java.lang.String"
      description: "The path where store the downloaded file"
    - id: "range"
      type: "com.azure.storage.file.models.FileRange"
      description: "Optional byte range which returns file data only from the specified range."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileProperties>"
      description: "The response of the file properties."
- uid: "com.azure.storage.file.FileClient.downloadWithProperties()"
  id: "downloadWithProperties()"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "downloadWithProperties()"
  nameWithType: "FileClient.downloadWithProperties()"
  fullName: "com.azure.storage.file.FileClient.downloadWithProperties()"
  overload: "com.azure.storage.file.FileClient.downloadWithProperties*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Downloads a file from the system, including its metadata and properties\n\n**Code Samples**\n\nDownload the file with its metadata and properties.\n\n\\{@codesnippet com.azure.storage.file.fileClient.downloadWithProperties\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file"
  syntax:
    content: "public FileDownloadInfo downloadWithProperties()"
    return:
      type: "com.azure.storage.file.models.FileDownloadInfo"
      description: "The <xref uid=\"com.azure.storage.file.models.FileDownloadInfo\" data-throw-if-not-resolved=\"false\">file download info</xref>"
- uid: "com.azure.storage.file.FileClient.downloadWithPropertiesWithResponse(com.azure.storage.file.models.FileRange,java.lang.Boolean,java.time.Duration,com.azure.core.util.Context)"
  id: "downloadWithPropertiesWithResponse(com.azure.storage.file.models.FileRange,java.lang.Boolean,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "downloadWithPropertiesWithResponse(FileRange range, Boolean rangeGetContentMD5, Duration timeout, Context context)"
  nameWithType: "FileClient.downloadWithPropertiesWithResponse(FileRange range, Boolean rangeGetContentMD5, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileClient.downloadWithPropertiesWithResponse(FileRange range, Boolean rangeGetContentMD5, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileClient.downloadWithPropertiesWithResponse*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Downloads a file from the system, including its metadata and properties\n\n**Code Samples**\n\nDownload the file from 1024 to 2048 bytes with its metadata and properties and without the contentMD5.\n\n\\{@codesnippet com.azure.storage.file.FileClient.downloadWithPropertiesWithResponse\\#FileRange-Boolean-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file"
  syntax:
    content: "public Response<FileDownloadInfo> downloadWithPropertiesWithResponse(FileRange range, Boolean rangeGetContentMD5, Duration timeout, Context context)"
    parameters:
    - id: "range"
      type: "com.azure.storage.file.models.FileRange"
      description: "Optional byte range which returns file data only from the specified range."
    - id: "rangeGetContentMD5"
      type: "java.lang.Boolean"
      description: "Optional boolean which the service returns the MD5 hash for the range when it sets to\n true, as long as the range is less than or equal to 4 MB in size."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileDownloadInfo>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.models.FileDownloadInfo\" data-throw-if-not-resolved=\"false\">file download info</xref> headers and response status code"
- uid: "com.azure.storage.file.FileClient.forceCloseHandles(java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  id: "forceCloseHandles(java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "forceCloseHandles(String handleId, Duration timeout, Context context)"
  nameWithType: "FileClient.forceCloseHandles(String handleId, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileClient.forceCloseHandles(String handleId, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileClient.forceCloseHandles*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Closes a handle or handles opened on a file at the service. It is intended to be used alongside <xref uid=\"com.azure.storage.file.FileClient.listHandles()\" data-throw-if-not-resolved=\"false\">FileClient#listHandles()</xref> (Integer)\\} .\n\n**Code Samples**\n\nForce close handles with handles returned by list handles in recursive.\n\n\\{@codesnippet com.azure.storage.file.fileClient.forceCloseHandles\\#string-duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles"
  syntax:
    content: "public PagedIterable<Integer> forceCloseHandles(String handleId, Duration timeout, Context context)"
    parameters:
    - id: "handleId"
      type: "java.lang.String"
      description: "Specifies the handle ID to be closed. Use an asterisk ('*') as a wildcard string to specify all\n handles."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.PagedIterable<java.lang.Integer>"
      description: "The counts of number of handles closed"
- uid: "com.azure.storage.file.FileClient.getAccountName()"
  id: "getAccountName()"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "getAccountName()"
  nameWithType: "FileClient.getAccountName()"
  fullName: "com.azure.storage.file.FileClient.getAccountName()"
  overload: "com.azure.storage.file.FileClient.getAccountName*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Get associated account name."
  syntax:
    content: "public String getAccountName()"
    return:
      type: "java.lang.String"
      description: "account name associated with this storage resource."
- uid: "com.azure.storage.file.FileClient.getFileOutputStream()"
  id: "getFileOutputStream()"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "getFileOutputStream()"
  nameWithType: "FileClient.getFileOutputStream()"
  fullName: "com.azure.storage.file.FileClient.getFileOutputStream()"
  overload: "com.azure.storage.file.FileClient.getFileOutputStream*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Creates and opens an output stream to write data to the file. If the file already exists on the service, it will be overwritten."
  syntax:
    content: "public final StorageFileOutputStream getFileOutputStream()"
    return:
      type: "com.azure.storage.file.StorageFileOutputStream"
      description: "A <xref uid=\"com.azure.storage.file.StorageFileOutputStream\" data-throw-if-not-resolved=\"false\">StorageFileOutputStream</xref> object used to write data to the file."
- uid: "com.azure.storage.file.FileClient.getFileOutputStream(long)"
  id: "getFileOutputStream(long)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "getFileOutputStream(long offset)"
  nameWithType: "FileClient.getFileOutputStream(long offset)"
  fullName: "com.azure.storage.file.FileClient.getFileOutputStream(long offset)"
  overload: "com.azure.storage.file.FileClient.getFileOutputStream*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Creates and opens an output stream to write data to the file. If the file already exists on the service, it will be overwritten."
  syntax:
    content: "public final StorageFileOutputStream getFileOutputStream(long offset)"
    parameters:
    - id: "offset"
      type: "long"
      description: "Optional starting point of the upload range. It will start from the beginning if it is\n <code>null</code>"
    return:
      type: "com.azure.storage.file.StorageFileOutputStream"
      description: "A <xref uid=\"com.azure.storage.file.StorageFileOutputStream\" data-throw-if-not-resolved=\"false\">StorageFileOutputStream</xref> object used to write data to the file."
- uid: "com.azure.storage.file.FileClient.getFilePath()"
  id: "getFilePath()"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "getFilePath()"
  nameWithType: "FileClient.getFilePath()"
  fullName: "com.azure.storage.file.FileClient.getFilePath()"
  overload: "com.azure.storage.file.FileClient.getFilePath*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Get file path of the client.\n\nGet the file path.\n\n\\{@codesnippet com.azure.storage.file.fileClient.getFilePath\\}"
  syntax:
    content: "public String getFilePath()"
    return:
      type: "java.lang.String"
      description: "The path of the file."
- uid: "com.azure.storage.file.FileClient.getFileUrl()"
  id: "getFileUrl()"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "getFileUrl()"
  nameWithType: "FileClient.getFileUrl()"
  fullName: "com.azure.storage.file.FileClient.getFileUrl()"
  overload: "com.azure.storage.file.FileClient.getFileUrl*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Get the url of the storage file client."
  syntax:
    content: "public String getFileUrl()"
    return:
      type: "java.lang.String"
      description: "the URL of the storage file client."
- uid: "com.azure.storage.file.FileClient.getProperties()"
  id: "getProperties()"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "getProperties()"
  nameWithType: "FileClient.getProperties()"
  fullName: "com.azure.storage.file.FileClient.getProperties()"
  overload: "com.azure.storage.file.FileClient.getProperties*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Retrieves the properties of the storage account's file. The properties includes file metadata, last modified date, is server encrypted, and eTag.\n\n**Code Samples**\n\nRetrieve file properties\n\n\\{@codesnippet com.azure.storage.file.fileClient.getProperties\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-properties"
  syntax:
    content: "public FileProperties getProperties()"
    return:
      type: "com.azure.storage.file.models.FileProperties"
      description: "<xref uid=\"com.azure.storage.file.models.FileProperties\" data-throw-if-not-resolved=\"false\">Storage file properties</xref>"
- uid: "com.azure.storage.file.FileClient.getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)"
  id: "getPropertiesWithResponse(java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "getPropertiesWithResponse(Duration timeout, Context context)"
  nameWithType: "FileClient.getPropertiesWithResponse(Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileClient.getPropertiesWithResponse(Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileClient.getPropertiesWithResponse*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Retrieves the properties of the storage account's file. The properties includes file metadata, last modified date, is server encrypted, and eTag.\n\n**Code Samples**\n\nRetrieve file properties\n\n\\{@codesnippet com.azure.storage.file.fileClient.getPropertiesWithResponse\\#duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-properties"
  syntax:
    content: "public Response<FileProperties> getPropertiesWithResponse(Duration timeout, Context context)"
    parameters:
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileProperties>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.models.FileProperties\" data-throw-if-not-resolved=\"false\">Storage file properties</xref> with headers and status code"
- uid: "com.azure.storage.file.FileClient.getShareName()"
  id: "getShareName()"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "getShareName()"
  nameWithType: "FileClient.getShareName()"
  fullName: "com.azure.storage.file.FileClient.getShareName()"
  overload: "com.azure.storage.file.FileClient.getShareName*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Get the share name of file client.\n\nGet the share name.\n\n\\{@codesnippet com.azure.storage.file.fileClient.getShareName\\}"
  syntax:
    content: "public String getShareName()"
    return:
      type: "java.lang.String"
      description: "The share name of the file."
- uid: "com.azure.storage.file.FileClient.getShareSnapshotId()"
  id: "getShareSnapshotId()"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "getShareSnapshotId()"
  nameWithType: "FileClient.getShareSnapshotId()"
  fullName: "com.azure.storage.file.FileClient.getShareSnapshotId()"
  overload: "com.azure.storage.file.FileClient.getShareSnapshotId*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Get snapshot id which attached to <xref uid=\"com.azure.storage.file.FileClient\" data-throw-if-not-resolved=\"false\">FileClient</xref>. Return `null` if no snapshot id attached.\n\n**Code Samples**\n\nGet the share snapshot id.\n\n\\{@codesnippet com.azure.storage.file.fileClient.getShareSnapshotId\\}"
  syntax:
    content: "public String getShareSnapshotId()"
    return:
      type: "java.lang.String"
      description: "The snapshot id which is a unique <code>DateTime</code> value that identifies the share snapshot to its base\n share."
- uid: "com.azure.storage.file.FileClient.listHandles()"
  id: "listHandles()"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "listHandles()"
  nameWithType: "FileClient.listHandles()"
  fullName: "com.azure.storage.file.FileClient.listHandles()"
  overload: "com.azure.storage.file.FileClient.listHandles*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "List of open handles on a file.\n\n**Code Samples**\n\nList all handles for the file client.\n\n\\{@codesnippet com.azure.storage.file.fileClient.listHandles\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-handles"
  syntax:
    content: "public PagedIterable<HandleItem> listHandles()"
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.storage.file.models.HandleItem>"
      description: "<xref uid=\"com.azure.storage.file.models.HandleItem\" data-throw-if-not-resolved=\"false\">handles</xref> in the files that satisfy the requirements"
- uid: "com.azure.storage.file.FileClient.listHandles(java.lang.Integer,java.time.Duration,com.azure.core.util.Context)"
  id: "listHandles(java.lang.Integer,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "listHandles(Integer maxResults, Duration timeout, Context context)"
  nameWithType: "FileClient.listHandles(Integer maxResults, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileClient.listHandles(Integer maxResults, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileClient.listHandles*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "List of open handles on a file.\n\n**Code Samples**\n\nList 10 handles for the file client.\n\n\\{@codesnippet com.azure.storage.file.fileClient.listHandles\\#integer-duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-handles"
  syntax:
    content: "public PagedIterable<HandleItem> listHandles(Integer maxResults, Duration timeout, Context context)"
    parameters:
    - id: "maxResults"
      type: "java.lang.Integer"
      description: "Optional max number of results returned per page"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.storage.file.models.HandleItem>"
      description: "<xref uid=\"com.azure.storage.file.models.HandleItem\" data-throw-if-not-resolved=\"false\">handles</xref> in the file that satisfy the requirements"
- uid: "com.azure.storage.file.FileClient.listRanges()"
  id: "listRanges()"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "listRanges()"
  nameWithType: "FileClient.listRanges()"
  fullName: "com.azure.storage.file.FileClient.listRanges()"
  overload: "com.azure.storage.file.FileClient.listRanges*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "List of valid ranges for a file.\n\n**Code Samples**\n\nList all ranges for the file client.\n\n\\{@codesnippet com.azure.storage.file.fileClient.listRanges\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-ranges"
  syntax:
    content: "public PagedIterable<FileRange> listRanges()"
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.storage.file.models.FileRange>"
      description: "<xref uid=\"com.azure.storage.file.models.FileRange\" data-throw-if-not-resolved=\"false\">ranges</xref> in the files."
- uid: "com.azure.storage.file.FileClient.listRanges(com.azure.storage.file.models.FileRange,java.time.Duration,com.azure.core.util.Context)"
  id: "listRanges(com.azure.storage.file.models.FileRange,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "listRanges(FileRange range, Duration timeout, Context context)"
  nameWithType: "FileClient.listRanges(FileRange range, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileClient.listRanges(FileRange range, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileClient.listRanges*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "List of valid ranges for a file.\n\n**Code Samples**\n\nList all ranges within the file range from 1KB to 2KB.\n\n\\{@codesnippet com.azure.storage.file.fileClient.listRanges\\#filerange-duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/list-ranges"
  syntax:
    content: "public PagedIterable<FileRange> listRanges(FileRange range, Duration timeout, Context context)"
    parameters:
    - id: "range"
      type: "com.azure.storage.file.models.FileRange"
      description: "Optional byte range which returns file data only from the specified range."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.PagedIterable<com.azure.storage.file.models.FileRange>"
      description: "<xref uid=\"com.azure.storage.file.models.FileRange\" data-throw-if-not-resolved=\"false\">ranges</xref> in the files that satisfy the requirements"
- uid: "com.azure.storage.file.FileClient.openInputStream()"
  id: "openInputStream()"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "openInputStream()"
  nameWithType: "FileClient.openInputStream()"
  fullName: "com.azure.storage.file.FileClient.openInputStream()"
  overload: "com.azure.storage.file.FileClient.openInputStream*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Opens a file input stream to download the file."
  syntax:
    content: "public final StorageFileInputStream openInputStream()"
    return:
      type: "com.azure.storage.file.StorageFileInputStream"
      description: "An <code>InputStream</code> object that represents the stream to use for reading from the file."
- uid: "com.azure.storage.file.FileClient.openInputStream(com.azure.storage.file.models.FileRange)"
  id: "openInputStream(com.azure.storage.file.models.FileRange)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "openInputStream(FileRange range)"
  nameWithType: "FileClient.openInputStream(FileRange range)"
  fullName: "com.azure.storage.file.FileClient.openInputStream(FileRange range)"
  overload: "com.azure.storage.file.FileClient.openInputStream*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Opens a file input stream to download the specified range of the file."
  syntax:
    content: "public final StorageFileInputStream openInputStream(FileRange range)"
    parameters:
    - id: "range"
      type: "com.azure.storage.file.models.FileRange"
      description: "<xref uid=\"com.azure.storage.file.models.FileRange\" data-throw-if-not-resolved=\"false\">FileRange</xref>"
    return:
      type: "com.azure.storage.file.StorageFileInputStream"
      description: "An <code>InputStream</code> object that represents the stream to use for reading from the file."
- uid: "com.azure.storage.file.FileClient.setMetadata(java.util.Map<java.lang.String,java.lang.String>)"
  id: "setMetadata(java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "setMetadata(Map<String,String> metadata)"
  nameWithType: "FileClient.setMetadata(Map<String,String> metadata)"
  fullName: "com.azure.storage.file.FileClient.setMetadata(Map<String,String> metadata)"
  overload: "com.azure.storage.file.FileClient.setMetadata*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Sets the user-defined metadata to associate to the file.\n\nIf `null` is passed for the metadata it will clear the metadata associated to the file.\n\n**Code Samples**\n\nSet the metadata to \"file:updatedMetadata\"\n\n\\{@codesnippet com.azure.storage.file.fileClient.setMetadata\\#map\\}\n\nClear the metadata of the file\n\n\\{@codesnippet com.azure.storage.file.fileClient.setMetadata\\#map.clearMetadata\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-metadata"
  syntax:
    content: "public FileMetadataInfo setMetadata(Map<String,String> metadata)"
    parameters:
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Options.Metadata to set on the file, if null is passed the metadata for the file is cleared"
    return:
      type: "com.azure.storage.file.models.FileMetadataInfo"
      description: "The <xref uid=\"com.azure.storage.file.models.FileMetadataInfo\" data-throw-if-not-resolved=\"false\">file meta info</xref>"
- uid: "com.azure.storage.file.FileClient.setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)"
  id: "setMetadataWithResponse(java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "setMetadataWithResponse(Map<String,String> metadata, Duration timeout, Context context)"
  nameWithType: "FileClient.setMetadataWithResponse(Map<String,String> metadata, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileClient.setMetadataWithResponse(Map<String,String> metadata, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileClient.setMetadataWithResponse*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Sets the user-defined metadata to associate to the file.\n\nIf `null` is passed for the metadata it will clear the metadata associated to the file.\n\n**Code Samples**\n\nSet the metadata to \"file:updatedMetadata\"\n\n\\{@codesnippet com.azure.storage.file.fileClient.setMetadataWithResponse\\#map-duration-context\\}\n\nClear the metadata of the file\n\n\\{@codesnippet com.azure.storage.file.fileClient.setMetadataWithResponse\\#map-duration-context.clearMetadata\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-metadata"
  syntax:
    content: "public Response<FileMetadataInfo> setMetadataWithResponse(Map<String,String> metadata, Duration timeout, Context context)"
    parameters:
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Options.Metadata to set on the file, if null is passed the metadata for the file is cleared"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileMetadataInfo>"
      description: "Response containing the <xref uid=\"com.azure.storage.file.models.FileMetadataInfo\" data-throw-if-not-resolved=\"false\">file meta info</xref> with headers and status code"
- uid: "com.azure.storage.file.FileClient.setProperties(long,com.azure.storage.file.models.FileHTTPHeaders,com.azure.storage.file.FileSmbProperties,java.lang.String)"
  id: "setProperties(long,com.azure.storage.file.models.FileHTTPHeaders,com.azure.storage.file.FileSmbProperties,java.lang.String)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "setProperties(long newFileSize, FileHTTPHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission)"
  nameWithType: "FileClient.setProperties(long newFileSize, FileHTTPHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission)"
  fullName: "com.azure.storage.file.FileClient.setProperties(long newFileSize, FileHTTPHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission)"
  overload: "com.azure.storage.file.FileClient.setProperties*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Sets the user-defined httpHeaders to associate to the file.\n\nIf `null` is passed for the httpHeaders it will clear the httpHeaders associated to the file.\n\n**Code Samples**\n\nSet the httpHeaders of contentType of \"text/plain\"\n\n\\{@codesnippet com.azure.storage.file.fileClient.setProperties\\#long-filehttpheaders-filesmbproperties-string\\}\n\nClear the httpHeaders of the file and preserve the SMB properties\n\n\\{@codesnippet com.azure.storage.file.fileClient.setProperties\\#long-filehttpheaders-filesmbproperties-string.clearHttpHeaderspreserveSMBProperties\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-properties"
  syntax:
    content: "public FileInfo setProperties(long newFileSize, FileHTTPHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission)"
    parameters:
    - id: "newFileSize"
      type: "long"
      description: "New file size of the file"
    - id: "httpHeaders"
      type: "com.azure.storage.file.models.FileHTTPHeaders"
      description: "The user settable file http headers."
    - id: "smbProperties"
      type: "com.azure.storage.file.FileSmbProperties"
      description: "The user settable file smb properties."
    - id: "filePermission"
      type: "java.lang.String"
      description: "The file permission of the file"
    return:
      type: "com.azure.storage.file.models.FileInfo"
      description: "The <xref uid=\"com.azure.storage.file.models.FileInfo\" data-throw-if-not-resolved=\"false\">file info</xref>"
- uid: "com.azure.storage.file.FileClient.setPropertiesWithResponse(long,com.azure.storage.file.models.FileHTTPHeaders,com.azure.storage.file.FileSmbProperties,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  id: "setPropertiesWithResponse(long,com.azure.storage.file.models.FileHTTPHeaders,com.azure.storage.file.FileSmbProperties,java.lang.String,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "setPropertiesWithResponse(long newFileSize, FileHTTPHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Duration timeout, Context context)"
  nameWithType: "FileClient.setPropertiesWithResponse(long newFileSize, FileHTTPHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileClient.setPropertiesWithResponse(long newFileSize, FileHTTPHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileClient.setPropertiesWithResponse*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Sets the user-defined httpHeaders to associate to the file.\n\nIf `null` is passed for the httpHeaders it will clear the httpHeaders associated to the file.\n\n**Code Samples**\n\nSet the httpHeaders of contentType of \"text/plain\"\n\n\\{@codesnippet com.azure.storage.file.fileClient.setPropertiesWithResponse\\#long-filehttpheaders-filesmbproperties-string-duration-Context\\}\n\nClear the httpHeaders of the file and preserve the SMB properties\n\n\\{@codesnippet com.azure.storage.file.fileClient.setPropertiesWithResponse\\#long-filehttpheaders-filesmbproperties-string-duration-Context.clearHttpHeaderspreserveSMBProperties\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-properties"
  syntax:
    content: "public Response<FileInfo> setPropertiesWithResponse(long newFileSize, FileHTTPHeaders httpHeaders, FileSmbProperties smbProperties, String filePermission, Duration timeout, Context context)"
    parameters:
    - id: "newFileSize"
      type: "long"
      description: "New file size of the file"
    - id: "httpHeaders"
      type: "com.azure.storage.file.models.FileHTTPHeaders"
      description: "The user settable file http headers."
    - id: "smbProperties"
      type: "com.azure.storage.file.FileSmbProperties"
      description: "The user settable file smb properties."
    - id: "filePermission"
      type: "java.lang.String"
      description: "The file permission of the file"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileInfo>"
      description: "Response containing the <xref uid=\"com.azure.storage.file.models.FileInfo\" data-throw-if-not-resolved=\"false\">file info</xref> with headers and status code"
- uid: "com.azure.storage.file.FileClient.startCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>)"
  id: "startCopy(java.lang.String,java.util.Map<java.lang.String,java.lang.String>)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "startCopy(String sourceUrl, Map<String,String> metadata)"
  nameWithType: "FileClient.startCopy(String sourceUrl, Map<String,String> metadata)"
  fullName: "com.azure.storage.file.FileClient.startCopy(String sourceUrl, Map<String,String> metadata)"
  overload: "com.azure.storage.file.FileClient.startCopy*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Copies a blob or file to a destination file within the storage account.\n\n**Code Samples**\n\nCopy file from source getDirectoryUrl to the `resourcePath`\n\n\\{@codesnippet com.azure.storage.file.fileClient.startCopy\\#string-map\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/copy-file"
  syntax:
    content: "public FileCopyInfo startCopy(String sourceUrl, Map<String,String> metadata)"
    parameters:
    - id: "sourceUrl"
      type: "java.lang.String"
      description: "Specifies the URL of the source file or blob, up to 2 KB in length."
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Optional name-value pairs associated with the file as metadata. Metadata names must adhere to the\n naming rules."
    return:
      type: "com.azure.storage.file.models.FileCopyInfo"
      description: "The <xref uid=\"com.azure.storage.file.models.FileCopyInfo\" data-throw-if-not-resolved=\"false\">file copy info</xref>"
- uid: "com.azure.storage.file.FileClient.startCopyWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)"
  id: "startCopyWithResponse(java.lang.String,java.util.Map<java.lang.String,java.lang.String>,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "startCopyWithResponse(String sourceUrl, Map<String,String> metadata, Duration timeout, Context context)"
  nameWithType: "FileClient.startCopyWithResponse(String sourceUrl, Map<String,String> metadata, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileClient.startCopyWithResponse(String sourceUrl, Map<String,String> metadata, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileClient.startCopyWithResponse*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Copies a blob or file to a destination file within the storage account.\n\n**Code Samples**\n\nCopy file from source getDirectoryUrl to the `resourcePath`\n\n\\{@codesnippet com.azure.storage.file.fileClient.startCopyWithResponse\\#string-map-duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/copy-file"
  syntax:
    content: "public Response<FileCopyInfo> startCopyWithResponse(String sourceUrl, Map<String,String> metadata, Duration timeout, Context context)"
    parameters:
    - id: "sourceUrl"
      type: "java.lang.String"
      description: "Specifies the URL of the source file or blob, up to 2 KB in length."
    - id: "metadata"
      type: "java.util.Map<java.lang.String,java.lang.String>"
      description: "Optional name-value pairs associated with the file as metadata. Metadata names must adhere to the\n naming rules."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileCopyInfo>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.models.FileCopyInfo\" data-throw-if-not-resolved=\"false\">file copy info</xref> and the status of copying the file."
- uid: "com.azure.storage.file.FileClient.upload(java.nio.ByteBuffer,long)"
  id: "upload(java.nio.ByteBuffer,long)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "upload(ByteBuffer data, long length)"
  nameWithType: "FileClient.upload(ByteBuffer data, long length)"
  fullName: "com.azure.storage.file.FileClient.upload(ByteBuffer data, long length)"
  overload: "com.azure.storage.file.FileClient.upload*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Uploads a range of bytes to the beginning of a file in storage file service. Upload operations performs an in-place write on the specified file.\n\n**Code Samples**\n\nUpload data \"default\" to the file in Storage File Service.\n\n\\{@codesnippet com.azure.storage.file.fileClient.upload\\#bytebuffer-long\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public FileUploadInfo upload(ByteBuffer data, long length)"
    parameters:
    - id: "data"
      type: "java.nio.ByteBuffer"
      description: "The data which will upload to the storage file."
    - id: "length"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body. When the FileRangeWriteType is\n set to clear, the value of this header must be set to zero.."
    return:
      type: "com.azure.storage.file.models.FileUploadInfo"
      description: "The <xref uid=\"com.azure.storage.file.models.FileUploadInfo\" data-throw-if-not-resolved=\"false\">file upload info</xref>"
- uid: "com.azure.storage.file.FileClient.uploadFromFile(java.lang.String)"
  id: "uploadFromFile(java.lang.String)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "uploadFromFile(String uploadFilePath)"
  nameWithType: "FileClient.uploadFromFile(String uploadFilePath)"
  fullName: "com.azure.storage.file.FileClient.uploadFromFile(String uploadFilePath)"
  overload: "com.azure.storage.file.FileClient.uploadFromFile*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Uploads file to storage file service.\n\n**Code Samples**\n\nUpload the file from the source file path.\n\n\\{@codesnippet com.azure.storage.file.fileClient.uploadFromFile\\#string\\}\n\nFor more information, see the [Azure Docs Create File][] and [Azure Docs Upload][].\n\n\n[Azure Docs Create File]: https://docs.microsoft.com/en-us/rest/api/storageservices/create-file\n[Azure Docs Upload]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public void uploadFromFile(String uploadFilePath)"
    parameters:
    - id: "uploadFilePath"
      type: "java.lang.String"
      description: "The path where store the source file to upload"
- uid: "com.azure.storage.file.FileClient.uploadRangeFromUrl(long,long,long,java.net.URI)"
  id: "uploadRangeFromUrl(long,long,long,java.net.URI)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "uploadRangeFromUrl(long length, long destinationOffset, long sourceOffset, URI sourceURI)"
  nameWithType: "FileClient.uploadRangeFromUrl(long length, long destinationOffset, long sourceOffset, URI sourceURI)"
  fullName: "com.azure.storage.file.FileClient.uploadRangeFromUrl(long length, long destinationOffset, long sourceOffset, URI sourceURI)"
  overload: "com.azure.storage.file.FileClient.uploadRangeFromUrl*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Uploads a range of bytes from one file to another file.\n\n**Code Samples**\n\nUpload a number of bytes from a file at defined source and destination offsets\n\n\\{@codesnippet com.azure.storage.file.fileClient.uploadRangeFromUrl\\#long-long-long-uri\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public FileUploadRangeFromUrlInfo uploadRangeFromUrl(long length, long destinationOffset, long sourceOffset, URI sourceURI)"
    parameters:
    - id: "length"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body."
    - id: "destinationOffset"
      type: "long"
      description: "Starting point of the upload range on the destination."
    - id: "sourceOffset"
      type: "long"
      description: "Starting point of the upload range on the source."
    - id: "sourceURI"
      type: "java.net.URI"
      description: "Specifies the URL of the source file."
    return:
      type: "com.azure.storage.file.models.FileUploadRangeFromUrlInfo"
      description: "The <xref uid=\"com.azure.storage.file.models.FileUploadRangeFromUrlInfo\" data-throw-if-not-resolved=\"false\">file upload range from url info</xref>"
- uid: "com.azure.storage.file.FileClient.uploadRangeFromUrlWithResponse(long,long,long,java.net.URI,java.time.Duration,com.azure.core.util.Context)"
  id: "uploadRangeFromUrlWithResponse(long,long,long,java.net.URI,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, URI sourceURI, Duration timeout, Context context)"
  nameWithType: "FileClient.uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, URI sourceURI, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileClient.uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, URI sourceURI, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileClient.uploadRangeFromUrlWithResponse*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Uploads a range of bytes from one file to another file.\n\n**Code Samples**\n\nUpload a number of bytes from a file at defined source and destination offsets\n\n\\{@codesnippet com.azure.storage.file.fileClient.uploadRangeFromUrlWithResponse\\#long-long-long-uri-duration-context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public Response<FileUploadRangeFromUrlInfo> uploadRangeFromUrlWithResponse(long length, long destinationOffset, long sourceOffset, URI sourceURI, Duration timeout, Context context)"
    parameters:
    - id: "length"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body."
    - id: "destinationOffset"
      type: "long"
      description: "Starting point of the upload range on the destination."
    - id: "sourceOffset"
      type: "long"
      description: "Starting point of the upload range on the source."
    - id: "sourceURI"
      type: "java.net.URI"
      description: "Specifies the URL of the source file."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileUploadRangeFromUrlInfo>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.models.FileUploadRangeFromUrlInfo\" data-throw-if-not-resolved=\"false\">file upload range from url info</xref> with headers\n and response status code."
- uid: "com.azure.storage.file.FileClient.uploadWithResponse(java.nio.ByteBuffer,long,java.time.Duration,com.azure.core.util.Context)"
  id: "uploadWithResponse(java.nio.ByteBuffer,long,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "uploadWithResponse(ByteBuffer data, long length, Duration timeout, Context context)"
  nameWithType: "FileClient.uploadWithResponse(ByteBuffer data, long length, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileClient.uploadWithResponse(ByteBuffer data, long length, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileClient.uploadWithResponse*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Uploads a range of bytes to the beginning of a file in storage file service. Upload operations performs an in-place write on the specified file.\n\n**Code Samples**\n\nUpload \"default\" to the file.\n\n\\{@codesnippet com.azure.storage.file.FileClient.uploadWithResponse\\#ByteBuffer-long-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public Response<FileUploadInfo> uploadWithResponse(ByteBuffer data, long length, Duration timeout, Context context)"
    parameters:
    - id: "data"
      type: "java.nio.ByteBuffer"
      description: "The data which will upload to the storage file."
    - id: "length"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body. When the FileRangeWriteType is\n set to clear, the value of this header must be set to zero."
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileUploadInfo>"
      description: "The <xref uid=\"com.azure.storage.file.models.FileUploadInfo\" data-throw-if-not-resolved=\"false\">file upload info</xref>"
- uid: "com.azure.storage.file.FileClient.uploadWithResponse(java.nio.ByteBuffer,long,long,java.time.Duration,com.azure.core.util.Context)"
  id: "uploadWithResponse(java.nio.ByteBuffer,long,long,java.time.Duration,com.azure.core.util.Context)"
  parent: "com.azure.storage.file.FileClient"
  langs:
  - "java"
  name: "uploadWithResponse(ByteBuffer data, long length, long offset, Duration timeout, Context context)"
  nameWithType: "FileClient.uploadWithResponse(ByteBuffer data, long length, long offset, Duration timeout, Context context)"
  fullName: "com.azure.storage.file.FileClient.uploadWithResponse(ByteBuffer data, long length, long offset, Duration timeout, Context context)"
  overload: "com.azure.storage.file.FileClient.uploadWithResponse*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Uploads a range of bytes to specific of a file in storage file service. Upload operations performs an in-place write on the specified file.\n\n**Code Samples**\n\nUpload data \"default\" starting from 1024.\n\n\\{@codesnippet com.azure.storage.file.FileClient.uploadWithResponse\\#ByteBuffer-long-long-Duration-Context\\}\n\nFor more information, see the [Azure Docs][].\n\n\n[Azure Docs]: https://docs.microsoft.com/en-us/rest/api/storageservices/put-range"
  syntax:
    content: "public Response<FileUploadInfo> uploadWithResponse(ByteBuffer data, long length, long offset, Duration timeout, Context context)"
    parameters:
    - id: "data"
      type: "java.nio.ByteBuffer"
      description: "The data which will upload to the storage file."
    - id: "length"
      type: "long"
      description: "Specifies the number of bytes being transmitted in the request body."
    - id: "offset"
      type: "long"
      description: "Optional starting point of the upload range. It will start from the beginning if it is\n <code>null</code>"
    - id: "timeout"
      type: "java.time.Duration"
      description: "An optional timeout applied to the operation. If a response is not returned before the timeout\n concludes a <xref uid=\"\" data-throw-if-not-resolved=\"false\">RuntimeException</xref> will be thrown."
    - id: "context"
      type: "com.azure.core.util.Context"
      description: "Additional context that is passed through the Http pipeline during the service call."
    return:
      type: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileUploadInfo>"
      description: "A response containing the <xref uid=\"com.azure.storage.file.models.FileUploadInfo\" data-throw-if-not-resolved=\"false\">file upload info</xref> with headers and response status code"
references:
- uid: "com.azure.storage.file.FileAsyncClient"
  name: "FileAsyncClient"
  nameWithType: "FileAsyncClient"
  fullName: "com.azure.storage.file.FileAsyncClient"
- uid: "com.azure.storage.file.FileClient.FileClient*"
  name: "FileClient"
  nameWithType: "FileClient.FileClient"
  fullName: "com.azure.storage.file.FileClient.FileClient"
  package: "com.azure.storage.file"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.file.FileClient.getFileUrl*"
  name: "getFileUrl"
  nameWithType: "FileClient.getFileUrl"
  fullName: "com.azure.storage.file.FileClient.getFileUrl"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.StorageFileInputStream"
  name: "StorageFileInputStream"
  nameWithType: "StorageFileInputStream"
  fullName: "com.azure.storage.file.StorageFileInputStream"
- uid: "com.azure.storage.file.FileClient.openInputStream*"
  name: "openInputStream"
  nameWithType: "FileClient.openInputStream"
  fullName: "com.azure.storage.file.FileClient.openInputStream"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.models.FileRange"
  name: "FileRange"
  nameWithType: "FileRange"
  fullName: "com.azure.storage.file.models.FileRange"
- uid: "com.azure.storage.file.StorageFileOutputStream"
  name: "StorageFileOutputStream"
  nameWithType: "StorageFileOutputStream"
  fullName: "com.azure.storage.file.StorageFileOutputStream"
- uid: "com.azure.storage.file.FileClient.getFileOutputStream*"
  name: "getFileOutputStream"
  nameWithType: "FileClient.getFileOutputStream"
  fullName: "com.azure.storage.file.FileClient.getFileOutputStream"
  package: "com.azure.storage.file"
- uid: "long"
  spec.java:
  - uid: "long"
    name: "long"
    fullName: "long"
- uid: "com.azure.storage.file.models.FileInfo"
  name: "FileInfo"
  nameWithType: "FileInfo"
  fullName: "com.azure.storage.file.models.FileInfo"
- uid: "com.azure.storage.file.FileClient.create*"
  name: "create"
  nameWithType: "FileClient.create"
  fullName: "com.azure.storage.file.FileClient.create"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.models.FileHTTPHeaders"
  name: "FileHTTPHeaders"
  nameWithType: "FileHTTPHeaders"
  fullName: "com.azure.storage.file.models.FileHTTPHeaders"
- uid: "com.azure.storage.file.FileSmbProperties"
  name: "FileSmbProperties"
  nameWithType: "FileSmbProperties"
  fullName: "com.azure.storage.file.FileSmbProperties"
- uid: "java.util.Map<java.lang.String,java.lang.String>"
  spec.java:
  - uid: "java.util.Map"
    name: "Map"
    fullName: "java.util.Map"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ","
    fullName: ","
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "java.time.Duration"
  spec.java:
  - uid: "java.time.Duration"
    name: "Duration"
    fullName: "java.time.Duration"
- uid: "com.azure.core.util.Context"
  spec.java:
  - uid: "com.azure.core.util.Context"
    name: "Context"
    fullName: "com.azure.core.util.Context"
- uid: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileInfo>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.models.FileInfo"
    name: "FileInfo"
    fullName: "com.azure.storage.file.models.FileInfo"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.FileClient.createWithResponse*"
  name: "createWithResponse"
  nameWithType: "FileClient.createWithResponse"
  fullName: "com.azure.storage.file.FileClient.createWithResponse"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.models.FileCopyInfo"
  name: "FileCopyInfo"
  nameWithType: "FileCopyInfo"
  fullName: "com.azure.storage.file.models.FileCopyInfo"
- uid: "com.azure.storage.file.FileClient.startCopy*"
  name: "startCopy"
  nameWithType: "FileClient.startCopy"
  fullName: "com.azure.storage.file.FileClient.startCopy"
  package: "com.azure.storage.file"
- uid: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileCopyInfo>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.models.FileCopyInfo"
    name: "FileCopyInfo"
    fullName: "com.azure.storage.file.models.FileCopyInfo"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.FileClient.startCopyWithResponse*"
  name: "startCopyWithResponse"
  nameWithType: "FileClient.startCopyWithResponse"
  fullName: "com.azure.storage.file.FileClient.startCopyWithResponse"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClient.abortCopy*"
  name: "abortCopy"
  nameWithType: "FileClient.abortCopy"
  fullName: "com.azure.storage.file.FileClient.abortCopy"
  package: "com.azure.storage.file"
- uid: "com.azure.core.http.rest.Response<java.lang.Void>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Void"
    name: "Void"
    fullName: "java.lang.Void"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.FileClient.abortCopyWithResponse*"
  name: "abortCopyWithResponse"
  nameWithType: "FileClient.abortCopyWithResponse"
  fullName: "com.azure.storage.file.FileClient.abortCopyWithResponse"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.models.FileProperties"
  name: "FileProperties"
  nameWithType: "FileProperties"
  fullName: "com.azure.storage.file.models.FileProperties"
- uid: "com.azure.storage.file.FileClient.downloadToFile*"
  name: "downloadToFile"
  nameWithType: "FileClient.downloadToFile"
  fullName: "com.azure.storage.file.FileClient.downloadToFile"
  package: "com.azure.storage.file"
- uid: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileProperties>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.models.FileProperties"
    name: "FileProperties"
    fullName: "com.azure.storage.file.models.FileProperties"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.FileClient.downloadToFileWithResponse*"
  name: "downloadToFileWithResponse"
  nameWithType: "FileClient.downloadToFileWithResponse"
  fullName: "com.azure.storage.file.FileClient.downloadToFileWithResponse"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.models.FileDownloadInfo"
  name: "FileDownloadInfo"
  nameWithType: "FileDownloadInfo"
  fullName: "com.azure.storage.file.models.FileDownloadInfo"
- uid: "com.azure.storage.file.FileClient.downloadWithProperties*"
  name: "downloadWithProperties"
  nameWithType: "FileClient.downloadWithProperties"
  fullName: "com.azure.storage.file.FileClient.downloadWithProperties"
  package: "com.azure.storage.file"
- uid: "java.lang.Boolean"
  spec.java:
  - uid: "java.lang.Boolean"
    name: "Boolean"
    fullName: "java.lang.Boolean"
- uid: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileDownloadInfo>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.models.FileDownloadInfo"
    name: "FileDownloadInfo"
    fullName: "com.azure.storage.file.models.FileDownloadInfo"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.FileClient.downloadWithPropertiesWithResponse*"
  name: "downloadWithPropertiesWithResponse"
  nameWithType: "FileClient.downloadWithPropertiesWithResponse"
  fullName: "com.azure.storage.file.FileClient.downloadWithPropertiesWithResponse"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClient.delete*"
  name: "delete"
  nameWithType: "FileClient.delete"
  fullName: "com.azure.storage.file.FileClient.delete"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClient.deleteWithResponse*"
  name: "deleteWithResponse"
  nameWithType: "FileClient.deleteWithResponse"
  fullName: "com.azure.storage.file.FileClient.deleteWithResponse"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClient.getProperties*"
  name: "getProperties"
  nameWithType: "FileClient.getProperties"
  fullName: "com.azure.storage.file.FileClient.getProperties"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClient.getPropertiesWithResponse*"
  name: "getPropertiesWithResponse"
  nameWithType: "FileClient.getPropertiesWithResponse"
  fullName: "com.azure.storage.file.FileClient.getPropertiesWithResponse"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClient.setProperties*"
  name: "setProperties"
  nameWithType: "FileClient.setProperties"
  fullName: "com.azure.storage.file.FileClient.setProperties"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClient.setPropertiesWithResponse*"
  name: "setPropertiesWithResponse"
  nameWithType: "FileClient.setPropertiesWithResponse"
  fullName: "com.azure.storage.file.FileClient.setPropertiesWithResponse"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.models.FileMetadataInfo"
  name: "FileMetadataInfo"
  nameWithType: "FileMetadataInfo"
  fullName: "com.azure.storage.file.models.FileMetadataInfo"
- uid: "com.azure.storage.file.FileClient.setMetadata*"
  name: "setMetadata"
  nameWithType: "FileClient.setMetadata"
  fullName: "com.azure.storage.file.FileClient.setMetadata"
  package: "com.azure.storage.file"
- uid: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileMetadataInfo>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.models.FileMetadataInfo"
    name: "FileMetadataInfo"
    fullName: "com.azure.storage.file.models.FileMetadataInfo"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.FileClient.setMetadataWithResponse*"
  name: "setMetadataWithResponse"
  nameWithType: "FileClient.setMetadataWithResponse"
  fullName: "com.azure.storage.file.FileClient.setMetadataWithResponse"
  package: "com.azure.storage.file"
- uid: "java.nio.ByteBuffer"
  spec.java:
  - uid: "java.nio.ByteBuffer"
    name: "ByteBuffer"
    fullName: "java.nio.ByteBuffer"
- uid: "com.azure.storage.file.models.FileUploadInfo"
  name: "FileUploadInfo"
  nameWithType: "FileUploadInfo"
  fullName: "com.azure.storage.file.models.FileUploadInfo"
- uid: "com.azure.storage.file.FileClient.upload*"
  name: "upload"
  nameWithType: "FileClient.upload"
  fullName: "com.azure.storage.file.FileClient.upload"
  package: "com.azure.storage.file"
- uid: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileUploadInfo>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.models.FileUploadInfo"
    name: "FileUploadInfo"
    fullName: "com.azure.storage.file.models.FileUploadInfo"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.FileClient.uploadWithResponse*"
  name: "uploadWithResponse"
  nameWithType: "FileClient.uploadWithResponse"
  fullName: "com.azure.storage.file.FileClient.uploadWithResponse"
  package: "com.azure.storage.file"
- uid: "java.net.URI"
  spec.java:
  - uid: "java.net.URI"
    name: "URI"
    fullName: "java.net.URI"
- uid: "com.azure.storage.file.models.FileUploadRangeFromUrlInfo"
  name: "FileUploadRangeFromUrlInfo"
  nameWithType: "FileUploadRangeFromUrlInfo"
  fullName: "com.azure.storage.file.models.FileUploadRangeFromUrlInfo"
- uid: "com.azure.storage.file.FileClient.uploadRangeFromUrl*"
  name: "uploadRangeFromUrl"
  nameWithType: "FileClient.uploadRangeFromUrl"
  fullName: "com.azure.storage.file.FileClient.uploadRangeFromUrl"
  package: "com.azure.storage.file"
- uid: "com.azure.core.http.rest.Response<com.azure.storage.file.models.FileUploadRangeFromUrlInfo>"
  spec.java:
  - uid: "com.azure.core.http.rest.Response"
    name: "Response"
    fullName: "com.azure.core.http.rest.Response"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.models.FileUploadRangeFromUrlInfo"
    name: "FileUploadRangeFromUrlInfo"
    fullName: "com.azure.storage.file.models.FileUploadRangeFromUrlInfo"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.FileClient.uploadRangeFromUrlWithResponse*"
  name: "uploadRangeFromUrlWithResponse"
  nameWithType: "FileClient.uploadRangeFromUrlWithResponse"
  fullName: "com.azure.storage.file.FileClient.uploadRangeFromUrlWithResponse"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClient.clearRange*"
  name: "clearRange"
  nameWithType: "FileClient.clearRange"
  fullName: "com.azure.storage.file.FileClient.clearRange"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClient.clearRangeWithResponse*"
  name: "clearRangeWithResponse"
  nameWithType: "FileClient.clearRangeWithResponse"
  fullName: "com.azure.storage.file.FileClient.clearRangeWithResponse"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClient.uploadFromFile*"
  name: "uploadFromFile"
  nameWithType: "FileClient.uploadFromFile"
  fullName: "com.azure.storage.file.FileClient.uploadFromFile"
  package: "com.azure.storage.file"
- uid: "com.azure.core.http.rest.PagedIterable<com.azure.storage.file.models.FileRange>"
  spec.java:
  - uid: "com.azure.core.http.rest.PagedIterable"
    name: "PagedIterable"
    fullName: "com.azure.core.http.rest.PagedIterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.models.FileRange"
    name: "FileRange"
    fullName: "com.azure.storage.file.models.FileRange"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.FileClient.listRanges*"
  name: "listRanges"
  nameWithType: "FileClient.listRanges"
  fullName: "com.azure.storage.file.FileClient.listRanges"
  package: "com.azure.storage.file"
- uid: "com.azure.core.http.rest.PagedIterable<com.azure.storage.file.models.HandleItem>"
  spec.java:
  - uid: "com.azure.core.http.rest.PagedIterable"
    name: "PagedIterable"
    fullName: "com.azure.core.http.rest.PagedIterable"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.models.HandleItem"
    name: "HandleItem"
    fullName: "com.azure.storage.file.models.HandleItem"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.FileClient.listHandles*"
  name: "listHandles"
  nameWithType: "FileClient.listHandles"
  fullName: "com.azure.storage.file.FileClient.listHandles"
  package: "com.azure.storage.file"
- uid: "java.lang.Integer"
  spec.java:
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
- uid: "com.azure.core.http.rest.PagedIterable<java.lang.Integer>"
  spec.java:
  - uid: "com.azure.core.http.rest.PagedIterable"
    name: "PagedIterable"
    fullName: "com.azure.core.http.rest.PagedIterable"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.Integer"
    name: "Integer"
    fullName: "java.lang.Integer"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.FileClient.forceCloseHandles*"
  name: "forceCloseHandles"
  nameWithType: "FileClient.forceCloseHandles"
  fullName: "com.azure.storage.file.FileClient.forceCloseHandles"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClient.getShareSnapshotId*"
  name: "getShareSnapshotId"
  nameWithType: "FileClient.getShareSnapshotId"
  fullName: "com.azure.storage.file.FileClient.getShareSnapshotId"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClient.getShareName*"
  name: "getShareName"
  nameWithType: "FileClient.getShareName"
  fullName: "com.azure.storage.file.FileClient.getShareName"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClient.getFilePath*"
  name: "getFilePath"
  nameWithType: "FileClient.getFilePath"
  fullName: "com.azure.storage.file.FileClient.getFilePath"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClient.getAccountName*"
  name: "getAccountName"
  nameWithType: "FileClient.getAccountName"
  fullName: "com.azure.storage.file.FileClient.getAccountName"
  package: "com.azure.storage.file"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.Map"
  name: "Map"
  nameWithType: "Map"
  fullName: "java.util.Map"
- uid: "java.lang.String,java.lang.String"
  name: "String,String"
  nameWithType: "String,String"
  fullName: "java.lang.String,java.lang.String"
- uid: "com.azure.core.http.rest.Response"
  name: "Response"
  nameWithType: "Response"
  fullName: "com.azure.core.http.rest.Response"
- uid: "java.lang.Void"
  name: "Void"
  nameWithType: "Void"
  fullName: "java.lang.Void"
- uid: "com.azure.core.http.rest.PagedIterable"
  name: "PagedIterable"
  nameWithType: "PagedIterable"
  fullName: "com.azure.core.http.rest.PagedIterable"
- uid: "com.azure.storage.file.models.HandleItem"
  name: "HandleItem"
  nameWithType: "HandleItem"
  fullName: "com.azure.storage.file.models.HandleItem"
