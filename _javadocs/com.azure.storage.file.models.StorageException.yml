### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.models.StorageException"
  id: "StorageException"
  parent: "com.azure.storage.file.models"
  children:
  - "com.azure.storage.file.models.StorageException.StorageException(com.azure.storage.file.models.StorageErrorException,java.lang.String)"
  - "com.azure.storage.file.models.StorageException.getErrorCode()"
  - "com.azure.storage.file.models.StorageException.getServiceMessage()"
  - "com.azure.storage.file.models.StorageException.getStatusCode()"
  langs:
  - "java"
  name: "StorageException"
  nameWithType: "StorageException"
  fullName: "com.azure.storage.file.models.StorageException"
  type: "Class"
  package: "com.azure.storage.file.models"
  summary: "A `StorageException` is thrown whenever Azure Storage successfully returns an error code that is not 200-level. Users can inspect the status code and error code to determine the cause of the error response. The exception message may also contain more detailed information depending on the type of error. The user may also inspect the raw HTTP response or call toString to get the full payload of the error response if present. Note that even some expected \"errors\" will be thrown as a `StorageException`. For example, some users may perform a getProperties request on an entity to determine whether it exists or not. If it does not exists, an exception will be thrown even though this may be considered an expected indication of absence in this case.\n\n**Sample Code**\n\nFor more samples, please see the [sample file][]\n\n\n[sample file]: https://github.com/Azure/azure-storage-java/blob/master/src/test/java/com/microsoft/azure/storage/Samples.java"
  syntax:
    content: "public final class StorageException extends HttpResponseException"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Throwable"
  - "java.lang.Exception"
  - "java.lang.RuntimeException"
  - "com.azure.core.exception.AzureException"
  - "com.azure.core.exception.HttpResponseException"
  inheritedMembers:
  - "com.azure.core.exception.HttpResponseException.getResponse()"
  - "com.azure.core.exception.HttpResponseException.getValue()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
  - "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
  - "java.lang.Throwable.fillInStackTrace()"
  - "java.lang.Throwable.getCause()"
  - "java.lang.Throwable.getLocalizedMessage()"
  - "java.lang.Throwable.getMessage()"
  - "java.lang.Throwable.getStackTrace()"
  - "java.lang.Throwable.getSuppressed()"
  - "java.lang.Throwable.initCause(java.lang.Throwable)"
  - "java.lang.Throwable.printStackTrace()"
  - "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
  - "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
  - "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
  - "java.lang.Throwable.toString()"
- uid: "com.azure.storage.file.models.StorageException.StorageException(com.azure.storage.file.models.StorageErrorException,java.lang.String)"
  id: "StorageException(com.azure.storage.file.models.StorageErrorException,java.lang.String)"
  parent: "com.azure.storage.file.models.StorageException"
  langs:
  - "java"
  name: "StorageException(StorageErrorException e, String responseBody)"
  nameWithType: "StorageException.StorageException(StorageErrorException e, String responseBody)"
  fullName: "com.azure.storage.file.models.StorageException.StorageException(StorageErrorException e, String responseBody)"
  overload: "com.azure.storage.file.models.StorageException.StorageException*"
  type: "Constructor"
  package: "com.azure.storage.file.models"
  summary: "Constructs a `StorageException` from the given <xref uid=\"com.azure.storage.file.models.StorageErrorException\" data-throw-if-not-resolved=\"false\">StorageErrorException</xref>."
  syntax:
    content: "public StorageException(StorageErrorException e, String responseBody)"
    parameters:
    - id: "e"
      type: "com.azure.storage.file.models.StorageErrorException"
      description: "The StorageErrorException returned from the service."
    - id: "responseBody"
      type: "java.lang.String"
      description: "The exception body."
- uid: "com.azure.storage.file.models.StorageException.getErrorCode()"
  id: "getErrorCode()"
  parent: "com.azure.storage.file.models.StorageException"
  langs:
  - "java"
  name: "getErrorCode()"
  nameWithType: "StorageException.getErrorCode()"
  fullName: "com.azure.storage.file.models.StorageException.getErrorCode()"
  overload: "com.azure.storage.file.models.StorageException.getErrorCode*"
  type: "Method"
  package: "com.azure.storage.file.models"
  syntax:
    content: "public StorageErrorCode getErrorCode()"
    return:
      type: "com.azure.storage.file.models.StorageErrorCode"
      description: "The error code returned by the service."
- uid: "com.azure.storage.file.models.StorageException.getServiceMessage()"
  id: "getServiceMessage()"
  parent: "com.azure.storage.file.models.StorageException"
  langs:
  - "java"
  name: "getServiceMessage()"
  nameWithType: "StorageException.getServiceMessage()"
  fullName: "com.azure.storage.file.models.StorageException.getServiceMessage()"
  overload: "com.azure.storage.file.models.StorageException.getServiceMessage*"
  type: "Method"
  package: "com.azure.storage.file.models"
  syntax:
    content: "public String getServiceMessage()"
    return:
      type: "java.lang.String"
      description: "The message returned by the service."
- uid: "com.azure.storage.file.models.StorageException.getStatusCode()"
  id: "getStatusCode()"
  parent: "com.azure.storage.file.models.StorageException"
  langs:
  - "java"
  name: "getStatusCode()"
  nameWithType: "StorageException.getStatusCode()"
  fullName: "com.azure.storage.file.models.StorageException.getStatusCode()"
  overload: "com.azure.storage.file.models.StorageException.getStatusCode*"
  type: "Method"
  package: "com.azure.storage.file.models"
  syntax:
    content: "public int getStatusCode()"
    return:
      type: "int"
      description: "The status code on the response."
references:
- uid: "com.azure.storage.file.models.StorageErrorException"
  name: "StorageErrorException"
  nameWithType: "StorageErrorException"
  fullName: "com.azure.storage.file.models.StorageErrorException"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.file.models.StorageException.StorageException*"
  name: "StorageException"
  nameWithType: "StorageException.StorageException"
  fullName: "com.azure.storage.file.models.StorageException.StorageException"
  package: "com.azure.storage.file.models"
- uid: "com.azure.storage.file.models.StorageErrorCode"
  name: "StorageErrorCode"
  nameWithType: "StorageErrorCode"
  fullName: "com.azure.storage.file.models.StorageErrorCode"
- uid: "com.azure.storage.file.models.StorageException.getErrorCode*"
  name: "getErrorCode"
  nameWithType: "StorageException.getErrorCode"
  fullName: "com.azure.storage.file.models.StorageException.getErrorCode"
  package: "com.azure.storage.file.models"
- uid: "com.azure.storage.file.models.StorageException.getServiceMessage*"
  name: "getServiceMessage"
  nameWithType: "StorageException.getServiceMessage"
  fullName: "com.azure.storage.file.models.StorageException.getServiceMessage"
  package: "com.azure.storage.file.models"
- uid: "int"
  spec.java:
  - uid: "int"
    name: "int"
    fullName: "int"
- uid: "com.azure.storage.file.models.StorageException.getStatusCode*"
  name: "getStatusCode"
  nameWithType: "StorageException.getStatusCode"
  fullName: "com.azure.storage.file.models.StorageException.getStatusCode"
  package: "com.azure.storage.file.models"
- uid: "com.azure.core.exception.HttpResponseException"
  name: "HttpResponseException"
  nameWithType: "HttpResponseException"
  fullName: "com.azure.core.exception.HttpResponseException"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Throwable.getCause()"
  name: "Throwable.getCause()"
  nameWithType: "Throwable.getCause()"
  fullName: "java.lang.Throwable.getCause()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Throwable.fillInStackTrace()"
  name: "Throwable.fillInStackTrace()"
  nameWithType: "Throwable.fillInStackTrace()"
  fullName: "java.lang.Throwable.fillInStackTrace()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Throwable.initCause(java.lang.Throwable)"
  name: "Throwable.initCause(Throwable)"
  nameWithType: "Throwable.initCause(Throwable)"
  fullName: "java.lang.Throwable.initCause(java.lang.Throwable)"
- uid: "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
  name: "Throwable.setStackTrace(StackTraceElement[])"
  nameWithType: "Throwable.setStackTrace(StackTraceElement[])"
  fullName: "java.lang.Throwable.setStackTrace(java.lang.StackTraceElement[])"
- uid: "java.lang.Throwable.toString()"
  name: "Throwable.toString()"
  nameWithType: "Throwable.toString()"
  fullName: "java.lang.Throwable.toString()"
- uid: "java.lang.Throwable.getSuppressed()"
  name: "Throwable.getSuppressed()"
  nameWithType: "Throwable.getSuppressed()"
  fullName: "java.lang.Throwable.getSuppressed()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Throwable.getStackTrace()"
  name: "Throwable.getStackTrace()"
  nameWithType: "Throwable.getStackTrace()"
  fullName: "java.lang.Throwable.getStackTrace()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Throwable.getLocalizedMessage()"
  name: "Throwable.getLocalizedMessage()"
  nameWithType: "Throwable.getLocalizedMessage()"
  fullName: "java.lang.Throwable.getLocalizedMessage()"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
  name: "Throwable.printStackTrace(PrintWriter)"
  nameWithType: "Throwable.printStackTrace(PrintWriter)"
  fullName: "java.lang.Throwable.printStackTrace(java.io.PrintWriter)"
- uid: "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
  name: "Throwable.addSuppressed(Throwable)"
  nameWithType: "Throwable.addSuppressed(Throwable)"
  fullName: "java.lang.Throwable.addSuppressed(java.lang.Throwable)"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.core.exception.HttpResponseException.getValue()"
  name: "HttpResponseException.getValue()"
  nameWithType: "HttpResponseException.getValue()"
  fullName: "com.azure.core.exception.HttpResponseException.getValue()"
- uid: "com.azure.core.exception.HttpResponseException.getResponse()"
  name: "HttpResponseException.getResponse()"
  nameWithType: "HttpResponseException.getResponse()"
  fullName: "com.azure.core.exception.HttpResponseException.getResponse()"
- uid: "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
  name: "Throwable.printStackTrace(PrintStream)"
  nameWithType: "Throwable.printStackTrace(PrintStream)"
  fullName: "java.lang.Throwable.printStackTrace(java.io.PrintStream)"
- uid: "java.lang.Throwable.getMessage()"
  name: "Throwable.getMessage()"
  nameWithType: "Throwable.getMessage()"
  fullName: "java.lang.Throwable.getMessage()"
- uid: "java.lang.Throwable.printStackTrace()"
  name: "Throwable.printStackTrace()"
  nameWithType: "Throwable.printStackTrace()"
  fullName: "java.lang.Throwable.printStackTrace()"
