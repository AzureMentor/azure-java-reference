### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.eventhubs.InMemoryPartitionManager"
  id: "InMemoryPartitionManager"
  parent: "com.azure.messaging.eventhubs"
  children:
  - "com.azure.messaging.eventhubs.InMemoryPartitionManager.InMemoryPartitionManager()"
  - "com.azure.messaging.eventhubs.InMemoryPartitionManager.claimOwnership(com.azure.messaging.eventhubs.models.PartitionOwnership...)"
  - "com.azure.messaging.eventhubs.InMemoryPartitionManager.listOwnership(java.lang.String,java.lang.String)"
  - "com.azure.messaging.eventhubs.InMemoryPartitionManager.updateCheckpoint(com.azure.messaging.eventhubs.models.Checkpoint)"
  langs:
  - "java"
  name: "InMemoryPartitionManager"
  nameWithType: "InMemoryPartitionManager"
  fullName: "com.azure.messaging.eventhubs.InMemoryPartitionManager"
  type: "Class"
  package: "com.azure.messaging.eventhubs"
  summary: "A simple in-memory implementation of a <xref uid=\"com.azure.messaging.eventhubs.PartitionManager\" data-throw-if-not-resolved=\"false\">PartitionManager</xref>. This implementation keeps track of partition ownership details including checkpointing information in-memory. Using this implementation will only facilitate checkpointing and load balancing of Event Processors running within this process."
  syntax:
    content: "public class InMemoryPartitionManager implements PartitionManager"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.messaging.eventhubs.PartitionManager"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.messaging.eventhubs.InMemoryPartitionManager.InMemoryPartitionManager()"
  id: "InMemoryPartitionManager()"
  parent: "com.azure.messaging.eventhubs.InMemoryPartitionManager"
  langs:
  - "java"
  name: "InMemoryPartitionManager()"
  nameWithType: "InMemoryPartitionManager.InMemoryPartitionManager()"
  fullName: "com.azure.messaging.eventhubs.InMemoryPartitionManager.InMemoryPartitionManager()"
  overload: "com.azure.messaging.eventhubs.InMemoryPartitionManager.InMemoryPartitionManager*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs"
  syntax:
    content: "public InMemoryPartitionManager()"
- uid: "com.azure.messaging.eventhubs.InMemoryPartitionManager.claimOwnership(com.azure.messaging.eventhubs.models.PartitionOwnership...)"
  id: "claimOwnership(com.azure.messaging.eventhubs.models.PartitionOwnership...)"
  parent: "com.azure.messaging.eventhubs.InMemoryPartitionManager"
  langs:
  - "java"
  name: "claimOwnership(PartitionOwnership[] requestedPartitionOwnerships)"
  nameWithType: "InMemoryPartitionManager.claimOwnership(PartitionOwnership[] requestedPartitionOwnerships)"
  fullName: "com.azure.messaging.eventhubs.InMemoryPartitionManager.claimOwnership(PartitionOwnership[] requestedPartitionOwnerships)"
  overload: "com.azure.messaging.eventhubs.InMemoryPartitionManager.claimOwnership*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Returns a <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\">Flux</xref> of partition ownership details for successfully claimed partitions. If a partition is already claimed by an instance or if the ETag in the request doesn't match the previously stored ETag, then ownership claim is denied."
  syntax:
    content: "public Flux<PartitionOwnership> claimOwnership(PartitionOwnership[] requestedPartitionOwnerships)"
    parameters:
    - id: "requestedPartitionOwnerships"
      type: "com.azure.messaging.eventhubs.models.PartitionOwnership[]"
      description: "Array of partition ownerships this instance is requesting to own."
    return:
      type: "reactor.core.publisher.Flux<com.azure.messaging.eventhubs.models.PartitionOwnership>"
      description: "Successfully claimed partition ownerships."
- uid: "com.azure.messaging.eventhubs.InMemoryPartitionManager.listOwnership(java.lang.String,java.lang.String)"
  id: "listOwnership(java.lang.String,java.lang.String)"
  parent: "com.azure.messaging.eventhubs.InMemoryPartitionManager"
  langs:
  - "java"
  name: "listOwnership(String eventHubName, String consumerGroupName)"
  nameWithType: "InMemoryPartitionManager.listOwnership(String eventHubName, String consumerGroupName)"
  fullName: "com.azure.messaging.eventhubs.InMemoryPartitionManager.listOwnership(String eventHubName, String consumerGroupName)"
  overload: "com.azure.messaging.eventhubs.InMemoryPartitionManager.listOwnership*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "\\{@inheritDoc\\}"
  syntax:
    content: "public Flux<PartitionOwnership> listOwnership(String eventHubName, String consumerGroupName)"
    parameters:
    - id: "eventHubName"
      type: "java.lang.String"
      description: "The name of the Event Hub to list ownership of."
    - id: "consumerGroupName"
      type: "java.lang.String"
      description: "The name of the consumer group to list ownership of."
    return:
      type: "reactor.core.publisher.Flux<com.azure.messaging.eventhubs.models.PartitionOwnership>"
      description: "A <xref uid=\"reactor.core.publisher.Flux\" data-throw-if-not-resolved=\"false\">Flux</xref> of partition ownership information."
- uid: "com.azure.messaging.eventhubs.InMemoryPartitionManager.updateCheckpoint(com.azure.messaging.eventhubs.models.Checkpoint)"
  id: "updateCheckpoint(com.azure.messaging.eventhubs.models.Checkpoint)"
  parent: "com.azure.messaging.eventhubs.InMemoryPartitionManager"
  langs:
  - "java"
  name: "updateCheckpoint(Checkpoint checkpoint)"
  nameWithType: "InMemoryPartitionManager.updateCheckpoint(Checkpoint checkpoint)"
  fullName: "com.azure.messaging.eventhubs.InMemoryPartitionManager.updateCheckpoint(Checkpoint checkpoint)"
  overload: "com.azure.messaging.eventhubs.InMemoryPartitionManager.updateCheckpoint*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  summary: "Updates the in-memory storage with the provided checkpoint information."
  syntax:
    content: "public Mono<String> updateCheckpoint(Checkpoint checkpoint)"
    parameters:
    - id: "checkpoint"
      type: "com.azure.messaging.eventhubs.models.Checkpoint"
      description: "The checkpoint containing the information to be stored in-memory."
    return:
      type: "reactor.core.publisher.Mono<java.lang.String>"
      description: "A new ETag associated with the updated checkpoint."
references:
- uid: "com.azure.messaging.eventhubs.InMemoryPartitionManager.InMemoryPartitionManager*"
  name: "InMemoryPartitionManager"
  nameWithType: "InMemoryPartitionManager.InMemoryPartitionManager"
  fullName: "com.azure.messaging.eventhubs.InMemoryPartitionManager.InMemoryPartitionManager"
  package: "com.azure.messaging.eventhubs"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "reactor.core.publisher.Flux<com.azure.messaging.eventhubs.models.PartitionOwnership>"
  spec.java:
  - uid: "reactor.core.publisher.Flux"
    name: "Flux"
    fullName: "reactor.core.publisher.Flux"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.messaging.eventhubs.models.PartitionOwnership"
    name: "PartitionOwnership"
    fullName: "com.azure.messaging.eventhubs.models.PartitionOwnership"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.InMemoryPartitionManager.listOwnership*"
  name: "listOwnership"
  nameWithType: "InMemoryPartitionManager.listOwnership"
  fullName: "com.azure.messaging.eventhubs.InMemoryPartitionManager.listOwnership"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.models.PartitionOwnership[]"
  spec.java:
  - uid: "com.azure.messaging.eventhubs.models.PartitionOwnership"
    name: "PartitionOwnership"
    fullName: "com.azure.messaging.eventhubs.models.PartitionOwnership"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.messaging.eventhubs.InMemoryPartitionManager.claimOwnership*"
  name: "claimOwnership"
  nameWithType: "InMemoryPartitionManager.claimOwnership"
  fullName: "com.azure.messaging.eventhubs.InMemoryPartitionManager.claimOwnership"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.models.Checkpoint"
  name: "Checkpoint"
  nameWithType: "Checkpoint"
  fullName: "com.azure.messaging.eventhubs.models.Checkpoint"
- uid: "reactor.core.publisher.Mono<java.lang.String>"
  spec.java:
  - uid: "reactor.core.publisher.Mono"
    name: "Mono"
    fullName: "reactor.core.publisher.Mono"
  - name: "<"
    fullName: "<"
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
  - name: ">"
    fullName: ">"
- uid: "com.azure.messaging.eventhubs.InMemoryPartitionManager.updateCheckpoint*"
  name: "updateCheckpoint"
  nameWithType: "InMemoryPartitionManager.updateCheckpoint"
  fullName: "com.azure.messaging.eventhubs.InMemoryPartitionManager.updateCheckpoint"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.PartitionManager"
  name: "PartitionManager"
  nameWithType: "PartitionManager"
  fullName: "com.azure.messaging.eventhubs.PartitionManager"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "reactor.core.publisher.Flux"
  name: "Flux"
  nameWithType: "Flux"
  fullName: "reactor.core.publisher.Flux"
- uid: "com.azure.messaging.eventhubs.models.PartitionOwnership"
  name: "PartitionOwnership"
  nameWithType: "PartitionOwnership"
  fullName: "com.azure.messaging.eventhubs.models.PartitionOwnership"
- uid: "reactor.core.publisher.Mono"
  name: "Mono"
  nameWithType: "Mono"
  fullName: "reactor.core.publisher.Mono"
