### YamlMime:ManagedReference
items:
- uid: "com.azure.messaging.eventhubs.CloseReason"
  id: "CloseReason"
  parent: "com.azure.messaging.eventhubs"
  children:
  - "com.azure.messaging.eventhubs.CloseReason.EVENT_HUB_EXCEPTION"
  - "com.azure.messaging.eventhubs.CloseReason.EVENT_PROCESSOR_SHUTDOWN"
  - "com.azure.messaging.eventhubs.CloseReason.LOST_PARTITION_OWNERSHIP"
  - "com.azure.messaging.eventhubs.CloseReason.valueOf(java.lang.String)"
  - "com.azure.messaging.eventhubs.CloseReason.values()"
  langs:
  - "java"
  name: "CloseReason"
  nameWithType: "CloseReason"
  fullName: "com.azure.messaging.eventhubs.CloseReason"
  type: "Enum"
  package: "com.azure.messaging.eventhubs"
  summary: "Enumeration of all possible reasons a <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor\" data-throw-if-not-resolved=\"false\">PartitionProcessor</xref> may be closed."
  syntax:
    content: "public enum CloseReason extends Enum<CloseReason>"
  inheritance:
  - "java.lang.Object"
  - "java.lang.Enum"
  inheritedMembers:
  - "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  - "java.lang.Enum.clone()"
  - "java.lang.Enum.compareTo(E)"
  - "java.lang.Enum.equals(java.lang.Object)"
  - "java.lang.Enum.finalize()"
  - "java.lang.Enum.getDeclaringClass()"
  - "java.lang.Enum.hashCode()"
  - "java.lang.Enum.name()"
  - "java.lang.Enum.ordinal()"
  - "java.lang.Enum.toString()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.messaging.eventhubs.CloseReason.CloseReason()"
  id: "CloseReason()"
  parent: "com.azure.messaging.eventhubs.CloseReason"
  langs:
  - "java"
  name: "CloseReason()"
  nameWithType: "CloseReason.CloseReason()"
  fullName: "com.azure.messaging.eventhubs.CloseReason.CloseReason()"
  overload: "com.azure.messaging.eventhubs.CloseReason.CloseReason*"
  type: "Constructor"
  package: "com.azure.messaging.eventhubs"
  syntax:
    content: "private CloseReason()"
- uid: "com.azure.messaging.eventhubs.CloseReason.EVENT_HUB_EXCEPTION"
  id: "EVENT_HUB_EXCEPTION"
  parent: "com.azure.messaging.eventhubs.CloseReason"
  langs:
  - "java"
  name: "EVENT_HUB_EXCEPTION"
  nameWithType: "CloseReason.EVENT_HUB_EXCEPTION"
  fullName: "com.azure.messaging.eventhubs.CloseReason.EVENT_HUB_EXCEPTION"
  type: "Field"
  package: "com.azure.messaging.eventhubs"
  summary: "If a non-retryable exception occured when receiving events from Event Hub, this reason will be provided when <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor.close(com.azure.messaging.eventhubs.models.PartitionContext,com.azure.messaging.eventhubs.CloseReason)\" data-throw-if-not-resolved=\"false\">PartitionProcessor#close(PartitionContext, CloseReason)</xref> is called."
  syntax:
    content: "public static final CloseReason EVENT_HUB_EXCEPTION"
    return:
      type: "com.azure.messaging.eventhubs.CloseReason"
- uid: "com.azure.messaging.eventhubs.CloseReason.EVENT_PROCESSOR_SHUTDOWN"
  id: "EVENT_PROCESSOR_SHUTDOWN"
  parent: "com.azure.messaging.eventhubs.CloseReason"
  langs:
  - "java"
  name: "EVENT_PROCESSOR_SHUTDOWN"
  nameWithType: "CloseReason.EVENT_PROCESSOR_SHUTDOWN"
  fullName: "com.azure.messaging.eventhubs.CloseReason.EVENT_PROCESSOR_SHUTDOWN"
  type: "Field"
  package: "com.azure.messaging.eventhubs"
  summary: "If the event processor is shutting down by calling <xref uid=\"com.azure.messaging.eventhubs.EventProcessor.stop()\" data-throw-if-not-resolved=\"false\">EventProcessor#stop()</xref>, the <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor.close(com.azure.messaging.eventhubs.models.PartitionContext,com.azure.messaging.eventhubs.CloseReason)\" data-throw-if-not-resolved=\"false\">PartitionProcessor#close(PartitionContext, CloseReason)</xref> will be called with this reason."
  syntax:
    content: "public static final CloseReason EVENT_PROCESSOR_SHUTDOWN"
    return:
      type: "com.azure.messaging.eventhubs.CloseReason"
- uid: "com.azure.messaging.eventhubs.CloseReason.LOST_PARTITION_OWNERSHIP"
  id: "LOST_PARTITION_OWNERSHIP"
  parent: "com.azure.messaging.eventhubs.CloseReason"
  langs:
  - "java"
  name: "LOST_PARTITION_OWNERSHIP"
  nameWithType: "CloseReason.LOST_PARTITION_OWNERSHIP"
  fullName: "com.azure.messaging.eventhubs.CloseReason.LOST_PARTITION_OWNERSHIP"
  type: "Field"
  package: "com.azure.messaging.eventhubs"
  summary: "If another event processor instance stole the ownership of a partition, this reason will be provided to <xref uid=\"com.azure.messaging.eventhubs.PartitionProcessor.close(com.azure.messaging.eventhubs.models.PartitionContext,com.azure.messaging.eventhubs.CloseReason)\" data-throw-if-not-resolved=\"false\">PartitionProcessor#close(PartitionContext, CloseReason)</xref>."
  syntax:
    content: "public static final CloseReason LOST_PARTITION_OWNERSHIP"
    return:
      type: "com.azure.messaging.eventhubs.CloseReason"
- uid: "com.azure.messaging.eventhubs.CloseReason.valueOf(java.lang.String)"
  id: "valueOf(java.lang.String)"
  parent: "com.azure.messaging.eventhubs.CloseReason"
  langs:
  - "java"
  name: "valueOf(String name)"
  nameWithType: "CloseReason.valueOf(String name)"
  fullName: "com.azure.messaging.eventhubs.CloseReason.valueOf(String name)"
  overload: "com.azure.messaging.eventhubs.CloseReason.valueOf*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  syntax:
    content: "public static CloseReason valueOf(String name)"
    parameters:
    - id: "name"
      type: "java.lang.String"
    return:
      type: "com.azure.messaging.eventhubs.CloseReason"
- uid: "com.azure.messaging.eventhubs.CloseReason.values()"
  id: "values()"
  parent: "com.azure.messaging.eventhubs.CloseReason"
  langs:
  - "java"
  name: "values()"
  nameWithType: "CloseReason.values()"
  fullName: "com.azure.messaging.eventhubs.CloseReason.values()"
  overload: "com.azure.messaging.eventhubs.CloseReason.values*"
  type: "Method"
  package: "com.azure.messaging.eventhubs"
  syntax:
    content: "public static CloseReason[] values()"
    return:
      type: "com.azure.messaging.eventhubs.CloseReason[]"
references:
- uid: "com.azure.messaging.eventhubs.CloseReason.CloseReason*"
  name: "CloseReason"
  nameWithType: "CloseReason.CloseReason"
  fullName: "com.azure.messaging.eventhubs.CloseReason.CloseReason"
  package: "com.azure.messaging.eventhubs"
- uid: "com.azure.messaging.eventhubs.CloseReason[]"
  spec.java:
  - uid: "com.azure.messaging.eventhubs.CloseReason"
    name: "CloseReason"
    fullName: "com.azure.messaging.eventhubs.CloseReason"
  - name: "[]"
    fullName: "[]"
- uid: "com.azure.messaging.eventhubs.CloseReason.values*"
  name: "values"
  nameWithType: "CloseReason.values"
  fullName: "com.azure.messaging.eventhubs.CloseReason.values"
  package: "com.azure.messaging.eventhubs"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.messaging.eventhubs.CloseReason.valueOf*"
  name: "valueOf"
  nameWithType: "CloseReason.valueOf"
  fullName: "com.azure.messaging.eventhubs.CloseReason.valueOf"
  package: "com.azure.messaging.eventhubs"
- uid: "java.lang.Enum<com.azure.messaging.eventhubs.CloseReason>"
  name: "Enum<CloseReason>"
  nameWithType: "Enum<CloseReason>"
  fullName: "java.lang.Enum<com.azure.messaging.eventhubs.CloseReason>"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Enum.toString()"
  name: "Enum.toString()"
  nameWithType: "Enum.toString()"
  fullName: "java.lang.Enum.toString()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Enum.clone()"
  name: "Enum.clone()"
  nameWithType: "Enum.clone()"
  fullName: "java.lang.Enum.clone()"
- uid: "java.lang.Enum.finalize()"
  name: "Enum.finalize()"
  nameWithType: "Enum.finalize()"
  fullName: "java.lang.Enum.finalize()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Enum.compareTo(E)"
  name: "Enum.compareTo(E)"
  nameWithType: "Enum.compareTo(E)"
  fullName: "java.lang.Enum.compareTo(E)"
- uid: "java.lang.Enum.name()"
  name: "Enum.name()"
  nameWithType: "Enum.name()"
  fullName: "java.lang.Enum.name()"
- uid: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
  name: "Enum.<T>valueOf(Class<T>,String)"
  nameWithType: "Enum.<T>valueOf(Class<T>,String)"
  fullName: "java.lang.Enum.<T>valueOf(java.lang.Class<T>,java.lang.String)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Enum.getDeclaringClass()"
  name: "Enum.getDeclaringClass()"
  nameWithType: "Enum.getDeclaringClass()"
  fullName: "java.lang.Enum.getDeclaringClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Enum.ordinal()"
  name: "Enum.ordinal()"
  nameWithType: "Enum.ordinal()"
  fullName: "java.lang.Enum.ordinal()"
- uid: "java.lang.Enum.hashCode()"
  name: "Enum.hashCode()"
  nameWithType: "Enum.hashCode()"
  fullName: "java.lang.Enum.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Enum.equals(java.lang.Object)"
  name: "Enum.equals(Object)"
  nameWithType: "Enum.equals(Object)"
  fullName: "java.lang.Enum.equals(java.lang.Object)"
- uid: "java.lang.Enum"
  name: "Enum"
  nameWithType: "Enum"
  fullName: "java.lang.Enum"
- uid: "java.lang.Enum."
  name: "Enum."
  nameWithType: "Enum."
  fullName: "java.lang.Enum."
- uid: "T>,java.lang.String)"
  name: "T>,String)"
  nameWithType: "T>,String)"
  fullName: "T>,java.lang.String)"
- uid: "T>valueOf(java.lang.Class"
  name: "T>valueOf(Class"
  nameWithType: "T>valueOf(Class"
  fullName: "T>valueOf(java.lang.Class"
