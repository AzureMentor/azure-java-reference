### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.common.AccountSasSignatureValues"
  id: "AccountSasSignatureValues"
  parent: "com.azure.storage.common"
  children:
  - "com.azure.storage.common.AccountSasSignatureValues.AccountSasSignatureValues()"
  - "com.azure.storage.common.AccountSasSignatureValues.generateAccountSas(com.azure.storage.common.credentials.SharedKeyCredential,com.azure.storage.common.AccountSasService,com.azure.storage.common.AccountSasResourceType,com.azure.storage.common.AccountSasPermission,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.storage.common.IpRange,com.azure.storage.common.SasProtocol)"
  - "com.azure.storage.common.AccountSasSignatureValues.generateSasQueryParameters(com.azure.storage.common.credentials.SharedKeyCredential)"
  - "com.azure.storage.common.AccountSasSignatureValues.getExpiryTime()"
  - "com.azure.storage.common.AccountSasSignatureValues.getIpRange()"
  - "com.azure.storage.common.AccountSasSignatureValues.getPermissions()"
  - "com.azure.storage.common.AccountSasSignatureValues.getProtocol()"
  - "com.azure.storage.common.AccountSasSignatureValues.getResourceTypes()"
  - "com.azure.storage.common.AccountSasSignatureValues.getServices()"
  - "com.azure.storage.common.AccountSasSignatureValues.getStartTime()"
  - "com.azure.storage.common.AccountSasSignatureValues.getVersion()"
  - "com.azure.storage.common.AccountSasSignatureValues.setExpiryTime(java.time.OffsetDateTime)"
  - "com.azure.storage.common.AccountSasSignatureValues.setIpRange(com.azure.storage.common.IpRange)"
  - "com.azure.storage.common.AccountSasSignatureValues.setPermissions(java.lang.String)"
  - "com.azure.storage.common.AccountSasSignatureValues.setProtocol(com.azure.storage.common.SasProtocol)"
  - "com.azure.storage.common.AccountSasSignatureValues.setResourceTypes(java.lang.String)"
  - "com.azure.storage.common.AccountSasSignatureValues.setServices(java.lang.String)"
  - "com.azure.storage.common.AccountSasSignatureValues.setStartTime(java.time.OffsetDateTime)"
  - "com.azure.storage.common.AccountSasSignatureValues.setVersion(java.lang.String)"
  langs:
  - "java"
  name: "AccountSasSignatureValues"
  nameWithType: "AccountSasSignatureValues"
  fullName: "com.azure.storage.common.AccountSasSignatureValues"
  type: "Class"
  package: "com.azure.storage.common"
  summary: "AccountSasSignatureValues is used to generate a Shared Access Signature (SAS) for an Azure Storage account. Once all the values here are set appropriately, call generateSASQueryParameters to obtain a representation of the SAS which can actually be applied to blob urls. Note: that both this class and <xref uid=\"com.azure.storage.common.AccountSasQueryParameters\" data-throw-if-not-resolved=\"false\">AccountSasQueryParameters</xref> exist because the former is mutable and a logical representation while the latter is immutable and used to generate actual REST requests.\n\nPlease see [here][] for more conceptual information on SAS:\n\nPlease see [here][here 1] for further descriptions of the parameters, including which are required:\n\nPlease see [here][here 2] for additional samples.\n\n\n[here]: https://docs.microsoft.com/en-us/azure/storage/common/storage-dotnet-shared-access-signature-part-1\n[here 1]: https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n[here 2]: https://github.com/Azure/azure-storage-java/blob/master/src/test/java/com/microsoft/azure/storage/Samples.java"
  syntax:
    content: "public final class AccountSasSignatureValues"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.common.AccountSasSignatureValues.AccountSasSignatureValues()"
  id: "AccountSasSignatureValues()"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "AccountSasSignatureValues()"
  nameWithType: "AccountSasSignatureValues.AccountSasSignatureValues()"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.AccountSasSignatureValues()"
  overload: "com.azure.storage.common.AccountSasSignatureValues.AccountSasSignatureValues*"
  type: "Constructor"
  package: "com.azure.storage.common"
  summary: "Initializes an `AccountSasSignatureValues` object with the version number set to the default and all other values empty."
  syntax:
    content: "public AccountSasSignatureValues()"
- uid: "com.azure.storage.common.AccountSasSignatureValues.generateAccountSas(com.azure.storage.common.credentials.SharedKeyCredential,com.azure.storage.common.AccountSasService,com.azure.storage.common.AccountSasResourceType,com.azure.storage.common.AccountSasPermission,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.storage.common.IpRange,com.azure.storage.common.SasProtocol)"
  id: "generateAccountSas(com.azure.storage.common.credentials.SharedKeyCredential,com.azure.storage.common.AccountSasService,com.azure.storage.common.AccountSasResourceType,com.azure.storage.common.AccountSasPermission,java.time.OffsetDateTime,java.time.OffsetDateTime,java.lang.String,com.azure.storage.common.IpRange,com.azure.storage.common.SasProtocol)"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "generateAccountSas(SharedKeyCredential sharedKeyCredential, AccountSasService accountSASService, AccountSasResourceType accountSASResourceType, AccountSasPermission accountSASPermission, OffsetDateTime expiryTime, OffsetDateTime startTime, String version, IpRange ipRange, SasProtocol sasProtocol)"
  nameWithType: "AccountSasSignatureValues.generateAccountSas(SharedKeyCredential sharedKeyCredential, AccountSasService accountSASService, AccountSasResourceType accountSASResourceType, AccountSasPermission accountSASPermission, OffsetDateTime expiryTime, OffsetDateTime startTime, String version, IpRange ipRange, SasProtocol sasProtocol)"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.generateAccountSas(SharedKeyCredential sharedKeyCredential, AccountSasService accountSASService, AccountSasResourceType accountSASResourceType, AccountSasPermission accountSASPermission, OffsetDateTime expiryTime, OffsetDateTime startTime, String version, IpRange ipRange, SasProtocol sasProtocol)"
  overload: "com.azure.storage.common.AccountSasSignatureValues.generateAccountSas*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Shared method between service clients to generate an account SAS."
  syntax:
    content: "public static String generateAccountSas(SharedKeyCredential sharedKeyCredential, AccountSasService accountSASService, AccountSasResourceType accountSASResourceType, AccountSasPermission accountSASPermission, OffsetDateTime expiryTime, OffsetDateTime startTime, String version, IpRange ipRange, SasProtocol sasProtocol)"
    parameters:
    - id: "sharedKeyCredential"
      type: "com.azure.storage.common.credentials.SharedKeyCredential"
      description: "The <code>SharedKeyCredential</code> shared key credential for the account SAS"
    - id: "accountSASService"
      type: "com.azure.storage.common.AccountSasService"
      description: "The <code>AccountSasService</code> services for the account SAS"
    - id: "accountSASResourceType"
      type: "com.azure.storage.common.AccountSasResourceType"
      description: "An optional <code>AccountSasResourceType</code> resources for the account SAS"
    - id: "accountSASPermission"
      type: "com.azure.storage.common.AccountSasPermission"
      description: "The <code>AccountSasPermission</code> permission for the account SAS"
    - id: "expiryTime"
      type: "java.time.OffsetDateTime"
      description: "The <code>OffsetDateTime</code> expiry time for the account SAS"
    - id: "startTime"
      type: "java.time.OffsetDateTime"
      description: "The <code>OffsetDateTime</code> start time for the account SAS"
    - id: "version"
      type: "java.lang.String"
      description: "The <code>String</code> version for the account SAS"
    - id: "ipRange"
      type: "com.azure.storage.common.IpRange"
      description: "An optional <code>IpRange</code> ip address range for the SAS"
    - id: "sasProtocol"
      type: "com.azure.storage.common.SasProtocol"
      description: "An optional <code>SasProtocol</code> protocol for the SAS"
    return:
      type: "java.lang.String"
      description: "A string that represents the SAS token"
- uid: "com.azure.storage.common.AccountSasSignatureValues.generateSasQueryParameters(com.azure.storage.common.credentials.SharedKeyCredential)"
  id: "generateSasQueryParameters(com.azure.storage.common.credentials.SharedKeyCredential)"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "generateSasQueryParameters(SharedKeyCredential sharedKeyCredentials)"
  nameWithType: "AccountSasSignatureValues.generateSasQueryParameters(SharedKeyCredential sharedKeyCredentials)"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.generateSasQueryParameters(SharedKeyCredential sharedKeyCredentials)"
  overload: "com.azure.storage.common.AccountSasSignatureValues.generateSasQueryParameters*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Generates a <xref uid=\"com.azure.storage.common.AccountSasQueryParameters\" data-throw-if-not-resolved=\"false\">AccountSasQueryParameters</xref> object which contains all SAS query parameters needed to make an actual REST request."
  syntax:
    content: "public AccountSasQueryParameters generateSasQueryParameters(SharedKeyCredential sharedKeyCredentials)"
    parameters:
    - id: "sharedKeyCredentials"
      type: "com.azure.storage.common.credentials.SharedKeyCredential"
      description: "Credentials for the storage account and corresponding primary or secondary key."
    return:
      type: "com.azure.storage.common.AccountSasQueryParameters"
      description: "<xref uid=\"com.azure.storage.common.AccountSasQueryParameters\" data-throw-if-not-resolved=\"false\">AccountSasQueryParameters</xref>"
- uid: "com.azure.storage.common.AccountSasSignatureValues.getExpiryTime()"
  id: "getExpiryTime()"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "getExpiryTime()"
  nameWithType: "AccountSasSignatureValues.getExpiryTime()"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.getExpiryTime()"
  overload: "com.azure.storage.common.AccountSasSignatureValues.getExpiryTime*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public OffsetDateTime getExpiryTime()"
    return:
      type: "java.time.OffsetDateTime"
      description: "the time after which the SAS will no longer work."
- uid: "com.azure.storage.common.AccountSasSignatureValues.getIpRange()"
  id: "getIpRange()"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "getIpRange()"
  nameWithType: "AccountSasSignatureValues.getIpRange()"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.getIpRange()"
  overload: "com.azure.storage.common.AccountSasSignatureValues.getIpRange*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public IpRange getIpRange()"
    return:
      type: "com.azure.storage.common.IpRange"
      description: "the <xref uid=\"com.azure.storage.common.IpRange\" data-throw-if-not-resolved=\"false\">IpRange</xref> which determines the IP ranges that are allowed to use the SAS."
- uid: "com.azure.storage.common.AccountSasSignatureValues.getPermissions()"
  id: "getPermissions()"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "getPermissions()"
  nameWithType: "AccountSasSignatureValues.getPermissions()"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.getPermissions()"
  overload: "com.azure.storage.common.AccountSasSignatureValues.getPermissions*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public String getPermissions()"
    return:
      type: "java.lang.String"
      description: "the operations the SAS user may perform. Please refer to <xref uid=\"com.azure.storage.common.AccountSasPermission\" data-throw-if-not-resolved=\"false\">AccountSasPermission</xref> to help determine\n which permissions are allowed."
- uid: "com.azure.storage.common.AccountSasSignatureValues.getProtocol()"
  id: "getProtocol()"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "getProtocol()"
  nameWithType: "AccountSasSignatureValues.getProtocol()"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.getProtocol()"
  overload: "com.azure.storage.common.AccountSasSignatureValues.getProtocol*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public SasProtocol getProtocol()"
    return:
      type: "com.azure.storage.common.SasProtocol"
      description: "the <xref uid=\"com.azure.storage.common.SasProtocol\" data-throw-if-not-resolved=\"false\">SasProtocol</xref> which determines the HTTP protocol that will be used."
- uid: "com.azure.storage.common.AccountSasSignatureValues.getResourceTypes()"
  id: "getResourceTypes()"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "getResourceTypes()"
  nameWithType: "AccountSasSignatureValues.getResourceTypes()"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.getResourceTypes()"
  overload: "com.azure.storage.common.AccountSasSignatureValues.getResourceTypes*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public String getResourceTypes()"
    return:
      type: "java.lang.String"
      description: "the resource types accessible with this SAS. Please refer to <xref uid=\"com.azure.storage.common.AccountSasResourceType\" data-throw-if-not-resolved=\"false\">AccountSasResourceType</xref> to help\n determine the resource types that are accessible."
- uid: "com.azure.storage.common.AccountSasSignatureValues.getServices()"
  id: "getServices()"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "getServices()"
  nameWithType: "AccountSasSignatureValues.getServices()"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.getServices()"
  overload: "com.azure.storage.common.AccountSasSignatureValues.getServices*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public String getServices()"
    return:
      type: "java.lang.String"
      description: "the services accessible with this SAS. Please refer to <xref uid=\"com.azure.storage.common.AccountSasService\" data-throw-if-not-resolved=\"false\">AccountSasService</xref> to help determine which\n services are accessible."
- uid: "com.azure.storage.common.AccountSasSignatureValues.getStartTime()"
  id: "getStartTime()"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "getStartTime()"
  nameWithType: "AccountSasSignatureValues.getStartTime()"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.getStartTime()"
  overload: "com.azure.storage.common.AccountSasSignatureValues.getStartTime*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public OffsetDateTime getStartTime()"
    return:
      type: "java.time.OffsetDateTime"
      description: "when the SAS will take effect."
- uid: "com.azure.storage.common.AccountSasSignatureValues.getVersion()"
  id: "getVersion()"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "getVersion()"
  nameWithType: "AccountSasSignatureValues.getVersion()"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.getVersion()"
  overload: "com.azure.storage.common.AccountSasSignatureValues.getVersion*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public String getVersion()"
    return:
      type: "java.lang.String"
      description: "the service version that is targeted, if <code>null</code> or empty the service version targeted by the\n library will be used."
- uid: "com.azure.storage.common.AccountSasSignatureValues.setExpiryTime(java.time.OffsetDateTime)"
  id: "setExpiryTime(java.time.OffsetDateTime)"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "setExpiryTime(OffsetDateTime expiryTime)"
  nameWithType: "AccountSasSignatureValues.setExpiryTime(OffsetDateTime expiryTime)"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.setExpiryTime(OffsetDateTime expiryTime)"
  overload: "com.azure.storage.common.AccountSasSignatureValues.setExpiryTime*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the time after which the SAS will no longer work."
  syntax:
    content: "public AccountSasSignatureValues setExpiryTime(OffsetDateTime expiryTime)"
    parameters:
    - id: "expiryTime"
      type: "java.time.OffsetDateTime"
      description: "Expiry time to set"
    return:
      type: "com.azure.storage.common.AccountSasSignatureValues"
      description: "the updated AccountSasSignatureValues object."
- uid: "com.azure.storage.common.AccountSasSignatureValues.setIpRange(com.azure.storage.common.IpRange)"
  id: "setIpRange(com.azure.storage.common.IpRange)"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "setIpRange(IpRange ipRange)"
  nameWithType: "AccountSasSignatureValues.setIpRange(IpRange ipRange)"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.setIpRange(IpRange ipRange)"
  overload: "com.azure.storage.common.AccountSasSignatureValues.setIpRange*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the <xref uid=\"com.azure.storage.common.IpRange\" data-throw-if-not-resolved=\"false\">IpRange</xref> which determines the IP ranges that are allowed to use the SAS."
  syntax:
    content: "public AccountSasSignatureValues setIpRange(IpRange ipRange)"
    parameters:
    - id: "ipRange"
      type: "com.azure.storage.common.IpRange"
      description: "Allowed IP range to set"
    return:
      type: "com.azure.storage.common.AccountSasSignatureValues"
      description: "the updated AccountSasSignatureValues object."
- uid: "com.azure.storage.common.AccountSasSignatureValues.setPermissions(java.lang.String)"
  id: "setPermissions(java.lang.String)"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "setPermissions(String permissions)"
  nameWithType: "AccountSasSignatureValues.setPermissions(String permissions)"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.setPermissions(String permissions)"
  overload: "com.azure.storage.common.AccountSasSignatureValues.setPermissions*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the operations the SAS user may perform. Please refer to <xref uid=\"com.azure.storage.common.AccountSasPermission\" data-throw-if-not-resolved=\"false\">AccountSasPermission</xref> for help constructing the permissions string."
  syntax:
    content: "public AccountSasSignatureValues setPermissions(String permissions)"
    parameters:
    - id: "permissions"
      type: "java.lang.String"
      description: "Permissions string to set"
    return:
      type: "com.azure.storage.common.AccountSasSignatureValues"
      description: "the updated AccountSasSignatureValues object."
- uid: "com.azure.storage.common.AccountSasSignatureValues.setProtocol(com.azure.storage.common.SasProtocol)"
  id: "setProtocol(com.azure.storage.common.SasProtocol)"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "setProtocol(SasProtocol protocol)"
  nameWithType: "AccountSasSignatureValues.setProtocol(SasProtocol protocol)"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.setProtocol(SasProtocol protocol)"
  overload: "com.azure.storage.common.AccountSasSignatureValues.setProtocol*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the <xref uid=\"com.azure.storage.common.SasProtocol\" data-throw-if-not-resolved=\"false\">SasProtocol</xref> which determines the HTTP protocol that will be used."
  syntax:
    content: "public AccountSasSignatureValues setProtocol(SasProtocol protocol)"
    parameters:
    - id: "protocol"
      type: "com.azure.storage.common.SasProtocol"
      description: "Protocol to set"
    return:
      type: "com.azure.storage.common.AccountSasSignatureValues"
      description: "the updated AccountSasSignatureValues object."
- uid: "com.azure.storage.common.AccountSasSignatureValues.setResourceTypes(java.lang.String)"
  id: "setResourceTypes(java.lang.String)"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "setResourceTypes(String resourceTypes)"
  nameWithType: "AccountSasSignatureValues.setResourceTypes(String resourceTypes)"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.setResourceTypes(String resourceTypes)"
  overload: "com.azure.storage.common.AccountSasSignatureValues.setResourceTypes*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the resource types accessible with this SAS. Please refer to <xref uid=\"com.azure.storage.common.AccountSasResourceType\" data-throw-if-not-resolved=\"false\">AccountSasResourceType</xref> to construct this value."
  syntax:
    content: "public AccountSasSignatureValues setResourceTypes(String resourceTypes)"
    parameters:
    - id: "resourceTypes"
      type: "java.lang.String"
      description: "Allowed resource types string to set"
    return:
      type: "com.azure.storage.common.AccountSasSignatureValues"
      description: "the updated AccountSasSignatureValues object."
- uid: "com.azure.storage.common.AccountSasSignatureValues.setServices(java.lang.String)"
  id: "setServices(java.lang.String)"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "setServices(String services)"
  nameWithType: "AccountSasSignatureValues.setServices(String services)"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.setServices(String services)"
  overload: "com.azure.storage.common.AccountSasSignatureValues.setServices*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the services accessible with this SAS. Please refer to <xref uid=\"com.azure.storage.common.AccountSasService\" data-throw-if-not-resolved=\"false\">AccountSasService</xref> to construct this value."
  syntax:
    content: "public AccountSasSignatureValues setServices(String services)"
    parameters:
    - id: "services"
      type: "java.lang.String"
      description: "Allowed services string to set"
    return:
      type: "com.azure.storage.common.AccountSasSignatureValues"
      description: "the updated AccountSasSignatureValues object."
- uid: "com.azure.storage.common.AccountSasSignatureValues.setStartTime(java.time.OffsetDateTime)"
  id: "setStartTime(java.time.OffsetDateTime)"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "setStartTime(OffsetDateTime startTime)"
  nameWithType: "AccountSasSignatureValues.setStartTime(OffsetDateTime startTime)"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.setStartTime(OffsetDateTime startTime)"
  overload: "com.azure.storage.common.AccountSasSignatureValues.setStartTime*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets when the SAS will take effect."
  syntax:
    content: "public AccountSasSignatureValues setStartTime(OffsetDateTime startTime)"
    parameters:
    - id: "startTime"
      type: "java.time.OffsetDateTime"
      description: "Start time to set"
    return:
      type: "com.azure.storage.common.AccountSasSignatureValues"
      description: "the updated AccountSasSignatureValues object."
- uid: "com.azure.storage.common.AccountSasSignatureValues.setVersion(java.lang.String)"
  id: "setVersion(java.lang.String)"
  parent: "com.azure.storage.common.AccountSasSignatureValues"
  langs:
  - "java"
  name: "setVersion(String version)"
  nameWithType: "AccountSasSignatureValues.setVersion(String version)"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.setVersion(String version)"
  overload: "com.azure.storage.common.AccountSasSignatureValues.setVersion*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the service version that is targeted. Leave this `null` or empty to target the version used by the library."
  syntax:
    content: "public AccountSasSignatureValues setVersion(String version)"
    parameters:
    - id: "version"
      type: "java.lang.String"
      description: "Target version to set"
    return:
      type: "com.azure.storage.common.AccountSasSignatureValues"
      description: "the updated AccountSasSignatureValues object."
references:
- uid: "com.azure.storage.common.AccountSasSignatureValues.AccountSasSignatureValues*"
  name: "AccountSasSignatureValues"
  nameWithType: "AccountSasSignatureValues.AccountSasSignatureValues"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.AccountSasSignatureValues"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.credentials.SharedKeyCredential"
  name: "SharedKeyCredential"
  nameWithType: "SharedKeyCredential"
  fullName: "com.azure.storage.common.credentials.SharedKeyCredential"
- uid: "com.azure.storage.common.AccountSasService"
  name: "AccountSasService"
  nameWithType: "AccountSasService"
  fullName: "com.azure.storage.common.AccountSasService"
- uid: "com.azure.storage.common.AccountSasResourceType"
  name: "AccountSasResourceType"
  nameWithType: "AccountSasResourceType"
  fullName: "com.azure.storage.common.AccountSasResourceType"
- uid: "com.azure.storage.common.AccountSasPermission"
  name: "AccountSasPermission"
  nameWithType: "AccountSasPermission"
  fullName: "com.azure.storage.common.AccountSasPermission"
- uid: "java.time.OffsetDateTime"
  spec.java:
  - uid: "java.time.OffsetDateTime"
    name: "OffsetDateTime"
    fullName: "java.time.OffsetDateTime"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.common.IpRange"
  name: "IpRange"
  nameWithType: "IpRange"
  fullName: "com.azure.storage.common.IpRange"
- uid: "com.azure.storage.common.SasProtocol"
  name: "SasProtocol"
  nameWithType: "SasProtocol"
  fullName: "com.azure.storage.common.SasProtocol"
- uid: "com.azure.storage.common.AccountSasSignatureValues.generateAccountSas*"
  name: "generateAccountSas"
  nameWithType: "AccountSasSignatureValues.generateAccountSas"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.generateAccountSas"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasSignatureValues.getVersion*"
  name: "getVersion"
  nameWithType: "AccountSasSignatureValues.getVersion"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.getVersion"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasSignatureValues.setVersion*"
  name: "setVersion"
  nameWithType: "AccountSasSignatureValues.setVersion"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.setVersion"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasSignatureValues.getProtocol*"
  name: "getProtocol"
  nameWithType: "AccountSasSignatureValues.getProtocol"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.getProtocol"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasSignatureValues.setProtocol*"
  name: "setProtocol"
  nameWithType: "AccountSasSignatureValues.setProtocol"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.setProtocol"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasSignatureValues.getStartTime*"
  name: "getStartTime"
  nameWithType: "AccountSasSignatureValues.getStartTime"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.getStartTime"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasSignatureValues.setStartTime*"
  name: "setStartTime"
  nameWithType: "AccountSasSignatureValues.setStartTime"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.setStartTime"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasSignatureValues.getExpiryTime*"
  name: "getExpiryTime"
  nameWithType: "AccountSasSignatureValues.getExpiryTime"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.getExpiryTime"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasSignatureValues.setExpiryTime*"
  name: "setExpiryTime"
  nameWithType: "AccountSasSignatureValues.setExpiryTime"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.setExpiryTime"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasSignatureValues.getPermissions*"
  name: "getPermissions"
  nameWithType: "AccountSasSignatureValues.getPermissions"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.getPermissions"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasSignatureValues.setPermissions*"
  name: "setPermissions"
  nameWithType: "AccountSasSignatureValues.setPermissions"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.setPermissions"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasSignatureValues.getIpRange*"
  name: "getIpRange"
  nameWithType: "AccountSasSignatureValues.getIpRange"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.getIpRange"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasSignatureValues.setIpRange*"
  name: "setIpRange"
  nameWithType: "AccountSasSignatureValues.setIpRange"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.setIpRange"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasSignatureValues.getServices*"
  name: "getServices"
  nameWithType: "AccountSasSignatureValues.getServices"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.getServices"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasSignatureValues.setServices*"
  name: "setServices"
  nameWithType: "AccountSasSignatureValues.setServices"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.setServices"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasSignatureValues.getResourceTypes*"
  name: "getResourceTypes"
  nameWithType: "AccountSasSignatureValues.getResourceTypes"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.getResourceTypes"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasSignatureValues.setResourceTypes*"
  name: "setResourceTypes"
  nameWithType: "AccountSasSignatureValues.setResourceTypes"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.setResourceTypes"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasQueryParameters"
  name: "AccountSasQueryParameters"
  nameWithType: "AccountSasQueryParameters"
  fullName: "com.azure.storage.common.AccountSasQueryParameters"
- uid: "com.azure.storage.common.AccountSasSignatureValues.generateSasQueryParameters*"
  name: "generateSasQueryParameters"
  nameWithType: "AccountSasSignatureValues.generateSasQueryParameters"
  fullName: "com.azure.storage.common.AccountSasSignatureValues.generateSasQueryParameters"
  package: "com.azure.storage.common"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
