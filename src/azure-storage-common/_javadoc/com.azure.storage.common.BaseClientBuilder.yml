### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.common.BaseClientBuilder"
  id: "BaseClientBuilder"
  parent: "com.azure.storage.common"
  children:
  - "com.azure.storage.common.BaseClientBuilder.BaseClientBuilder()"
  - "com.azure.storage.common.BaseClientBuilder.accountName"
  - "com.azure.storage.common.BaseClientBuilder.addOptionalEncryptionPolicy(java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>)"
  - "com.azure.storage.common.BaseClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  - "com.azure.storage.common.BaseClientBuilder.applyServiceSpecificValidations(com.azure.storage.common.policy.ResponseValidationPolicyBuilder)"
  - "com.azure.storage.common.BaseClientBuilder.buildPipeline()"
  - "com.azure.storage.common.BaseClientBuilder.configuration(com.azure.core.util.Configuration)"
  - "com.azure.storage.common.BaseClientBuilder.connectionString(java.lang.String)"
  - "com.azure.storage.common.BaseClientBuilder.credential(com.azure.core.credentials.TokenCredential)"
  - "com.azure.storage.common.BaseClientBuilder.credential(com.azure.storage.common.credentials.SharedKeyCredential)"
  - "com.azure.storage.common.BaseClientBuilder.endpoint"
  - "com.azure.storage.common.BaseClientBuilder.endpoint(java.lang.String)"
  - "com.azure.storage.common.BaseClientBuilder.getClazz()"
  - "com.azure.storage.common.BaseClientBuilder.getConfiguration()"
  - "com.azure.storage.common.BaseClientBuilder.getPipeline()"
  - "com.azure.storage.common.BaseClientBuilder.getServiceUrlMidfix()"
  - "com.azure.storage.common.BaseClientBuilder.getUserAgentPolicy()"
  - "com.azure.storage.common.BaseClientBuilder.hasCredential()"
  - "com.azure.storage.common.BaseClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  - "com.azure.storage.common.BaseClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  - "com.azure.storage.common.BaseClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  - "com.azure.storage.common.BaseClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)"
  - "com.azure.storage.common.BaseClientBuilder.sasToken(java.lang.String)"
  - "com.azure.storage.common.BaseClientBuilder.setAnonymousCredential()"
  langs:
  - "java"
  name: "BaseClientBuilder<T>"
  nameWithType: "BaseClientBuilder<T>"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>"
  type: "Class"
  package: "com.azure.storage.common"
  summary: "RESERVED FOR INTERNAL USE. Base class for Storage client builders. Holds common code for managing resources and pipeline settings."
  syntax:
    content: "public abstract class BaseClientBuilder<T>"
    typeParameters:
    - id: "T"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.common.BaseClientBuilder.BaseClientBuilder()"
  id: "BaseClientBuilder()"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "BaseClientBuilder()"
  nameWithType: "BaseClientBuilder<T>.BaseClientBuilder()"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.BaseClientBuilder()"
  overload: "com.azure.storage.common.BaseClientBuilder.BaseClientBuilder*"
  type: "Constructor"
  package: "com.azure.storage.common"
  syntax:
    content: "public BaseClientBuilder()"
- uid: "com.azure.storage.common.BaseClientBuilder.accountName"
  id: "accountName"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "accountName"
  nameWithType: "BaseClientBuilder<T>.accountName"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.accountName"
  type: "Field"
  package: "com.azure.storage.common"
  syntax:
    content: "protected String accountName"
    return:
      type: "java.lang.String"
- uid: "com.azure.storage.common.BaseClientBuilder.addOptionalEncryptionPolicy(java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>)"
  id: "addOptionalEncryptionPolicy(java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>)"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "addOptionalEncryptionPolicy(List<HttpPipelinePolicy> policies)"
  nameWithType: "BaseClientBuilder<T>.addOptionalEncryptionPolicy(List<HttpPipelinePolicy> policies)"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.addOptionalEncryptionPolicy(List<HttpPipelinePolicy> policies)"
  overload: "com.azure.storage.common.BaseClientBuilder.addOptionalEncryptionPolicy*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Adds an optional encryption policy that decrypts encrypted blobs."
  syntax:
    content: "protected void addOptionalEncryptionPolicy(List<HttpPipelinePolicy> policies)"
    parameters:
    - id: "policies"
      type: "java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>"
      description: "The list of policies to add an optional encryption policy to."
- uid: "com.azure.storage.common.BaseClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  id: "addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "addPolicy(HttpPipelinePolicy pipelinePolicy)"
  nameWithType: "BaseClientBuilder<T>.addPolicy(HttpPipelinePolicy pipelinePolicy)"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.addPolicy(HttpPipelinePolicy pipelinePolicy)"
  overload: "com.azure.storage.common.BaseClientBuilder.addPolicy*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Adds a pipeline policy to apply on each request sent"
  syntax:
    content: "public final T addPolicy(HttpPipelinePolicy pipelinePolicy)"
    parameters:
    - id: "pipelinePolicy"
      type: "com.azure.core.http.policy.HttpPipelinePolicy"
      description: "a pipeline policy"
    return:
      type: "T"
      description: "the updated builder"
- uid: "com.azure.storage.common.BaseClientBuilder.applyServiceSpecificValidations(com.azure.storage.common.policy.ResponseValidationPolicyBuilder)"
  id: "applyServiceSpecificValidations(com.azure.storage.common.policy.ResponseValidationPolicyBuilder)"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "applyServiceSpecificValidations(ResponseValidationPolicyBuilder builder)"
  nameWithType: "BaseClientBuilder<T>.applyServiceSpecificValidations(ResponseValidationPolicyBuilder builder)"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.applyServiceSpecificValidations(ResponseValidationPolicyBuilder builder)"
  overload: "com.azure.storage.common.BaseClientBuilder.applyServiceSpecificValidations*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Applies validation of general-purpose requests to builder. Method-specific validations should be performed in the convenience layer."
  syntax:
    content: "protected abstract void applyServiceSpecificValidations(ResponseValidationPolicyBuilder builder)"
    parameters:
    - id: "builder"
      type: "com.azure.storage.common.policy.ResponseValidationPolicyBuilder"
      description: "Builder to assemble assertions together."
- uid: "com.azure.storage.common.BaseClientBuilder.buildPipeline()"
  id: "buildPipeline()"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "buildPipeline()"
  nameWithType: "BaseClientBuilder<T>.buildPipeline()"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.buildPipeline()"
  overload: "com.azure.storage.common.BaseClientBuilder.buildPipeline*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Assembles the pipeline based on Storage's standard policies and any custom policies set by the user."
  syntax:
    content: "protected HttpPipeline buildPipeline()"
    return:
      type: "com.azure.core.http.HttpPipeline"
      description: "The pipeline."
- uid: "com.azure.storage.common.BaseClientBuilder.configuration(com.azure.core.util.Configuration)"
  id: "configuration(com.azure.core.util.Configuration)"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "configuration(Configuration configuration)"
  nameWithType: "BaseClientBuilder<T>.configuration(Configuration configuration)"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.configuration(Configuration configuration)"
  overload: "com.azure.storage.common.BaseClientBuilder.configuration*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the configuration object used to retrieve environment configuration values used to buildClient the client with when they are not set in the appendBlobClientBuilder, defaults to Configuration.NONE"
  syntax:
    content: "public final T configuration(Configuration configuration)"
    parameters:
    - id: "configuration"
      type: "com.azure.core.util.Configuration"
      description: "configuration store"
    return:
      type: "T"
      description: "the updated buildr"
- uid: "com.azure.storage.common.BaseClientBuilder.connectionString(java.lang.String)"
  id: "connectionString(java.lang.String)"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "connectionString(String connectionString)"
  nameWithType: "BaseClientBuilder<T>.connectionString(String connectionString)"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.connectionString(String connectionString)"
  overload: "com.azure.storage.common.BaseClientBuilder.connectionString*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the connection string for the service, parses it for authentication information (account name, account key)"
  syntax:
    content: "public final T connectionString(String connectionString)"
    parameters:
    - id: "connectionString"
      type: "java.lang.String"
      description: "connection string from access keys section"
    return:
      type: "T"
      description: "the updated builder"
- uid: "com.azure.storage.common.BaseClientBuilder.credential(com.azure.core.credentials.TokenCredential)"
  id: "credential(com.azure.core.credentials.TokenCredential)"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "credential(TokenCredential credential)"
  nameWithType: "BaseClientBuilder<T>.credential(TokenCredential credential)"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.credential(TokenCredential credential)"
  overload: "com.azure.storage.common.BaseClientBuilder.credential*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the credential used to authorize requests sent to the service"
  syntax:
    content: "public T credential(TokenCredential credential)"
    parameters:
    - id: "credential"
      type: "com.azure.core.credentials.TokenCredential"
      description: "authorization credential"
    return:
      type: "T"
      description: "the updated builder"
- uid: "com.azure.storage.common.BaseClientBuilder.credential(com.azure.storage.common.credentials.SharedKeyCredential)"
  id: "credential(com.azure.storage.common.credentials.SharedKeyCredential)"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "credential(SharedKeyCredential credential)"
  nameWithType: "BaseClientBuilder<T>.credential(SharedKeyCredential credential)"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.credential(SharedKeyCredential credential)"
  overload: "com.azure.storage.common.BaseClientBuilder.credential*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the credential used to authorize requests sent to the service"
  syntax:
    content: "public final T credential(SharedKeyCredential credential)"
    parameters:
    - id: "credential"
      type: "com.azure.storage.common.credentials.SharedKeyCredential"
      description: "authorization credential"
    return:
      type: "T"
      description: "the updated builder"
- uid: "com.azure.storage.common.BaseClientBuilder.endpoint"
  id: "endpoint"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "endpoint"
  nameWithType: "BaseClientBuilder<T>.endpoint"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.endpoint"
  type: "Field"
  package: "com.azure.storage.common"
  syntax:
    content: "protected String endpoint"
    return:
      type: "java.lang.String"
- uid: "com.azure.storage.common.BaseClientBuilder.endpoint(java.lang.String)"
  id: "endpoint(java.lang.String)"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "endpoint(String endpoint)"
  nameWithType: "BaseClientBuilder<T>.endpoint(String endpoint)"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.endpoint(String endpoint)"
  overload: "com.azure.storage.common.BaseClientBuilder.endpoint*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the blob service endpoint, additionally parses it for information (SAS token, path information, etc.)"
  syntax:
    content: "public abstract T endpoint(String endpoint)"
    parameters:
    - id: "endpoint"
      type: "java.lang.String"
      description: "URL of the service"
    return:
      type: "T"
      description: "the updated builder"
- uid: "com.azure.storage.common.BaseClientBuilder.getClazz()"
  id: "getClazz()"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "getClazz()"
  nameWithType: "BaseClientBuilder<T>.getClazz()"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.getClazz()"
  overload: "com.azure.storage.common.BaseClientBuilder.getClazz*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Gets the implementing client builder class."
  syntax:
    content: "protected abstract Class<T> getClazz()"
    return:
      type: "java.lang.Class<T>"
      description: "the implementing client builder class."
- uid: "com.azure.storage.common.BaseClientBuilder.getConfiguration()"
  id: "getConfiguration()"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "getConfiguration()"
  nameWithType: "BaseClientBuilder<T>.getConfiguration()"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.getConfiguration()"
  overload: "com.azure.storage.common.BaseClientBuilder.getConfiguration*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Gets the configuration being used to construct the pipeline."
  syntax:
    content: "protected final Configuration getConfiguration()"
    return:
      type: "com.azure.core.util.Configuration"
      description: "The configuration."
- uid: "com.azure.storage.common.BaseClientBuilder.getPipeline()"
  id: "getPipeline()"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "getPipeline()"
  nameWithType: "BaseClientBuilder<T>.getPipeline()"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.getPipeline()"
  overload: "com.azure.storage.common.BaseClientBuilder.getPipeline*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Gets the optional custom pipeline to use in constructed clients."
  syntax:
    content: "protected final HttpPipeline getPipeline()"
    return:
      type: "com.azure.core.http.HttpPipeline"
      description: "The pipeline. Null if the builder should construct one."
- uid: "com.azure.storage.common.BaseClientBuilder.getServiceUrlMidfix()"
  id: "getServiceUrlMidfix()"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "getServiceUrlMidfix()"
  nameWithType: "BaseClientBuilder<T>.getServiceUrlMidfix()"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.getServiceUrlMidfix()"
  overload: "com.azure.storage.common.BaseClientBuilder.getServiceUrlMidfix*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Gets the storage service segment to use for the URL hostname when assembling from a connection string."
  syntax:
    content: "protected abstract String getServiceUrlMidfix()"
    return:
      type: "java.lang.String"
      description: "The midfix."
- uid: "com.azure.storage.common.BaseClientBuilder.getUserAgentPolicy()"
  id: "getUserAgentPolicy()"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "getUserAgentPolicy()"
  nameWithType: "BaseClientBuilder<T>.getUserAgentPolicy()"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.getUserAgentPolicy()"
  overload: "com.azure.storage.common.BaseClientBuilder.getUserAgentPolicy*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Gets the user agent policy to use for pipelines constructed by this builder."
  syntax:
    content: "protected abstract UserAgentPolicy getUserAgentPolicy()"
    return:
      type: "com.azure.core.http.policy.UserAgentPolicy"
      description: "The policy."
- uid: "com.azure.storage.common.BaseClientBuilder.hasCredential()"
  id: "hasCredential()"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "hasCredential()"
  nameWithType: "BaseClientBuilder<T>.hasCredential()"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.hasCredential()"
  overload: "com.azure.storage.common.BaseClientBuilder.hasCredential*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Whether or not this builder has a credential to use with the pipeline."
  syntax:
    content: "protected final boolean hasCredential()"
    return:
      type: "boolean"
      description: "The boolean value of the expression."
- uid: "com.azure.storage.common.BaseClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  id: "httpClient(com.azure.core.http.HttpClient)"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "httpClient(HttpClient httpClient)"
  nameWithType: "BaseClientBuilder<T>.httpClient(HttpClient httpClient)"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.httpClient(HttpClient httpClient)"
  overload: "com.azure.storage.common.BaseClientBuilder.httpClient*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the http client used to send service requests. A default will be used if none is provided."
  syntax:
    content: "public final T httpClient(HttpClient httpClient)"
    parameters:
    - id: "httpClient"
      type: "com.azure.core.http.HttpClient"
      description: "http client to send requests"
    return:
      type: "T"
      description: "the updated buildr"
- uid: "com.azure.storage.common.BaseClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  id: "httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "httpLogOptions(HttpLogOptions logOptions)"
  nameWithType: "BaseClientBuilder<T>.httpLogOptions(HttpLogOptions logOptions)"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.httpLogOptions(HttpLogOptions logOptions)"
  overload: "com.azure.storage.common.BaseClientBuilder.httpLogOptions*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the logging configuration for service requests\n\nIf logLevel is not provided, default value of <xref uid=\"\" data-throw-if-not-resolved=\"false\">HttpLogDetailLevel#NONE</xref> is set."
  syntax:
    content: "public final T httpLogOptions(HttpLogOptions logOptions)"
    parameters:
    - id: "logOptions"
      type: "com.azure.core.http.policy.HttpLogOptions"
      description: "The logging configuration to use when sending and receiving HTTP requests/responses."
    return:
      type: "T"
      description: "the updated builder"
- uid: "com.azure.storage.common.BaseClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  id: "pipeline(com.azure.core.http.HttpPipeline)"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "pipeline(HttpPipeline pipeline)"
  nameWithType: "BaseClientBuilder<T>.pipeline(HttpPipeline pipeline)"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.pipeline(HttpPipeline pipeline)"
  overload: "com.azure.storage.common.BaseClientBuilder.pipeline*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the HTTP pipeline to use for the service client. If `pipeline` is set, all other settings are ignored, aside from <xref uid=\"com.azure.storage.common.BaseClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> when building clients."
  syntax:
    content: "public final T pipeline(HttpPipeline pipeline)"
    parameters:
    - id: "pipeline"
      type: "com.azure.core.http.HttpPipeline"
      description: "The HTTP pipeline to use for sending service requests and receiving responses."
    return:
      type: "T"
      description: "The updated builder."
- uid: "com.azure.storage.common.BaseClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)"
  id: "retryOptions(com.azure.storage.common.policy.RequestRetryOptions)"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "retryOptions(RequestRetryOptions retryOptions)"
  nameWithType: "BaseClientBuilder<T>.retryOptions(RequestRetryOptions retryOptions)"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.retryOptions(RequestRetryOptions retryOptions)"
  overload: "com.azure.storage.common.BaseClientBuilder.retryOptions*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the request retry options for all the requests made through the client."
  syntax:
    content: "public final T retryOptions(RequestRetryOptions retryOptions)"
    parameters:
    - id: "retryOptions"
      type: "com.azure.storage.common.policy.RequestRetryOptions"
      description: "the options to configure retry behaviors"
    return:
      type: "T"
      description: "the updated builder"
- uid: "com.azure.storage.common.BaseClientBuilder.sasToken(java.lang.String)"
  id: "sasToken(java.lang.String)"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "sasToken(String sasToken)"
  nameWithType: "BaseClientBuilder<T>.sasToken(String sasToken)"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.sasToken(String sasToken)"
  overload: "com.azure.storage.common.BaseClientBuilder.sasToken*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the SAS token used to authorize requests sent to the service"
  syntax:
    content: "public final T sasToken(String sasToken)"
    parameters:
    - id: "sasToken"
      type: "java.lang.String"
      description: "authorization credential"
    return:
      type: "T"
      description: "the updated builder"
- uid: "com.azure.storage.common.BaseClientBuilder.setAnonymousCredential()"
  id: "setAnonymousCredential()"
  parent: "com.azure.storage.common.BaseClientBuilder"
  langs:
  - "java"
  name: "setAnonymousCredential()"
  nameWithType: "BaseClientBuilder<T>.setAnonymousCredential()"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.setAnonymousCredential()"
  overload: "com.azure.storage.common.BaseClientBuilder.setAnonymousCredential*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Clears the credential used to authorize requests sent to the service"
  syntax:
    content: "public T setAnonymousCredential()"
    return:
      type: "T"
      description: "the updated buildr"
references:
- uid: "com.azure.storage.common.BaseClientBuilder.BaseClientBuilder*"
  name: "BaseClientBuilder"
  nameWithType: "BaseClientBuilder<T>.BaseClientBuilder"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.BaseClientBuilder"
  package: "com.azure.storage.common"
- uid: "com.azure.core.http.HttpPipeline"
  spec.java:
  - uid: "com.azure.core.http.HttpPipeline"
    name: "HttpPipeline"
    fullName: "com.azure.core.http.HttpPipeline"
- uid: "com.azure.storage.common.BaseClientBuilder.buildPipeline*"
  name: "buildPipeline"
  nameWithType: "BaseClientBuilder<T>.buildPipeline"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.buildPipeline"
  package: "com.azure.storage.common"
- uid: "java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.core.http.policy.HttpPipelinePolicy"
    name: "HttpPipelinePolicy"
    fullName: "com.azure.core.http.policy.HttpPipelinePolicy"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.common.BaseClientBuilder.addOptionalEncryptionPolicy*"
  name: "addOptionalEncryptionPolicy"
  nameWithType: "BaseClientBuilder<T>.addOptionalEncryptionPolicy"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.addOptionalEncryptionPolicy"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.policy.ResponseValidationPolicyBuilder"
  name: "ResponseValidationPolicyBuilder"
  nameWithType: "ResponseValidationPolicyBuilder"
  fullName: "com.azure.storage.common.policy.ResponseValidationPolicyBuilder"
- uid: "com.azure.storage.common.BaseClientBuilder.applyServiceSpecificValidations*"
  name: "applyServiceSpecificValidations"
  nameWithType: "BaseClientBuilder<T>.applyServiceSpecificValidations"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.applyServiceSpecificValidations"
  package: "com.azure.storage.common"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "com.azure.storage.common.BaseClientBuilder.endpoint*"
  name: "endpoint"
  nameWithType: "BaseClientBuilder<T>.endpoint"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.endpoint"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.credentials.SharedKeyCredential"
  name: "SharedKeyCredential"
  nameWithType: "SharedKeyCredential"
  fullName: "com.azure.storage.common.credentials.SharedKeyCredential"
- uid: "com.azure.storage.common.BaseClientBuilder.credential*"
  name: "credential"
  nameWithType: "BaseClientBuilder<T>.credential"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.credential"
  package: "com.azure.storage.common"
- uid: "com.azure.core.credentials.TokenCredential"
  spec.java:
  - uid: "com.azure.core.credentials.TokenCredential"
    name: "TokenCredential"
    fullName: "com.azure.core.credentials.TokenCredential"
- uid: "com.azure.storage.common.BaseClientBuilder.sasToken*"
  name: "sasToken"
  nameWithType: "BaseClientBuilder<T>.sasToken"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.sasToken"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.BaseClientBuilder.setAnonymousCredential*"
  name: "setAnonymousCredential"
  nameWithType: "BaseClientBuilder<T>.setAnonymousCredential"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.setAnonymousCredential"
  package: "com.azure.storage.common"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.storage.common.BaseClientBuilder.hasCredential*"
  name: "hasCredential"
  nameWithType: "BaseClientBuilder<T>.hasCredential"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.hasCredential"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.BaseClientBuilder.connectionString*"
  name: "connectionString"
  nameWithType: "BaseClientBuilder<T>.connectionString"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.connectionString"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.BaseClientBuilder.getServiceUrlMidfix*"
  name: "getServiceUrlMidfix"
  nameWithType: "BaseClientBuilder<T>.getServiceUrlMidfix"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.getServiceUrlMidfix"
  package: "com.azure.storage.common"
- uid: "com.azure.core.http.HttpClient"
  spec.java:
  - uid: "com.azure.core.http.HttpClient"
    name: "HttpClient"
    fullName: "com.azure.core.http.HttpClient"
- uid: "com.azure.storage.common.BaseClientBuilder.httpClient*"
  name: "httpClient"
  nameWithType: "BaseClientBuilder<T>.httpClient"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.httpClient"
  package: "com.azure.storage.common"
- uid: "com.azure.core.http.policy.HttpPipelinePolicy"
  spec.java:
  - uid: "com.azure.core.http.policy.HttpPipelinePolicy"
    name: "HttpPipelinePolicy"
    fullName: "com.azure.core.http.policy.HttpPipelinePolicy"
- uid: "com.azure.storage.common.BaseClientBuilder.addPolicy*"
  name: "addPolicy"
  nameWithType: "BaseClientBuilder<T>.addPolicy"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.addPolicy"
  package: "com.azure.storage.common"
- uid: "com.azure.core.http.policy.HttpLogOptions"
  spec.java:
  - uid: "com.azure.core.http.policy.HttpLogOptions"
    name: "HttpLogOptions"
    fullName: "com.azure.core.http.policy.HttpLogOptions"
- uid: "com.azure.storage.common.BaseClientBuilder.httpLogOptions*"
  name: "httpLogOptions"
  nameWithType: "BaseClientBuilder<T>.httpLogOptions"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.httpLogOptions"
  package: "com.azure.storage.common"
- uid: "com.azure.core.util.Configuration"
  spec.java:
  - uid: "com.azure.core.util.Configuration"
    name: "Configuration"
    fullName: "com.azure.core.util.Configuration"
- uid: "com.azure.storage.common.BaseClientBuilder.configuration*"
  name: "configuration"
  nameWithType: "BaseClientBuilder<T>.configuration"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.configuration"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.BaseClientBuilder.getConfiguration*"
  name: "getConfiguration"
  nameWithType: "BaseClientBuilder<T>.getConfiguration"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.getConfiguration"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.policy.RequestRetryOptions"
  name: "RequestRetryOptions"
  nameWithType: "RequestRetryOptions"
  fullName: "com.azure.storage.common.policy.RequestRetryOptions"
- uid: "com.azure.storage.common.BaseClientBuilder.retryOptions*"
  name: "retryOptions"
  nameWithType: "BaseClientBuilder<T>.retryOptions"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.retryOptions"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.BaseClientBuilder.pipeline*"
  name: "pipeline"
  nameWithType: "BaseClientBuilder<T>.pipeline"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.pipeline"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.BaseClientBuilder.getPipeline*"
  name: "getPipeline"
  nameWithType: "BaseClientBuilder<T>.getPipeline"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.getPipeline"
  package: "com.azure.storage.common"
- uid: "com.azure.core.http.policy.UserAgentPolicy"
  spec.java:
  - uid: "com.azure.core.http.policy.UserAgentPolicy"
    name: "UserAgentPolicy"
    fullName: "com.azure.core.http.policy.UserAgentPolicy"
- uid: "com.azure.storage.common.BaseClientBuilder.getUserAgentPolicy*"
  name: "getUserAgentPolicy"
  nameWithType: "BaseClientBuilder<T>.getUserAgentPolicy"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.getUserAgentPolicy"
  package: "com.azure.storage.common"
- uid: "java.lang.Class<T>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "T"
    name: "T"
    fullName: "T"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.common.BaseClientBuilder.getClazz*"
  name: "getClazz"
  nameWithType: "BaseClientBuilder<T>.getClazz"
  fullName: "com.azure.storage.common.BaseClientBuilder<T>.getClazz"
  package: "com.azure.storage.common"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
