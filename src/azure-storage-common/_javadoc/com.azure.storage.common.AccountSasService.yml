### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.common.AccountSasService"
  id: "AccountSasService"
  parent: "com.azure.storage.common"
  children:
  - "com.azure.storage.common.AccountSasService.AccountSasService()"
  - "com.azure.storage.common.AccountSasService.isBlob()"
  - "com.azure.storage.common.AccountSasService.isFile()"
  - "com.azure.storage.common.AccountSasService.isQueue()"
  - "com.azure.storage.common.AccountSasService.isTable()"
  - "com.azure.storage.common.AccountSasService.parse(java.lang.String)"
  - "com.azure.storage.common.AccountSasService.setBlob(boolean)"
  - "com.azure.storage.common.AccountSasService.setFile(boolean)"
  - "com.azure.storage.common.AccountSasService.setQueue(boolean)"
  - "com.azure.storage.common.AccountSasService.setTable(boolean)"
  - "com.azure.storage.common.AccountSasService.toString()"
  langs:
  - "java"
  name: "AccountSasService"
  nameWithType: "AccountSasService"
  fullName: "com.azure.storage.common.AccountSasService"
  type: "Class"
  package: "com.azure.storage.common"
  summary: "This is a helper class to construct a string representing the services accessible by an AccountSAS. Setting a value to true means that any SAS which uses these permissions will grant access to that service. Once all the values are set, this should be serialized with toString and set as the services field on an <xref uid=\"com.azure.storage.common.AccountSasSignatureValues\" data-throw-if-not-resolved=\"false\">AccountSasSignatureValues</xref> object. It is possible to construct the services string without this class, but the order of the services is particular and this class guarantees correctness."
  syntax:
    content: "public final class AccountSasService"
  inheritance:
  - "java.lang.Object"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.common.AccountSasService.AccountSasService()"
  id: "AccountSasService()"
  parent: "com.azure.storage.common.AccountSasService"
  langs:
  - "java"
  name: "AccountSasService()"
  nameWithType: "AccountSasService.AccountSasService()"
  fullName: "com.azure.storage.common.AccountSasService.AccountSasService()"
  overload: "com.azure.storage.common.AccountSasService.AccountSasService*"
  type: "Constructor"
  package: "com.azure.storage.common"
  summary: "Initializes an `AccountSasService` object with all fields set to false."
  syntax:
    content: "public AccountSasService()"
- uid: "com.azure.storage.common.AccountSasService.isBlob()"
  id: "isBlob()"
  parent: "com.azure.storage.common.AccountSasService"
  langs:
  - "java"
  name: "isBlob()"
  nameWithType: "AccountSasService.isBlob()"
  fullName: "com.azure.storage.common.AccountSasService.isBlob()"
  overload: "com.azure.storage.common.AccountSasService.isBlob*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public boolean isBlob()"
    return:
      type: "boolean"
      description: "the access status for blob resources."
- uid: "com.azure.storage.common.AccountSasService.isFile()"
  id: "isFile()"
  parent: "com.azure.storage.common.AccountSasService"
  langs:
  - "java"
  name: "isFile()"
  nameWithType: "AccountSasService.isFile()"
  fullName: "com.azure.storage.common.AccountSasService.isFile()"
  overload: "com.azure.storage.common.AccountSasService.isFile*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public boolean isFile()"
    return:
      type: "boolean"
      description: "the access status for file resources."
- uid: "com.azure.storage.common.AccountSasService.isQueue()"
  id: "isQueue()"
  parent: "com.azure.storage.common.AccountSasService"
  langs:
  - "java"
  name: "isQueue()"
  nameWithType: "AccountSasService.isQueue()"
  fullName: "com.azure.storage.common.AccountSasService.isQueue()"
  overload: "com.azure.storage.common.AccountSasService.isQueue*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public boolean isQueue()"
    return:
      type: "boolean"
      description: "the access status for queue resources."
- uid: "com.azure.storage.common.AccountSasService.isTable()"
  id: "isTable()"
  parent: "com.azure.storage.common.AccountSasService"
  langs:
  - "java"
  name: "isTable()"
  nameWithType: "AccountSasService.isTable()"
  fullName: "com.azure.storage.common.AccountSasService.isTable()"
  overload: "com.azure.storage.common.AccountSasService.isTable*"
  type: "Method"
  package: "com.azure.storage.common"
  syntax:
    content: "public boolean isTable()"
    return:
      type: "boolean"
      description: "the access status for table resources."
- uid: "com.azure.storage.common.AccountSasService.parse(java.lang.String)"
  id: "parse(java.lang.String)"
  parent: "com.azure.storage.common.AccountSasService"
  langs:
  - "java"
  name: "parse(String servicesString)"
  nameWithType: "AccountSasService.parse(String servicesString)"
  fullName: "com.azure.storage.common.AccountSasService.parse(String servicesString)"
  overload: "com.azure.storage.common.AccountSasService.parse*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Creates an `AccountSasService` from the specified services string. This method will throw an `IllegalArgumentException` if it encounters a character that does not correspond to a valid service."
  syntax:
    content: "public static AccountSasService parse(String servicesString)"
    parameters:
    - id: "servicesString"
      type: "java.lang.String"
      description: "A <code>String</code> which represents the <code>SharedAccessAccountServices</code>."
    return:
      type: "com.azure.storage.common.AccountSasService"
      description: "A <code>AccountSasService</code> generated from the given <code>String</code>."
- uid: "com.azure.storage.common.AccountSasService.setBlob(boolean)"
  id: "setBlob(boolean)"
  parent: "com.azure.storage.common.AccountSasService"
  langs:
  - "java"
  name: "setBlob(boolean blob)"
  nameWithType: "AccountSasService.setBlob(boolean blob)"
  fullName: "com.azure.storage.common.AccountSasService.setBlob(boolean blob)"
  overload: "com.azure.storage.common.AccountSasService.setBlob*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the access status for blob resources."
  syntax:
    content: "public AccountSasService setBlob(boolean blob)"
    parameters:
    - id: "blob"
      type: "boolean"
      description: "Access status to set"
    return:
      type: "com.azure.storage.common.AccountSasService"
      description: "the updated AccountSasService object."
- uid: "com.azure.storage.common.AccountSasService.setFile(boolean)"
  id: "setFile(boolean)"
  parent: "com.azure.storage.common.AccountSasService"
  langs:
  - "java"
  name: "setFile(boolean file)"
  nameWithType: "AccountSasService.setFile(boolean file)"
  fullName: "com.azure.storage.common.AccountSasService.setFile(boolean file)"
  overload: "com.azure.storage.common.AccountSasService.setFile*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the access status for file resources."
  syntax:
    content: "public AccountSasService setFile(boolean file)"
    parameters:
    - id: "file"
      type: "boolean"
      description: "Access status to set"
    return:
      type: "com.azure.storage.common.AccountSasService"
      description: "the updated AccountSasService object."
- uid: "com.azure.storage.common.AccountSasService.setQueue(boolean)"
  id: "setQueue(boolean)"
  parent: "com.azure.storage.common.AccountSasService"
  langs:
  - "java"
  name: "setQueue(boolean queue)"
  nameWithType: "AccountSasService.setQueue(boolean queue)"
  fullName: "com.azure.storage.common.AccountSasService.setQueue(boolean queue)"
  overload: "com.azure.storage.common.AccountSasService.setQueue*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the access status for queue resources."
  syntax:
    content: "public AccountSasService setQueue(boolean queue)"
    parameters:
    - id: "queue"
      type: "boolean"
      description: "Access status to set"
    return:
      type: "com.azure.storage.common.AccountSasService"
      description: "the updated AccountSasService object."
- uid: "com.azure.storage.common.AccountSasService.setTable(boolean)"
  id: "setTable(boolean)"
  parent: "com.azure.storage.common.AccountSasService"
  langs:
  - "java"
  name: "setTable(boolean table)"
  nameWithType: "AccountSasService.setTable(boolean table)"
  fullName: "com.azure.storage.common.AccountSasService.setTable(boolean table)"
  overload: "com.azure.storage.common.AccountSasService.setTable*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Sets the access status for table resources."
  syntax:
    content: "public AccountSasService setTable(boolean table)"
    parameters:
    - id: "table"
      type: "boolean"
      description: "Access status to set"
    return:
      type: "com.azure.storage.common.AccountSasService"
      description: "the updated AccountSasService object."
- uid: "com.azure.storage.common.AccountSasService.toString()"
  id: "toString()"
  parent: "com.azure.storage.common.AccountSasService"
  langs:
  - "java"
  name: "toString()"
  nameWithType: "AccountSasService.toString()"
  fullName: "com.azure.storage.common.AccountSasService.toString()"
  overload: "com.azure.storage.common.AccountSasService.toString*"
  type: "Method"
  package: "com.azure.storage.common"
  summary: "Converts the given services to a `String`. Using this method will guarantee the services are in an order accepted by the service."
  syntax:
    content: "public String toString()"
    return:
      type: "java.lang.String"
      description: "A <code>String</code> which represents the <code>AccountSASServices</code>."
references:
- uid: "com.azure.storage.common.AccountSasService.AccountSasService*"
  name: "AccountSasService"
  nameWithType: "AccountSasService.AccountSasService"
  fullName: "com.azure.storage.common.AccountSasService.AccountSasService"
  package: "com.azure.storage.common"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.common.AccountSasService.parse*"
  name: "parse"
  nameWithType: "AccountSasService.parse"
  fullName: "com.azure.storage.common.AccountSasService.parse"
  package: "com.azure.storage.common"
- uid: "boolean"
  spec.java:
  - uid: "boolean"
    name: "boolean"
    fullName: "boolean"
- uid: "com.azure.storage.common.AccountSasService.isBlob*"
  name: "isBlob"
  nameWithType: "AccountSasService.isBlob"
  fullName: "com.azure.storage.common.AccountSasService.isBlob"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasService.setBlob*"
  name: "setBlob"
  nameWithType: "AccountSasService.setBlob"
  fullName: "com.azure.storage.common.AccountSasService.setBlob"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasService.isFile*"
  name: "isFile"
  nameWithType: "AccountSasService.isFile"
  fullName: "com.azure.storage.common.AccountSasService.isFile"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasService.setFile*"
  name: "setFile"
  nameWithType: "AccountSasService.setFile"
  fullName: "com.azure.storage.common.AccountSasService.setFile"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasService.isQueue*"
  name: "isQueue"
  nameWithType: "AccountSasService.isQueue"
  fullName: "com.azure.storage.common.AccountSasService.isQueue"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasService.setQueue*"
  name: "setQueue"
  nameWithType: "AccountSasService.setQueue"
  fullName: "com.azure.storage.common.AccountSasService.setQueue"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasService.isTable*"
  name: "isTable"
  nameWithType: "AccountSasService.isTable"
  fullName: "com.azure.storage.common.AccountSasService.isTable"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasService.setTable*"
  name: "setTable"
  nameWithType: "AccountSasService.setTable"
  fullName: "com.azure.storage.common.AccountSasService.setTable"
  package: "com.azure.storage.common"
- uid: "com.azure.storage.common.AccountSasService.toString*"
  name: "toString"
  nameWithType: "AccountSasService.toString"
  fullName: "com.azure.storage.common.AccountSasService.toString"
  package: "com.azure.storage.common"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
