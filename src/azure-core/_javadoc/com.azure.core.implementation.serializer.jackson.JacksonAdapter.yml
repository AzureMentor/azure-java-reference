### YamlMime:ManagedReference
items:
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter"
  id: "JacksonAdapter"
  parent: "com.azure.core.implementation.serializer.jackson"
  children:
  - "com.azure.core.implementation.serializer.jackson.JacksonAdapter.<T>deserialize(com.azure.core.http.HttpHeaders,java.lang.reflect.Type)"
  - "com.azure.core.implementation.serializer.jackson.JacksonAdapter.<T>deserialize(java.lang.String,java.lang.reflect.Type,com.azure.core.implementation.serializer.SerializerEncoding)"
  - "com.azure.core.implementation.serializer.jackson.JacksonAdapter.JacksonAdapter()"
  - "com.azure.core.implementation.serializer.jackson.JacksonAdapter.createDefaultSerializerAdapter()"
  - "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serialize(java.lang.Object,com.azure.core.implementation.serializer.SerializerEncoding)"
  - "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializeList(java.util.List<?>,com.azure.core.implementation.CollectionFormat)"
  - "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializeRaw(java.lang.Object)"
  - "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializer()"
  - "com.azure.core.implementation.serializer.jackson.JacksonAdapter.simpleMapper()"
  langs:
  - "java"
  name: "JacksonAdapter"
  nameWithType: "JacksonAdapter"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter"
  type: "Class"
  package: "com.azure.core.implementation.serializer.jackson"
  summary: "Implementation of <xref uid=\"com.azure.core.implementation.serializer.SerializerAdapter\" data-throw-if-not-resolved=\"false\">SerializerAdapter</xref> for Jackson."
  syntax:
    content: "public class JacksonAdapter implements SerializerAdapter"
  inheritance:
  - "java.lang.Object"
  implements:
  - "com.azure.core.implementation.serializer.SerializerAdapter"
  inheritedMembers:
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.<T>deserialize(com.azure.core.http.HttpHeaders,java.lang.reflect.Type)"
  id: "<T>deserialize(com.azure.core.http.HttpHeaders,java.lang.reflect.Type)"
  parent: "com.azure.core.implementation.serializer.jackson.JacksonAdapter"
  langs:
  - "java"
  name: "<T>deserialize(HttpHeaders headers, Type deserializedHeadersType)"
  nameWithType: "JacksonAdapter.<T>deserialize(HttpHeaders headers, Type deserializedHeadersType)"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.<T>deserialize(HttpHeaders headers, Type deserializedHeadersType)"
  overload: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.deserialize*"
  type: "Method"
  package: "com.azure.core.implementation.serializer.jackson"
  syntax:
    content: "public T <T>deserialize(HttpHeaders headers, Type deserializedHeadersType)"
    parameters:
    - id: "headers"
      type: "com.azure.core.http.HttpHeaders"
    - id: "deserializedHeadersType"
      type: "java.lang.reflect.Type"
    return:
      type: "T"
  exceptions:
  - type: "java.io.IOException"
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.<T>deserialize(java.lang.String,java.lang.reflect.Type,com.azure.core.implementation.serializer.SerializerEncoding)"
  id: "<T>deserialize(java.lang.String,java.lang.reflect.Type,com.azure.core.implementation.serializer.SerializerEncoding)"
  parent: "com.azure.core.implementation.serializer.jackson.JacksonAdapter"
  langs:
  - "java"
  name: "<T>deserialize(String value, Type type, SerializerEncoding encoding)"
  nameWithType: "JacksonAdapter.<T>deserialize(String value, Type type, SerializerEncoding encoding)"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.<T>deserialize(String value, Type type, SerializerEncoding encoding)"
  overload: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.deserialize*"
  type: "Method"
  package: "com.azure.core.implementation.serializer.jackson"
  syntax:
    content: "public T <T>deserialize(String value, Type type, SerializerEncoding encoding)"
    parameters:
    - id: "value"
      type: "java.lang.String"
    - id: "type"
      type: "java.lang.reflect.Type"
    - id: "encoding"
      type: "com.azure.core.implementation.serializer.SerializerEncoding"
    return:
      type: "T"
  exceptions:
  - type: "java.io.IOException"
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.JacksonAdapter()"
  id: "JacksonAdapter()"
  parent: "com.azure.core.implementation.serializer.jackson.JacksonAdapter"
  langs:
  - "java"
  name: "JacksonAdapter()"
  nameWithType: "JacksonAdapter.JacksonAdapter()"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.JacksonAdapter()"
  overload: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.JacksonAdapter*"
  type: "Constructor"
  package: "com.azure.core.implementation.serializer.jackson"
  summary: "Creates a new JacksonAdapter instance with default mapper settings."
  syntax:
    content: "public JacksonAdapter()"
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.createDefaultSerializerAdapter()"
  id: "createDefaultSerializerAdapter()"
  parent: "com.azure.core.implementation.serializer.jackson.JacksonAdapter"
  langs:
  - "java"
  name: "createDefaultSerializerAdapter()"
  nameWithType: "JacksonAdapter.createDefaultSerializerAdapter()"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.createDefaultSerializerAdapter()"
  overload: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.createDefaultSerializerAdapter*"
  type: "Method"
  package: "com.azure.core.implementation.serializer.jackson"
  summary: "maintain singleton instance of the default serializer adapter."
  syntax:
    content: "public static synchronized SerializerAdapter createDefaultSerializerAdapter()"
    return:
      type: "com.azure.core.implementation.serializer.SerializerAdapter"
      description: "the default serializer"
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serialize(java.lang.Object,com.azure.core.implementation.serializer.SerializerEncoding)"
  id: "serialize(java.lang.Object,com.azure.core.implementation.serializer.SerializerEncoding)"
  parent: "com.azure.core.implementation.serializer.jackson.JacksonAdapter"
  langs:
  - "java"
  name: "serialize(Object object, SerializerEncoding encoding)"
  nameWithType: "JacksonAdapter.serialize(Object object, SerializerEncoding encoding)"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serialize(Object object, SerializerEncoding encoding)"
  overload: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serialize*"
  type: "Method"
  package: "com.azure.core.implementation.serializer.jackson"
  syntax:
    content: "public String serialize(Object object, SerializerEncoding encoding)"
    parameters:
    - id: "object"
      type: "java.lang.Object"
    - id: "encoding"
      type: "com.azure.core.implementation.serializer.SerializerEncoding"
    return:
      type: "java.lang.String"
  exceptions:
  - type: "java.io.IOException"
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializeList(java.util.List<?>,com.azure.core.implementation.CollectionFormat)"
  id: "serializeList(java.util.List<?>,com.azure.core.implementation.CollectionFormat)"
  parent: "com.azure.core.implementation.serializer.jackson.JacksonAdapter"
  langs:
  - "java"
  name: "serializeList(List<?> list, CollectionFormat format)"
  nameWithType: "JacksonAdapter.serializeList(List<?> list, CollectionFormat format)"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializeList(List<?> list, CollectionFormat format)"
  overload: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializeList*"
  type: "Method"
  package: "com.azure.core.implementation.serializer.jackson"
  syntax:
    content: "public String serializeList(List<?> list, CollectionFormat format)"
    parameters:
    - id: "list"
      type: "java.util.List<?>"
    - id: "format"
      type: "com.azure.core.implementation.CollectionFormat"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializeRaw(java.lang.Object)"
  id: "serializeRaw(java.lang.Object)"
  parent: "com.azure.core.implementation.serializer.jackson.JacksonAdapter"
  langs:
  - "java"
  name: "serializeRaw(Object object)"
  nameWithType: "JacksonAdapter.serializeRaw(Object object)"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializeRaw(Object object)"
  overload: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializeRaw*"
  type: "Method"
  package: "com.azure.core.implementation.serializer.jackson"
  syntax:
    content: "public String serializeRaw(Object object)"
    parameters:
    - id: "object"
      type: "java.lang.Object"
    return:
      type: "java.lang.String"
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializer()"
  id: "serializer()"
  parent: "com.azure.core.implementation.serializer.jackson.JacksonAdapter"
  langs:
  - "java"
  name: "serializer()"
  nameWithType: "JacksonAdapter.serializer()"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializer()"
  overload: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializer*"
  type: "Method"
  package: "com.azure.core.implementation.serializer.jackson"
  syntax:
    content: "public ObjectMapper serializer()"
    return:
      type: "com.fasterxml.jackson.databind.ObjectMapper"
      description: "the original serializer type"
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.simpleMapper()"
  id: "simpleMapper()"
  parent: "com.azure.core.implementation.serializer.jackson.JacksonAdapter"
  langs:
  - "java"
  name: "simpleMapper()"
  nameWithType: "JacksonAdapter.simpleMapper()"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.simpleMapper()"
  overload: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.simpleMapper*"
  type: "Method"
  package: "com.azure.core.implementation.serializer.jackson"
  summary: "Gets a static instance of <xref uid=\"\" data-throw-if-not-resolved=\"false\">ObjectMapper</xref> that doesn't handle flattening."
  syntax:
    content: "protected ObjectMapper simpleMapper()"
    return:
      type: "com.fasterxml.jackson.databind.ObjectMapper"
      description: "an instance of <xref uid=\"\" data-throw-if-not-resolved=\"false\">ObjectMapper</xref>."
references:
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.JacksonAdapter*"
  name: "JacksonAdapter"
  nameWithType: "JacksonAdapter.JacksonAdapter"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.JacksonAdapter"
  package: "com.azure.core.implementation.serializer.jackson"
- uid: "com.fasterxml.jackson.databind.ObjectMapper"
  spec.java:
  - uid: "com.fasterxml.jackson.databind.ObjectMapper"
    name: "ObjectMapper"
    fullName: "com.fasterxml.jackson.databind.ObjectMapper"
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.simpleMapper*"
  name: "simpleMapper"
  nameWithType: "JacksonAdapter.simpleMapper"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.simpleMapper"
  package: "com.azure.core.implementation.serializer.jackson"
- uid: "com.azure.core.implementation.serializer.SerializerAdapter"
  name: "SerializerAdapter"
  nameWithType: "SerializerAdapter"
  fullName: "com.azure.core.implementation.serializer.SerializerAdapter"
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.createDefaultSerializerAdapter*"
  name: "createDefaultSerializerAdapter"
  nameWithType: "JacksonAdapter.createDefaultSerializerAdapter"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.createDefaultSerializerAdapter"
  package: "com.azure.core.implementation.serializer.jackson"
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializer*"
  name: "serializer"
  nameWithType: "JacksonAdapter.serializer"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializer"
  package: "com.azure.core.implementation.serializer.jackson"
- uid: "java.io.IOException"
  spec.java:
  - uid: "java.io.IOException"
    name: "IOException"
    fullName: "java.io.IOException"
- uid: "java.lang.Object"
  spec.java:
  - uid: "java.lang.Object"
    name: "Object"
    fullName: "java.lang.Object"
- uid: "com.azure.core.implementation.serializer.SerializerEncoding"
  name: "SerializerEncoding"
  nameWithType: "SerializerEncoding"
  fullName: "com.azure.core.implementation.serializer.SerializerEncoding"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serialize*"
  name: "serialize"
  nameWithType: "JacksonAdapter.serialize"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serialize"
  package: "com.azure.core.implementation.serializer.jackson"
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializeRaw*"
  name: "serializeRaw"
  nameWithType: "JacksonAdapter.serializeRaw"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializeRaw"
  package: "com.azure.core.implementation.serializer.jackson"
- uid: "java.util.List<?>"
  spec.java:
  - uid: "java.util.List"
    name: "List"
    fullName: "java.util.List"
  - name: "<"
    fullName: "<"
  - uid: "?"
    name: "?"
    fullName: "?"
  - name: ">"
    fullName: ">"
- uid: "com.azure.core.implementation.CollectionFormat"
  name: "CollectionFormat"
  nameWithType: "CollectionFormat"
  fullName: "com.azure.core.implementation.CollectionFormat"
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializeList*"
  name: "serializeList"
  nameWithType: "JacksonAdapter.serializeList"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.serializeList"
  package: "com.azure.core.implementation.serializer.jackson"
- uid: "java.lang.reflect.Type"
  spec.java:
  - uid: "java.lang.reflect.Type"
    name: "Type"
    fullName: "java.lang.reflect.Type"
- uid: "T"
  spec.java:
  - uid: "T"
    name: "T"
    fullName: "T"
- uid: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.deserialize*"
  name: "<T>deserialize"
  nameWithType: "JacksonAdapter.<T>deserialize"
  fullName: "com.azure.core.implementation.serializer.jackson.JacksonAdapter.<T>deserialize"
  package: "com.azure.core.implementation.serializer.jackson"
- uid: "com.azure.core.http.HttpHeaders"
  name: "HttpHeaders"
  nameWithType: "HttpHeaders"
  fullName: "com.azure.core.http.HttpHeaders"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "java.util.List"
  name: "List"
  nameWithType: "List"
  fullName: "java.util.List"
- uid: "?"
  name: "?"
  nameWithType: "?"
  fullName: "?"
