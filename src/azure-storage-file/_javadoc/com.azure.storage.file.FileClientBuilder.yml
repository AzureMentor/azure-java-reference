### YamlMime:ManagedReference
items:
- uid: "com.azure.storage.file.FileClientBuilder"
  id: "FileClientBuilder"
  parent: "com.azure.storage.file"
  children:
  - "com.azure.storage.file.FileClientBuilder.FileClientBuilder()"
  - "com.azure.storage.file.FileClientBuilder.buildDirectoryAsyncClient()"
  - "com.azure.storage.file.FileClientBuilder.buildDirectoryClient()"
  - "com.azure.storage.file.FileClientBuilder.buildFileAsyncClient()"
  - "com.azure.storage.file.FileClientBuilder.buildFileClient()"
  - "com.azure.storage.file.FileClientBuilder.endpoint(java.lang.String)"
  - "com.azure.storage.file.FileClientBuilder.getClazz()"
  - "com.azure.storage.file.FileClientBuilder.resourcePath(java.lang.String)"
  - "com.azure.storage.file.FileClientBuilder.shareName(java.lang.String)"
  - "com.azure.storage.file.FileClientBuilder.snapshot(java.lang.String)"
  langs:
  - "java"
  name: "FileClientBuilder"
  nameWithType: "FileClientBuilder"
  fullName: "com.azure.storage.file.FileClientBuilder"
  type: "Class"
  package: "com.azure.storage.file"
  summary: "This class provides a fluent builder API to help aid the configuration and instantiation of the <xref uid=\"com.azure.storage.file.FileClient\" data-throw-if-not-resolved=\"false\">FileClients</xref>, <xref uid=\"com.azure.storage.file.FileAsyncClient\" data-throw-if-not-resolved=\"false\">FileAsyncClients</xref>, <xref uid=\"com.azure.storage.file.DirectoryClient\" data-throw-if-not-resolved=\"false\">DirectoryClients</xref>, and <xref uid=\"com.azure.storage.file.DirectoryAsyncClient\" data-throw-if-not-resolved=\"false\">DirectoryAsyncClients</xref>. Calling <xref uid=\"com.azure.storage.file.FileClientBuilder.buildFileClient()\" data-throw-if-not-resolved=\"false\">buildFileClient</xref>, <xref uid=\"com.azure.storage.file.FileClientBuilder.buildFileAsyncClient()\" data-throw-if-not-resolved=\"false\">buildFileAsyncClient</xref>, <xref uid=\"com.azure.storage.file.FileClientBuilder.buildDirectoryClient()\" data-throw-if-not-resolved=\"false\">buildDirectoryClient</xref>, or <xref uid=\"com.azure.storage.file.FileClientBuilder.buildDirectoryAsyncClient()\" data-throw-if-not-resolved=\"false\">buildDirectoryAsyncClient</xref> constructs an instance of <xref uid=\"com.azure.storage.file.FileClient\" data-throw-if-not-resolved=\"false\">FileClient</xref>, <xref uid=\"com.azure.storage.file.FileAsyncClient\" data-throw-if-not-resolved=\"false\">FileAsyncClient</xref>, <xref uid=\"com.azure.storage.file.DirectoryClient\" data-throw-if-not-resolved=\"false\">DirectoryClient</xref>, or <xref uid=\"com.azure.storage.file.DirectoryAsyncClient\" data-throw-if-not-resolved=\"false\">DirectoryAsyncClient</xref> respectively.\n\nThe client needs the endpoint of the Azure Storage File service, name of the share, and authorization credential. <xref uid=\"com.azure.storage.file.FileClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> gives the builder the endpoint and may give the builder the <xref uid=\"com.azure.storage.file.FileClientBuilder.shareName(java.lang.String)\" data-throw-if-not-resolved=\"false\">FileClientBuilder#shareName(String)</xref>, <xref uid=\"com.azure.storage.file.FileClientBuilder.resourcePath(java.lang.String)\" data-throw-if-not-resolved=\"false\">FileClientBuilder#resourcePath(String)</xref> and a <xref uid=\"\" data-throw-if-not-resolved=\"false\">SAS token</xref> that authorizes the client.\n\n**Instantiating a synchronous File Client with SAS token**\n\n\\{@codesnippet com.azure.storage.file.fileClient.instantiation.sastoken\\}\n\n**Instantiating an Asynchronous File Client with SAS token**\n\n\\{@codesnippet com.azure.storage.file.directoryClient.instantiation.sastoken\\}\n\nIf the `endpoint` doesn't contain the query parameters to construct a SAS token it may be set using <xref uid=\"\" data-throw-if-not-resolved=\"false\">sasToken</xref>.\n\n\\{@codesnippet com.azure.storage.file.fileClient.instantiation.credential\\} \\{@codesnippet com.azure.storage.file.fileAsyncClient.instantiation.credential\\}\n\nAnother way to authenticate the client is using a <xref uid=\"\" data-throw-if-not-resolved=\"false\">SharedKeyCredential</xref>. To create a SharedKeyCredential a connection string from the Storage File service must be used. Set the SharedKeyCredential with <xref uid=\"\" data-throw-if-not-resolved=\"false\">connectionString</xref>. If the builder has both a SAS token and SharedKeyCredential the SharedKeyCredential will be preferred when authorizing requests sent to the service.\n\n**Instantiating a synchronous File Client with connection string.**\n\n\\{@codesnippet com.azure.storage.file.directoryClient.instantiation.connectionstring\\}\n\n**Instantiating an Asynchronous File Client with connection string.**\n\n\\{@codesnippet com.azure.storage.file.directoryAsyncClient.instantiation.connectionstring\\}"
  syntax:
    content: "public class FileClientBuilder extends BaseFileClientBuilder<FileClientBuilder>"
  inheritance:
  - "java.lang.Object"
  - "com.azure.storage.common.BaseClientBuilder"
  - "com.azure.storage.file.BaseFileClientBuilder"
  inheritedMembers:
  - "com.azure.storage.common.BaseClientBuilder.addOptionalEncryptionPolicy(java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>)"
  - "com.azure.storage.common.BaseClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  - "com.azure.storage.common.BaseClientBuilder.buildPipeline()"
  - "com.azure.storage.common.BaseClientBuilder.configuration(com.azure.core.util.Configuration)"
  - "com.azure.storage.common.BaseClientBuilder.connectionString(java.lang.String)"
  - "com.azure.storage.common.BaseClientBuilder.credential(com.azure.storage.common.credentials.SharedKeyCredential)"
  - "com.azure.storage.common.BaseClientBuilder.endpoint(java.lang.String)"
  - "com.azure.storage.common.BaseClientBuilder.getClazz()"
  - "com.azure.storage.common.BaseClientBuilder.getConfiguration()"
  - "com.azure.storage.common.BaseClientBuilder.getPipeline()"
  - "com.azure.storage.common.BaseClientBuilder.hasCredential()"
  - "com.azure.storage.common.BaseClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  - "com.azure.storage.common.BaseClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  - "com.azure.storage.common.BaseClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  - "com.azure.storage.common.BaseClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)"
  - "com.azure.storage.common.BaseClientBuilder.sasToken(java.lang.String)"
  - "com.azure.storage.file.BaseFileClientBuilder.applyServiceSpecificValidations(com.azure.storage.common.policy.ResponseValidationPolicyBuilder)"
  - "com.azure.storage.file.BaseFileClientBuilder.credential(com.azure.core.credentials.TokenCredential)"
  - "com.azure.storage.file.BaseFileClientBuilder.getServiceUrlMidfix()"
  - "com.azure.storage.file.BaseFileClientBuilder.getUserAgentPolicy()"
  - "com.azure.storage.file.BaseFileClientBuilder.setAnonymousCredential()"
  - "java.lang.Object.clone()"
  - "java.lang.Object.equals(java.lang.Object)"
  - "java.lang.Object.finalize()"
  - "java.lang.Object.getClass()"
  - "java.lang.Object.hashCode()"
  - "java.lang.Object.notify()"
  - "java.lang.Object.notifyAll()"
  - "java.lang.Object.toString()"
  - "java.lang.Object.wait()"
  - "java.lang.Object.wait(long)"
  - "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.file.FileClientBuilder.FileClientBuilder()"
  id: "FileClientBuilder()"
  parent: "com.azure.storage.file.FileClientBuilder"
  langs:
  - "java"
  name: "FileClientBuilder()"
  nameWithType: "FileClientBuilder.FileClientBuilder()"
  fullName: "com.azure.storage.file.FileClientBuilder.FileClientBuilder()"
  overload: "com.azure.storage.file.FileClientBuilder.FileClientBuilder*"
  type: "Constructor"
  package: "com.azure.storage.file"
  summary: "Creates a builder instance that is able to configure and construct <xref uid=\"com.azure.storage.file.FileClient\" data-throw-if-not-resolved=\"false\">FileClients</xref> and <xref uid=\"com.azure.storage.file.FileAsyncClient\" data-throw-if-not-resolved=\"false\">FileAsyncClients</xref>."
  syntax:
    content: "public FileClientBuilder()"
- uid: "com.azure.storage.file.FileClientBuilder.buildDirectoryAsyncClient()"
  id: "buildDirectoryAsyncClient()"
  parent: "com.azure.storage.file.FileClientBuilder"
  langs:
  - "java"
  name: "buildDirectoryAsyncClient()"
  nameWithType: "FileClientBuilder.buildDirectoryAsyncClient()"
  fullName: "com.azure.storage.file.FileClientBuilder.buildDirectoryAsyncClient()"
  overload: "com.azure.storage.file.FileClientBuilder.buildDirectoryAsyncClient*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Creates a <xref uid=\"com.azure.storage.file.DirectoryAsyncClient\" data-throw-if-not-resolved=\"false\">DirectoryAsyncClient</xref> based on options set in the builder. Every time `buildFileAsyncClient()` is called a new instance of <xref uid=\"com.azure.storage.file.DirectoryAsyncClient\" data-throw-if-not-resolved=\"false\">DirectoryAsyncClient</xref> is created.\n\nIf <xref uid=\"\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then the `pipeline` and <xref uid=\"com.azure.storage.file.FileClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> are used to create the <xref uid=\"com.azure.storage.file.DirectoryAsyncClient\" data-throw-if-not-resolved=\"false\">client</xref>. All other builder settings are ignored."
  syntax:
    content: "public DirectoryAsyncClient buildDirectoryAsyncClient()"
    return:
      type: "com.azure.storage.file.DirectoryAsyncClient"
      description: "A ShareAsyncClient with the options set from the builder."
- uid: "com.azure.storage.file.FileClientBuilder.buildDirectoryClient()"
  id: "buildDirectoryClient()"
  parent: "com.azure.storage.file.FileClientBuilder"
  langs:
  - "java"
  name: "buildDirectoryClient()"
  nameWithType: "FileClientBuilder.buildDirectoryClient()"
  fullName: "com.azure.storage.file.FileClientBuilder.buildDirectoryClient()"
  overload: "com.azure.storage.file.FileClientBuilder.buildDirectoryClient*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Creates a <xref uid=\"com.azure.storage.file.DirectoryClient\" data-throw-if-not-resolved=\"false\">DirectoryClient</xref> based on options set in the builder. Every time `buildDirectoryClient()` is called a new instance of <xref uid=\"com.azure.storage.file.DirectoryClient\" data-throw-if-not-resolved=\"false\">DirectoryClient</xref> is created.\n\nIf <xref uid=\"\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then the `pipeline` and <xref uid=\"com.azure.storage.file.FileClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> are used to create the <xref uid=\"com.azure.storage.file.DirectoryClient\" data-throw-if-not-resolved=\"false\">client</xref>. All other builder settings are ignored."
  syntax:
    content: "public DirectoryClient buildDirectoryClient()"
    return:
      type: "com.azure.storage.file.DirectoryClient"
      description: "A DirectoryClient with the options set from the builder."
- uid: "com.azure.storage.file.FileClientBuilder.buildFileAsyncClient()"
  id: "buildFileAsyncClient()"
  parent: "com.azure.storage.file.FileClientBuilder"
  langs:
  - "java"
  name: "buildFileAsyncClient()"
  nameWithType: "FileClientBuilder.buildFileAsyncClient()"
  fullName: "com.azure.storage.file.FileClientBuilder.buildFileAsyncClient()"
  overload: "com.azure.storage.file.FileClientBuilder.buildFileAsyncClient*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Creates a <xref uid=\"com.azure.storage.file.FileAsyncClient\" data-throw-if-not-resolved=\"false\">FileAsyncClient</xref> based on options set in the builder. Every time `buildFileAsyncClient()` is called a new instance of <xref uid=\"com.azure.storage.file.FileAsyncClient\" data-throw-if-not-resolved=\"false\">FileAsyncClient</xref> is created.\n\nIf <xref uid=\"\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then the `pipeline` and <xref uid=\"com.azure.storage.file.FileClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> are used to create the <xref uid=\"com.azure.storage.file.FileAsyncClient\" data-throw-if-not-resolved=\"false\">client</xref>. All other builder settings are ignored."
  syntax:
    content: "public FileAsyncClient buildFileAsyncClient()"
    return:
      type: "com.azure.storage.file.FileAsyncClient"
      description: "A ShareAsyncClient with the options set from the builder."
- uid: "com.azure.storage.file.FileClientBuilder.buildFileClient()"
  id: "buildFileClient()"
  parent: "com.azure.storage.file.FileClientBuilder"
  langs:
  - "java"
  name: "buildFileClient()"
  nameWithType: "FileClientBuilder.buildFileClient()"
  fullName: "com.azure.storage.file.FileClientBuilder.buildFileClient()"
  overload: "com.azure.storage.file.FileClientBuilder.buildFileClient*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Creates a <xref uid=\"com.azure.storage.file.FileClient\" data-throw-if-not-resolved=\"false\">FileClient</xref> based on options set in the builder. Every time `buildFileClient()` is called a new instance of <xref uid=\"com.azure.storage.file.FileClient\" data-throw-if-not-resolved=\"false\">FileClient</xref> is created.\n\nIf <xref uid=\"\" data-throw-if-not-resolved=\"false\">pipeline</xref> is set, then the `pipeline` and <xref uid=\"com.azure.storage.file.FileClientBuilder.endpoint(java.lang.String)\" data-throw-if-not-resolved=\"false\">endpoint</xref> are used to create the <xref uid=\"com.azure.storage.file.FileClient\" data-throw-if-not-resolved=\"false\">client</xref>. All other builder settings are ignored."
  syntax:
    content: "public FileClient buildFileClient()"
    return:
      type: "com.azure.storage.file.FileClient"
      description: "A FileClient with the options set from the builder."
- uid: "com.azure.storage.file.FileClientBuilder.endpoint(java.lang.String)"
  id: "endpoint(java.lang.String)"
  parent: "com.azure.storage.file.FileClientBuilder"
  langs:
  - "java"
  name: "endpoint(String endpoint)"
  nameWithType: "FileClientBuilder.endpoint(String endpoint)"
  fullName: "com.azure.storage.file.FileClientBuilder.endpoint(String endpoint)"
  overload: "com.azure.storage.file.FileClientBuilder.endpoint*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Sets the endpoint for the Azure Storage File instance that the client will interact with.\n\nThe first path segment, if the endpoint contains path segments, will be assumed to be the name of the share that the client will interact with. Rest of the path segments should be the path of the file. It mush end up with the file name if more segments exist.\n\nQuery parameters of the endpoint will be parsed in an attempt to generate a SAS token to authenticate requests sent to the service."
  syntax:
    content: "public FileClientBuilder endpoint(String endpoint)"
    parameters:
    - id: "endpoint"
      type: "java.lang.String"
      description: "The URL of the Azure Storage File instance to send service requests to and receive responses\n from."
    return:
      type: "com.azure.storage.file.FileClientBuilder"
      description: "the updated FileClientBuilder object"
- uid: "com.azure.storage.file.FileClientBuilder.getClazz()"
  id: "getClazz()"
  parent: "com.azure.storage.file.FileClientBuilder"
  langs:
  - "java"
  name: "getClazz()"
  nameWithType: "FileClientBuilder.getClazz()"
  fullName: "com.azure.storage.file.FileClientBuilder.getClazz()"
  overload: "com.azure.storage.file.FileClientBuilder.getClazz*"
  type: "Method"
  package: "com.azure.storage.file"
  syntax:
    content: "protected Class<FileClientBuilder> getClazz()"
    return:
      type: "java.lang.Class<com.azure.storage.file.FileClientBuilder>"
- uid: "com.azure.storage.file.FileClientBuilder.resourcePath(java.lang.String)"
  id: "resourcePath(java.lang.String)"
  parent: "com.azure.storage.file.FileClientBuilder"
  langs:
  - "java"
  name: "resourcePath(String resourcePath)"
  nameWithType: "FileClientBuilder.resourcePath(String resourcePath)"
  fullName: "com.azure.storage.file.FileClientBuilder.resourcePath(String resourcePath)"
  overload: "com.azure.storage.file.FileClientBuilder.resourcePath*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Sets the file that the constructed clients will interact with"
  syntax:
    content: "public FileClientBuilder resourcePath(String resourcePath)"
    parameters:
    - id: "resourcePath"
      type: "java.lang.String"
      description: "Path of the file (or directory)."
    return:
      type: "com.azure.storage.file.FileClientBuilder"
      description: "the updated FileClientBuilder object"
- uid: "com.azure.storage.file.FileClientBuilder.shareName(java.lang.String)"
  id: "shareName(java.lang.String)"
  parent: "com.azure.storage.file.FileClientBuilder"
  langs:
  - "java"
  name: "shareName(String shareName)"
  nameWithType: "FileClientBuilder.shareName(String shareName)"
  fullName: "com.azure.storage.file.FileClientBuilder.shareName(String shareName)"
  overload: "com.azure.storage.file.FileClientBuilder.shareName*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Sets the share that the constructed clients will interact with"
  syntax:
    content: "public FileClientBuilder shareName(String shareName)"
    parameters:
    - id: "shareName"
      type: "java.lang.String"
      description: "Name of the share"
    return:
      type: "com.azure.storage.file.FileClientBuilder"
      description: "the updated FileClientBuilder object"
- uid: "com.azure.storage.file.FileClientBuilder.snapshot(java.lang.String)"
  id: "snapshot(java.lang.String)"
  parent: "com.azure.storage.file.FileClientBuilder"
  langs:
  - "java"
  name: "snapshot(String snapshot)"
  nameWithType: "FileClientBuilder.snapshot(String snapshot)"
  fullName: "com.azure.storage.file.FileClientBuilder.snapshot(String snapshot)"
  overload: "com.azure.storage.file.FileClientBuilder.snapshot*"
  type: "Method"
  package: "com.azure.storage.file"
  summary: "Sets the shareSnapshot that the constructed clients will interact with. This shareSnapshot must be linked to the share that has been specified in the builder."
  syntax:
    content: "public FileClientBuilder snapshot(String snapshot)"
    parameters:
    - id: "snapshot"
      type: "java.lang.String"
      description: "Identifier of the shareSnapshot"
    return:
      type: "com.azure.storage.file.FileClientBuilder"
      description: "the updated FileClientBuilder object"
references:
- uid: "com.azure.storage.file.FileClientBuilder.FileClientBuilder*"
  name: "FileClientBuilder"
  nameWithType: "FileClientBuilder.FileClientBuilder"
  fullName: "com.azure.storage.file.FileClientBuilder.FileClientBuilder"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.DirectoryAsyncClient"
  name: "DirectoryAsyncClient"
  nameWithType: "DirectoryAsyncClient"
  fullName: "com.azure.storage.file.DirectoryAsyncClient"
- uid: "com.azure.storage.file.FileClientBuilder.buildDirectoryAsyncClient*"
  name: "buildDirectoryAsyncClient"
  nameWithType: "FileClientBuilder.buildDirectoryAsyncClient"
  fullName: "com.azure.storage.file.FileClientBuilder.buildDirectoryAsyncClient"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.DirectoryClient"
  name: "DirectoryClient"
  nameWithType: "DirectoryClient"
  fullName: "com.azure.storage.file.DirectoryClient"
- uid: "com.azure.storage.file.FileClientBuilder.buildDirectoryClient*"
  name: "buildDirectoryClient"
  nameWithType: "FileClientBuilder.buildDirectoryClient"
  fullName: "com.azure.storage.file.FileClientBuilder.buildDirectoryClient"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileAsyncClient"
  name: "FileAsyncClient"
  nameWithType: "FileAsyncClient"
  fullName: "com.azure.storage.file.FileAsyncClient"
- uid: "com.azure.storage.file.FileClientBuilder.buildFileAsyncClient*"
  name: "buildFileAsyncClient"
  nameWithType: "FileClientBuilder.buildFileAsyncClient"
  fullName: "com.azure.storage.file.FileClientBuilder.buildFileAsyncClient"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClient"
  name: "FileClient"
  nameWithType: "FileClient"
  fullName: "com.azure.storage.file.FileClient"
- uid: "com.azure.storage.file.FileClientBuilder.buildFileClient*"
  name: "buildFileClient"
  nameWithType: "FileClientBuilder.buildFileClient"
  fullName: "com.azure.storage.file.FileClientBuilder.buildFileClient"
  package: "com.azure.storage.file"
- uid: "java.lang.String"
  spec.java:
  - uid: "java.lang.String"
    name: "String"
    fullName: "java.lang.String"
- uid: "com.azure.storage.file.FileClientBuilder.endpoint*"
  name: "endpoint"
  nameWithType: "FileClientBuilder.endpoint"
  fullName: "com.azure.storage.file.FileClientBuilder.endpoint"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClientBuilder.shareName*"
  name: "shareName"
  nameWithType: "FileClientBuilder.shareName"
  fullName: "com.azure.storage.file.FileClientBuilder.shareName"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClientBuilder.snapshot*"
  name: "snapshot"
  nameWithType: "FileClientBuilder.snapshot"
  fullName: "com.azure.storage.file.FileClientBuilder.snapshot"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.FileClientBuilder.resourcePath*"
  name: "resourcePath"
  nameWithType: "FileClientBuilder.resourcePath"
  fullName: "com.azure.storage.file.FileClientBuilder.resourcePath"
  package: "com.azure.storage.file"
- uid: "java.lang.Class<com.azure.storage.file.FileClientBuilder>"
  spec.java:
  - uid: "java.lang.Class"
    name: "Class"
    fullName: "java.lang.Class"
  - name: "<"
    fullName: "<"
  - uid: "com.azure.storage.file.FileClientBuilder"
    name: "FileClientBuilder"
    fullName: "com.azure.storage.file.FileClientBuilder"
  - name: ">"
    fullName: ">"
- uid: "com.azure.storage.file.FileClientBuilder.getClazz*"
  name: "getClazz"
  nameWithType: "FileClientBuilder.getClazz"
  fullName: "com.azure.storage.file.FileClientBuilder.getClazz"
  package: "com.azure.storage.file"
- uid: "com.azure.storage.file.BaseFileClientBuilder<com.azure.storage.file.FileClientBuilder>"
  name: "BaseFileClientBuilder<FileClientBuilder>"
  nameWithType: "BaseFileClientBuilder<FileClientBuilder>"
  fullName: "com.azure.storage.file.BaseFileClientBuilder<com.azure.storage.file.FileClientBuilder>"
- uid: "com.azure.storage.common.BaseClientBuilder.credential(com.azure.storage.common.credentials.SharedKeyCredential)"
  name: "BaseClientBuilder.credential(SharedKeyCredential)"
  nameWithType: "BaseClientBuilder.credential(SharedKeyCredential)"
  fullName: "com.azure.storage.common.BaseClientBuilder.credential(com.azure.storage.common.credentials.SharedKeyCredential)"
- uid: "java.lang.Object.wait()"
  name: "Object.wait()"
  nameWithType: "Object.wait()"
  fullName: "java.lang.Object.wait()"
- uid: "java.lang.Object.finalize()"
  name: "Object.finalize()"
  nameWithType: "Object.finalize()"
  fullName: "java.lang.Object.finalize()"
- uid: "com.azure.storage.common.BaseClientBuilder.buildPipeline()"
  name: "BaseClientBuilder.buildPipeline()"
  nameWithType: "BaseClientBuilder.buildPipeline()"
  fullName: "com.azure.storage.common.BaseClientBuilder.buildPipeline()"
- uid: "com.azure.storage.common.BaseClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)"
  name: "BaseClientBuilder.retryOptions(RequestRetryOptions)"
  nameWithType: "BaseClientBuilder.retryOptions(RequestRetryOptions)"
  fullName: "com.azure.storage.common.BaseClientBuilder.retryOptions(com.azure.storage.common.policy.RequestRetryOptions)"
- uid: "com.azure.storage.file.BaseFileClientBuilder.getServiceUrlMidfix()"
  name: "BaseFileClientBuilder.getServiceUrlMidfix()"
  nameWithType: "BaseFileClientBuilder.getServiceUrlMidfix()"
  fullName: "com.azure.storage.file.BaseFileClientBuilder.getServiceUrlMidfix()"
- uid: "java.lang.Object.clone()"
  name: "Object.clone()"
  nameWithType: "Object.clone()"
  fullName: "java.lang.Object.clone()"
- uid: "com.azure.storage.common.BaseClientBuilder.sasToken(java.lang.String)"
  name: "BaseClientBuilder.sasToken(String)"
  nameWithType: "BaseClientBuilder.sasToken(String)"
  fullName: "com.azure.storage.common.BaseClientBuilder.sasToken(java.lang.String)"
- uid: "com.azure.storage.file.BaseFileClientBuilder.applyServiceSpecificValidations(com.azure.storage.common.policy.ResponseValidationPolicyBuilder)"
  name: "BaseFileClientBuilder.applyServiceSpecificValidations(ResponseValidationPolicyBuilder)"
  nameWithType: "BaseFileClientBuilder.applyServiceSpecificValidations(ResponseValidationPolicyBuilder)"
  fullName: "com.azure.storage.file.BaseFileClientBuilder.applyServiceSpecificValidations(com.azure.storage.common.policy.ResponseValidationPolicyBuilder)"
- uid: "com.azure.storage.common.BaseClientBuilder.getConfiguration()"
  name: "BaseClientBuilder.getConfiguration()"
  nameWithType: "BaseClientBuilder.getConfiguration()"
  fullName: "com.azure.storage.common.BaseClientBuilder.getConfiguration()"
- uid: "java.lang.Object.wait(long)"
  name: "Object.wait(long)"
  nameWithType: "Object.wait(long)"
  fullName: "java.lang.Object.wait(long)"
- uid: "com.azure.storage.common.BaseClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
  name: "BaseClientBuilder.httpLogOptions(HttpLogOptions)"
  nameWithType: "BaseClientBuilder.httpLogOptions(HttpLogOptions)"
  fullName: "com.azure.storage.common.BaseClientBuilder.httpLogOptions(com.azure.core.http.policy.HttpLogOptions)"
- uid: "java.lang.Object.getClass()"
  name: "Object.getClass()"
  nameWithType: "Object.getClass()"
  fullName: "java.lang.Object.getClass()"
- uid: "java.lang.Object.hashCode()"
  name: "Object.hashCode()"
  nameWithType: "Object.hashCode()"
  fullName: "java.lang.Object.hashCode()"
- uid: "com.azure.storage.common.BaseClientBuilder.addOptionalEncryptionPolicy(java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>)"
  name: "BaseClientBuilder.addOptionalEncryptionPolicy(List<HttpPipelinePolicy>)"
  nameWithType: "BaseClientBuilder.addOptionalEncryptionPolicy(List<HttpPipelinePolicy>)"
  fullName: "com.azure.storage.common.BaseClientBuilder.addOptionalEncryptionPolicy(java.util.List<com.azure.core.http.policy.HttpPipelinePolicy>)"
- uid: "java.lang.Object.wait(long,int)"
  name: "Object.wait(long,int)"
  nameWithType: "Object.wait(long,int)"
  fullName: "java.lang.Object.wait(long,int)"
- uid: "com.azure.storage.common.BaseClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
  name: "BaseClientBuilder.pipeline(HttpPipeline)"
  nameWithType: "BaseClientBuilder.pipeline(HttpPipeline)"
  fullName: "com.azure.storage.common.BaseClientBuilder.pipeline(com.azure.core.http.HttpPipeline)"
- uid: "com.azure.storage.file.BaseFileClientBuilder.getUserAgentPolicy()"
  name: "BaseFileClientBuilder.getUserAgentPolicy()"
  nameWithType: "BaseFileClientBuilder.getUserAgentPolicy()"
  fullName: "com.azure.storage.file.BaseFileClientBuilder.getUserAgentPolicy()"
- uid: "java.lang.Object.notify()"
  name: "Object.notify()"
  nameWithType: "Object.notify()"
  fullName: "java.lang.Object.notify()"
- uid: "java.lang.Object.notifyAll()"
  name: "Object.notifyAll()"
  nameWithType: "Object.notifyAll()"
  fullName: "java.lang.Object.notifyAll()"
- uid: "java.lang.Object.equals(java.lang.Object)"
  name: "Object.equals(Object)"
  nameWithType: "Object.equals(Object)"
  fullName: "java.lang.Object.equals(java.lang.Object)"
- uid: "com.azure.storage.common.BaseClientBuilder.endpoint(java.lang.String)"
  name: "BaseClientBuilder.endpoint(String)"
  nameWithType: "BaseClientBuilder.endpoint(String)"
  fullName: "com.azure.storage.common.BaseClientBuilder.endpoint(java.lang.String)"
- uid: "com.azure.storage.file.BaseFileClientBuilder.credential(com.azure.core.credentials.TokenCredential)"
  name: "BaseFileClientBuilder.credential(TokenCredential)"
  nameWithType: "BaseFileClientBuilder.credential(TokenCredential)"
  fullName: "com.azure.storage.file.BaseFileClientBuilder.credential(com.azure.core.credentials.TokenCredential)"
- uid: "com.azure.storage.common.BaseClientBuilder.hasCredential()"
  name: "BaseClientBuilder.hasCredential()"
  nameWithType: "BaseClientBuilder.hasCredential()"
  fullName: "com.azure.storage.common.BaseClientBuilder.hasCredential()"
- uid: "com.azure.storage.common.BaseClientBuilder.httpClient(com.azure.core.http.HttpClient)"
  name: "BaseClientBuilder.httpClient(HttpClient)"
  nameWithType: "BaseClientBuilder.httpClient(HttpClient)"
  fullName: "com.azure.storage.common.BaseClientBuilder.httpClient(com.azure.core.http.HttpClient)"
- uid: "com.azure.storage.common.BaseClientBuilder.getClazz()"
  name: "BaseClientBuilder.getClazz()"
  nameWithType: "BaseClientBuilder.getClazz()"
  fullName: "com.azure.storage.common.BaseClientBuilder.getClazz()"
- uid: "com.azure.storage.common.BaseClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
  name: "BaseClientBuilder.addPolicy(HttpPipelinePolicy)"
  nameWithType: "BaseClientBuilder.addPolicy(HttpPipelinePolicy)"
  fullName: "com.azure.storage.common.BaseClientBuilder.addPolicy(com.azure.core.http.policy.HttpPipelinePolicy)"
- uid: "com.azure.storage.common.BaseClientBuilder.configuration(com.azure.core.util.Configuration)"
  name: "BaseClientBuilder.configuration(Configuration)"
  nameWithType: "BaseClientBuilder.configuration(Configuration)"
  fullName: "com.azure.storage.common.BaseClientBuilder.configuration(com.azure.core.util.Configuration)"
- uid: "java.lang.Object.toString()"
  name: "Object.toString()"
  nameWithType: "Object.toString()"
  fullName: "java.lang.Object.toString()"
- uid: "com.azure.storage.file.BaseFileClientBuilder.setAnonymousCredential()"
  name: "BaseFileClientBuilder.setAnonymousCredential()"
  nameWithType: "BaseFileClientBuilder.setAnonymousCredential()"
  fullName: "com.azure.storage.file.BaseFileClientBuilder.setAnonymousCredential()"
- uid: "com.azure.storage.common.BaseClientBuilder.getPipeline()"
  name: "BaseClientBuilder.getPipeline()"
  nameWithType: "BaseClientBuilder.getPipeline()"
  fullName: "com.azure.storage.common.BaseClientBuilder.getPipeline()"
- uid: "com.azure.storage.common.BaseClientBuilder.connectionString(java.lang.String)"
  name: "BaseClientBuilder.connectionString(String)"
  nameWithType: "BaseClientBuilder.connectionString(String)"
  fullName: "com.azure.storage.common.BaseClientBuilder.connectionString(java.lang.String)"
- uid: "java.lang.Class"
  name: "Class"
  nameWithType: "Class"
  fullName: "java.lang.Class"
- uid: "com.azure.storage.file.BaseFileClientBuilder"
  name: "BaseFileClientBuilder"
  nameWithType: "BaseFileClientBuilder"
  fullName: "com.azure.storage.file.BaseFileClientBuilder"
- uid: "com.azure.core.http.policy.HttpPipelinePolicy>)"
  name: "HttpPipelinePolicy>)"
  nameWithType: "HttpPipelinePolicy>)"
  fullName: "com.azure.core.http.policy.HttpPipelinePolicy>)"
- uid: "com.azure.storage.common.BaseClientBuilder.addOptionalEncryptionPolicy(java.util.List"
  name: "BaseClientBuilder.addOptionalEncryptionPolicy(List"
  nameWithType: "BaseClientBuilder.addOptionalEncryptionPolicy(List"
  fullName: "com.azure.storage.common.BaseClientBuilder.addOptionalEncryptionPolicy(java.util.List"
